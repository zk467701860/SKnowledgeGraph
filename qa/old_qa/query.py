# -*- coding:utf8 -*-

class Query:
    '''
    query_type:
    1：根据功能查询实体属性描述。
       即根据在所属语言中的功能，查询包含NP[0]关键字的实体的功能属性描述。
       语言字段不为空
    2：根据相似查询实体名字。
       即根据与NP[1]及之后的名词词组的相似关系，在语言中查询包含NP[0]关键字的实体。
       语言字段不为空
    3：根据线程安全查询实体名字。
       即根据实体描述中出现NP[1]及之后的名词词组中的关于thread safe的关键字，查询包含NP[0]关键字的实体。
       一般NP最后一个元素是语言，语言字段为空
    4：根据版本查询实体属性描述。
       即根据NP[1]及之后的名词词组中包含api版本的词组，查询包含NP[0]关键字的实体的版本废弃属性描述。
       NP[1]及之后的不包含api版本的词组表示对于NP[0]的其他描述词组，一般NP最后一个元素是语言，语言字段为空
    5：根据实体查询实体描述。
       即根据包含NP[0]关键字的实体以及后续可能存在的其他数组中的元素，查询包含NP[0]关键字的实体描述。
       一般NP最后一个元素是语言，语言字段为空
    6：根据实体查询实体属性发明者。
       即根据包含NP[0]关键字的实体查询其属性中的发明者。
       一般NP只有一个元素，语言字段为空
    7：根据实体查询实体属性代码库链接。
       即根据包含NP[0]关键字的实体查询其属性中的代码库链接。
       一般NP只有一个元素，语言字段为空
    8：单纯通过所有关键字搜索实体名字。
       即根据NP数组所有元素查找包含NP[0]关键字的实体。
       NP最后一个元素很少是语言，语言字段为空
    ！！！
    注意：还需结合TargetType，它标识了NP[0]的类型；JJ是可能出现的形容词，可以进行使用。
    '''
    def __init__(self):
        self.query_type = 0