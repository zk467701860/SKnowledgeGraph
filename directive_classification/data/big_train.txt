 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param timestamp is the timestamp's date and time. It must not be null	__label__NotNullDirective
 @param value the value to add, must not be null	__label__NotNullDirective
 @param bindingManager The binding manager which will provide the callback; must not be null.	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if list is null	__label__NotNullDirective
 @throws IllegalArgumentException if list is null	__label__NotNullDirective
 @throws IllegalArgumentException if list is null	__label__NotNullDirective
 @throws NullPointerException if the entry is null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if bag or transformer is null	__label__NotNullDirective
 @throws IllegalArgumentException if bag or predicate is null	__label__NotNullDirective
 @exception IllegalArgumentException if groupID is null	__label__NotNullDirective
 Note: You must specify the parameter's SQL type.	__label__NotNullDirective
 @param signerCertPath The signer's certificate path. It must not be null.	__label__NotNullDirective
 @param predicate1 the first predicate, may not be null	__label__NotNullDirective
 @param predicate2 the second predicate, may not be null	__label__NotNullDirective
 @throws IllegalArgumentException if either predicate is null	__label__NotNullDirective
 @param iterator the iterator to use, not null	__label__NotNullDirective
 @param buffer the buffer to wrap, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the predicates collection is null	__label__NotNullDirective
 @param coll the collection to get the cardinality map for, must not be null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param enumeration the enumeration of elements to add, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param iterable the iterable of elements to add, must not be null	__label__NotNullDirective
 @param a the collection to subtract from, must not be null	__label__NotNullDirective
 @param map the map to transform, must not be null, typically empty	__label__NotNullDirective
 @throws IllegalArgumentException if the SortedBag is null	__label__NotNullDirective
 @throws IllegalArgumentException if the map is null	__label__NotNullDirective
 @param bag the bag to predicate, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param list the list to make unmodifiable, must not be null	__label__NotNullDirective
 @param collection the collection to add to, must not be null	__label__NotNullDirective
 @param bag the bag whose unmodifiable view is to be returned, must not be null	__label__NotNullDirective
 @param map the map whose size to fix, must not be null	__label__NotNullDirective
 @param transformers the transformers to chain, not copied, no nulls	__label__NotNullDirective
 @throws NullPointerException if node is null	__label__NotNullDirective
 The comparator throws NullPointerException if a null value is compared.	__label__NotNullDirective
 @throws NullPointerException if array is null	__label__NotNullDirective
 @throws IllegalArgumentException if the predicate is null	__label__NotNullDirective
 @param defaultKeyFormatter the default key formatter. Must not be null.	__label__NotNullDirective
 Even in the implementations that permit it, null should not be inserted into a Queue, as null is also used as a special return value by the poll method to indicate that the queue contains no elements.	__label__NotNullDirective
 This method requires that none of its arguments is null.	__label__NotNullDirective
 Must not be null.	__label__NotNullDirective
 The given element array must not be null.	__label__NotNullDirective
 @exception NullPointerException if filename is null	__label__NotNullDirective
 @param exception The ExecutionException, never null.	__label__NotNullDirective
 @return a MemoryUsage object represented by cd if cd is not null; null otherwise.	__label__NullSemanticsDirective
 @param map The map to print, may be null. If null, the text 'null' is output.	__label__NullSemanticsDirective
 null means that the catalog name should not be used to narrow the search	__label__NullSemanticsDirective
 null means drop catalog name from the selection criteria	__label__NullSemanticsDirective
 If issuerDN is not null, it should contain a distinguished name, in RFC 2253 format.	__label__NullSemanticsDirective
 @param transformer the transformer to use, see above, null uses no effect transformer	__label__NullSemanticsDirective
 @param keyPredicate the predicate to validate the keys, null means no check	__label__NullSemanticsDirective
 @param valueTransformer the transformer to use for value conversion, null means no transformation	__label__NullSemanticsDirective
 @param keyTransformer the transformer to use for key conversion, null means no transformation	__label__NullSemanticsDirective
 @param keyPred the predicate for keys, null means no check	__label__NullSemanticsDirective
 @param valuePred the predicate for values, null means no check	__label__NullSemanticsDirective
 @param defaultClosure the closure to use if no match, null means nop	__label__NullSemanticsDirective
 @param actions should be null	__label__NullSemanticsDirective
 The actions should be null; they are ignored.	__label__NullSemanticsDirective
 the actions String is currently unused and should be null.	__label__NullSemanticsDirective
 A null value indicates that the elements' {@linkplain Comparable natural ordering} should be used.	__label__NullSemanticsDirective
 The group name must not be null or the empty string.	__label__NullSemanticsDirective
 The timeout must be > 0.	__label__NumberRangeDirective
 minimumIntegerDigits must be <= maximumIntegerDigits.	__label__NumberRangeDirective
 Hours must be between 0 to 23	__label__NumberRangeDirective
 The ttl is an unsigned 8-bit quantity, and so must be in the range 0 <= ttl <= 0xFF	__label__NumberRangeDirective
 @param size the size to which to set the receive buffer size. This value must be greater than 0	__label__NumberRangeDirective
 @throws IllegalArgumentException if timeout is negative.	__label__NumberRangeDirective
 @param id the thread ID of the thread. Must be positive.	__label__NumberRangeDirective
 If the argument is any value in the range 0x7ff0000000000001L through 0x7fffffffffffffffL or in the range 0xfff0000000000001L through 0xffffffffffffffffL, the result is a NaN. all NaN bit patterns, quiet or signaling, must be in the NaN range identified above.	__label__NumberRangeDirective
 @param valueType the type of reference to use for values; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param keyType the type of reference to use for keys; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param valueType the type of reference to use for values; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param length the new length, must be > 0	__label__NumberRangeDirective
 @throws IndexOutOfBoundsException for an illegal endpoint index value (fromIndex < 0 || toIndex > size || fromIndex > toIndex)	__label__NumberRangeDirective
 @param month the month between 0-11. @param date the day of the month between 1-31. @param hrs the hours between 0-23. @param min the minutes between 0-59. @param sec the seconds between 0-59.	__label__NumberRangeDirective
 @param nanos additional time, in nanoseconds range 0-999999.	__label__NumberRangeDirective
 @param name Permission name. Must be either "monitor" or "control".	__label__StringFormatDirective
 The filename argument must be a complete path name, (for example Runtime.getRuntime().load("/home/avh/lib/libX11.so");).	__label__StringFormatDirective
 The characters in the string must all be decimal digits, except that the first character may be an ASCII minus sign '-' (\u002D') to indicate a negative value.	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 In that case, characters that cannot be represented in ISO-8859-1 encoding must be represented by Unicode Escapes, whereas the other constructor which takes a Reader does not have that limitation.	__label__StringFormatDirective
 The key for any entry in such a map must be in one of the following two formats: * . The cryptographic service name must not contain any dots. The value associated with the key must be an empty string. A provider satisfies this selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service. * . The cryptographic service name must not contain any dots. There must be one or more space charaters between the and the . The value associated with the key must be a non-empty string. A provider satisfies this selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service and its implementation meets the constraint expressed by the specified attribute name/value pair.	__label__StringFormatDirective
 The algorithm name must be specified, as there is no default.	__label__StringFormatDirective
 If key is not null, it should contain a single DER encoded SubjectPublicKeyInfo structure, as defined in X.509.	__label__StringFormatDirective
 The mode argument specifies the access mode in which the file is to be opened. The permitted values and their meanings are:      Value            Meaning     "r"  Open for reading only. Invoking any of the write methods of the resulting object will cause an {@link java.io.IOException} to be thrown.     "rw"  Open for reading and writing. If the file does not already exist then an attempt will be made to create it.     "rws"  Open for reading and writing, as with "rw", and also require that every update to the file's content or metadata be written synchronously to the underlying storage device.     "rwd"    Open for reading and writing, as with "rw", and also require that every update to the file's content be written synchronously to the underlying storage device.	__label__StringFormatDirective
 It is assumed that all characters in the encoded string are one of the following: "a" through "z", "A" through "Z", "0" through "9", and "-", "_", ".", and "*". The character "%" is allowed but is interpreted as the start of a special escaped sequence.	__label__StringFormatDirective
 @throws IllegalFormatException If a format string contains an illegal syntax, a format specifier that is incompatible with the given arguments, insufficient arguments given the format string, or other illegal conditions. For specification of all possible formatting errors, see the Details section of the formatter class specification.	__label__StringFormatDirective
 All elements inserted into the set must implement the {@link Comparable} interface	__label__MethodParameterTypeDirective
 @param type The content type to register this strategy with, must implement {@link IFormattingStrategyExtension}	__label__MethodParameterTypeDirective
 The value must implement Comparable	__label__MethodParameterTypeDirective
 The key must implement Comparable.	__label__MethodParameterTypeDirective
 The value must implement Comparable.	__label__MethodParameterTypeDirective
 Exceptions are thrown for problems with the InputStream and for classes that should not be deserialized. All exceptions are fatal to the InputStream and leave it in an indeterminate state; it is up to the caller to ignore or recover the stream state. @throws ClassNotFoundException Class of a serialized object cannot be found. @throws InvalidClassException Something is wrong with a class used by serialization. @throws StreamCorruptedException Control information in the stream is inconsistent. @throws OptionalDataException Primitive data was found in the stream instead of objects.	__label__MethodParameterTypeDirective
 The property must implement org.eclipse.jface.text#IRegion.	__label__MethodParameterTypeDirective
 All keys inserted into the new map must implement the {@link Comparable} interface	__label__MethodParameterTypeDirective
 All elements in this range must implement the {@link Comparable} interface	__label__MethodParameterTypeDirective
 All elements inserted into a sorted set must implement the Comparable interface (or be accepted by the specified comparator).	__label__MethodParameterTypeDirective
 @throws ArrayStoreException if the runtime type of the specified array is not a supertype of the runtime type of every element in this queue	__label__MethodParameterTypeDirective
 @throws ArrayStoreException if the runtime type of the specified array is not a supertype of the runtime type of every element in this list	__label__MethodParameterTypeDirective
 @throws ArrayStoreException if the runtime type of the specified array is not a supertype of the runtime type of every element in this queue	__label__MethodParameterTypeDirective
 The length argument must be less than or equal to buf.length.	__label__MethodParameterCorrelationDirective
 aContainer must be a focus cycle root of aComponent or a focus traversal policy provider.	__label__MethodParameterCorrelationDirective
 If the second argument is an InputStream then the stream must contain the number of bytes specified by scaleOrLength.	__label__MethodParameterCorrelationDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__MethodParameterCorrelationDirective
 A SubformatPattern must be a valid pattern string for the Format subclass used.	__label__MethodParameterCorrelationDirective
 @throws IllegalArgumentException if end index is before the start	__label__MethodParameterCorrelationDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__MethodParameterCorrelationDirective
 . @throws ArithmeticException if { divisor==0} @throws ArithmeticException if { mc.precision} {@literal >} 0 and the result requires a precision of more than { mc.precision} digits.	__label__MethodParameterCorrelationDirective
 @return the dialog, after being closed by the user, which the client can only call getReturnCode() or getToggleState()	__label__Post-CallDirective
 The resources returned from this method are reference counted and may be shared internally with other resource managers. They should never be disposed outside of the ResourceManager framework, or it will cause exceptions in other code that shares them. For example, never call {@link org.eclipse.swt.graphics.Resource#dispose()} on anything returned from this method.	__label__Post-CallDirective
 @return the message, or null if none	__label__ReturnValueDirective
 If a thread does not lock any object monitor or lockedMonitors is false, the returned ThreadInfo object will have an empty MonitorInfo array. Similarly, if a thread does not lock any synchronizer or lockedSynchronizers is false, the returned ThreadInfo object will have an empty LockInfo array.	__label__ReturnValueDirective
 @return the accelerator text, or null	__label__ReturnValueDirective
 @return settings the dialog settings used to store the dialog's location and/or size, or null if the dialog's bounds should never be stored.	__label__ReturnValueDirective
 @return The default look-up; never null.	__label__ReturnValueDirective
 @return The decoded scheme-specific part of this URI (never null)	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic. The result of expm1 for any finite input must be greater than or equal to -1.0.	__label__ReturnValueDirective
 If a subclass that overrides this method creates a Composite that has a layout with default margins (for example, a GridLayout) it is expected to set the margins of this Layout to 0 pixels.	__label__ReturnValueDirective
 If the superclass is a parameterized type, the Type object returned must accurately reflect the actual type parameters used in the source code.	__label__ReturnValueDirective
 The certificate chain must have been associated with the alias by a call to setKeyEntry, or by a call to setEntry with a PrivateKeyEntry.	__label__ReturnValueDirective
 keySpec identifies the specification class in which the key material should be returned. It could, for example, be DSAPublicKeySpec.class, to indicate that the key material should be returned in an instance of the DSAPublicKeySpec class.	__label__ReturnValueDirective
 @return the predicate as the only element in an array	__label__ReturnValueDirective
 If this collection makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.	__label__ReturnValueDirective
 Gets the next key after the key specified, always null.	__label__ReturnValueDirective
 A certificate factory for X.509 must return certificates that are an instance of java.security.cert.X509Certificate, and CRLs that are an instance of java.security.cert.X509CRL	__label__ReturnValueDirective
 A cryptographically strong random number minimally complies with the statistical random number generator tests specified in FIPS 140-2, Security Requirements for Cryptographic Modules, section 4.9.1. Additionally, SecureRandom must produce non-deterministic output. Therefore any seed material passed to a SecureRandom object must be unpredictable, and all SecureRandom output sequences must be cryptographically strong, as described in RFC 1750: Randomness Recommendations for Security.	__label__ReturnValueDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 Due to the platform-dependent nature of the behavior of this constructor, extreme care should be exercised in its use.	__label__MethodCallVisibilityDirective
 Ordinary applications should have no need to invoke any of these methods, which can be identified by the fact that they are declared to throw {@link BackingStoreException}.	__label__MethodCallVisibilityDirective
 Constructor whose use should be avoided.	__label__MethodCallVisibilityDirective
 The string representation of this command -- for debugging purposes only.	__label__MethodCallVisibilityDirective
 Internal debug method for printing statistics about this manager to System.out.	__label__MethodCallVisibilityDirective
 This string is for debugging purposes only, and is not meant to be displayed to the user.	__label__MethodCallVisibilityDirective
 Returns a string representation of this contribution item suitable only for debugging.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: fail-fast iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 It should never be accessed by application code.	__label__MethodCallVisibilityDirective
 This class may be instantiated	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 This class may be used as is	__label__MethodCallVisibilityDirective
 Clients may instantiate this class	__label__MethodCallVisibilityDirective
 Clients may use this class, although this is not usually needed except when implementing a custom template preference page or template store.	__label__MethodCallVisibilityDirective
 Subclasses may use this.	__label__MethodCallVisibilityDirective
 This is used for computing the initial window position, and subclasses can use this as a utility method if they want to limit the region in which the window may be moved.	__label__MethodCallVisibilityDirective
 @exception IOException if an I/O error has occurred	__label__ExceptionRaisingDirective
 @exception IOException if an I/O error occurs.	__label__ExceptionRaisingDirective
 @throws SQLException if an error occurs releasing the Blob's resources @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @exception IOException if an I/O error occurs.	__label__ExceptionRaisingDirective
 Unlike other output streams, a PrintStream never throws an IOException; instead, exceptional situations merely set an internal flag that can be tested via the checkError method.	__label__ExceptionRaisingDirective
 The view's iterator is a "weakly consistent" iterator that will never throw {@link ConcurrentModificationException}, and guarantees to traverse elements as they existed upon construction of the iterator, and may (but is not guaranteed to) reflect any modifications subsequent to construction.	__label__ExceptionRaisingDirective
 @throws NullPointerException If the format is null	__label__ExceptionRaisingDirective
 @throws IllegalArgumentException if the collection is null	__label__ExceptionRaisingDirective
 l @throws IllegalArgumentException if obj1 or obj2 are not known to this Comparator and an alternative behavior has not been set via {@link #setUnknownObjectBehavior(UnknownObjectBehavior)}.	__label__ExceptionRaisingDirective
 @throws IOException if an IO error occurs	__label__ExceptionRaisingDirective
 @throws IOException If an I/O error occurs, which is possible because the construction of the canonical pathname may require filesystem queries @throws SecurityException If a required system property value cannot be accessed, or if a security manager exists and its {@link java.lang.SecurityManager#checkRead} method denies read access to the file	__label__ExceptionRaisingDirective
 @exception IOException if an error is encountered.	__label__ExceptionRaisingDirective
 @exception SQLException if a database access error occurs @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @exception SQLException if the columnLabel is not valid; if a database access error occurs; the result set concurrency is CONCUR_READ_ONLY or this method is called on a closed result set @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @exception SQLException if a database access error occurs	__label__ExceptionRaisingDirective
 @exception EOFException if this input stream reaches the end before reading two bytes. @exception IOException the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs. @see java.io.FilterInputStream#in	__label__ExceptionRaisingDirective
 Each method of a remote interface, an interface that extends java.rmi.Remote, must list RemoteException in its throws clause.	__label__ExceptionRaisingDirective
 @exception org.eclipse.swt.SWTException            o {@link org.eclipse.swt.SWT#ERROR_WIDGET_DISPOSED} - if the receiver has been disposed           o {@link org.eclipse.swt.SWT#ERROR_THREAD_INVALID_ACCESS} - if not called from the thread that created the receiver	__label__ExceptionRaisingDirective
 If any exception is raised during the remote invocation, invoke should take care of cleaning up the connection before raising the "user" or remote exception.	__label__ExceptionRaisingDirective
 @exception IllegalArgumentException if the given KeyStore.LoadStoreParameter input is not recognized @exception IOException if there is an I/O or format problem with the keystore data. If the error is due to an incorrect ProtectionParameter (e.g. wrong password) the {@link Throwable#getCause cause} of the IOException should be an UnrecoverableKeyException	__label__ExceptionRaisingDirective
 @throws IllegalMonitorStateException if releasing would place this synchronizer in an illegal state. This exception must be thrown in a consistent fashion for synchronization to work correctly.	__label__ExceptionRaisingDirective
 Runs the runnable. All ISafeRunnableRunners must catch any exception thrown by the ISafeRunnable and pass the exception to ISafeRunnable.handleException().	__label__ExceptionRaisingDirective
 If a Registry method chooses to deny access for a given invocation, its implementation may throw {@link java.rmi.AccessException}, which (because it extends {@link java.rmi.RemoteException}) will be wrapped in a {@link java.rmi.ServerException} when caught by a remote client.	__label__ExceptionRaisingDirective
 @throws IllegalArgumentException if mcastaddr is null or is a SocketAddress subclass not supported by this socket	__label__ExceptionRaisingDirective
 @exception SQLException if a database access error occurs	__label__ExceptionRaisingDirective
 @exception SQLException if the columnIndex is not valid; if a database access error occurs; the result set concurrency is CONCUR_READ_ONLY or this method is called on a closed result set @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 The url that is passed as an argument must specify an absolute URL.	__label__MiscellaneousMethodCallDirective
 The url argument must specify an absolute URL.	__label__MiscellaneousMethodCallDirective
 @param columnNamePattern a column name pattern; must match the column name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 IPv4 address byte array must be 4 bytes long and IPv6 byte array must be 16 bytes long	__label__MiscellaneousMethodCallDirective
 The given CompositeData must contain the following attributes as well as the attributes specified in the mapped type for the {@link LockInfo} class	__label__MiscellaneousMethodCallDirective
 The range must be sorted (as by the {@link #sort(byte[], int, int)} method) prior to making this call.	__label__MiscellaneousMethodCallDirective
 The array must be sorted into ascending order according to the specified comparator (as by the {@link #sort(Object[], Comparator) sort(T[], Comparator)} method) prior to making this call.	__label__MiscellaneousMethodCallDirective
 @param schemaPattern a schema name pattern; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param procedureNamePattern a procedure name pattern; must match the procedure name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param schemaPattern a schema name pattern; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param functionNamePattern a function name pattern; must match the function name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param table a table name; must match the table name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param schemaPattern a schema name pattern; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 The specified map must be empty at the time this method is invoked, and should not be accessed directly after this method returns.	__label__MiscellaneousMethodCallDirective
 @param arg the acquire argument. This value is always the one passed to an acquire method, or is the value saved on entry to a condition wait. The value is otherwise uninterpreted and can represent anything you like.	__label__MiscellaneousMethodCallDirective
 The scanner is assumed to return only token that carry text attributes.	__label__MiscellaneousMethodCallDirective
 Clients may neither instantiate nor extend this class.	__label__ExtensibleClassIdentificationDirective
 Clients may instantiate this class, but must not extend.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 Not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be extended by clients.	__label__ExtensibleClassIdentificationDirective
 This interface should not be implemented or extended by clients.	__label__ExtensibleClassIdentificationDirective
 Clients may instantiate or extend this interface.	__label__ExtensibleClassIdentificationDirective
 Clients may subclass.	__label__ExtensibleClassIdentificationDirective
 It is recommended that implementations of IKeyFormatter subclass from here, rather than implementing IKeyFormatter directly.	__label__ExtensibleClassIdentificationDirective
 it may also be subclassed if a more sophisticated layout is required.	__label__ExtensibleClassIdentificationDirective
 {@link CoolBarManager}, which clients may instantiate or subclass.	__label__ExtensibleClassIdentificationDirective
 For providing the label's styles, create a subclass and overwrite {@link StyledCellLabelProvider#update(ViewerCell)} to return set all information needed to render a element.	__label__ExtensibleClassIdentificationDirective
 Clients may subclass WizardDialog, although this is rarely required.	__label__ExtensibleClassIdentificationDirective
 This interface may be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 The interface can be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 This interface can be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 The interface can be implemented by clients. By default, clients use {@link org.eclipse.jface.text.reconciler.MonoReconciler} or {@link org.eclipse.jface.text.reconciler.Reconciler} as the standard implementers of this interface.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 Clients may implement and use this interface.	__label__ExtensibleClassIdentificationDirective
 This interface should be implemented by classes that wish to react to cell editor activity.	__label__ExtensibleClassIdentificationDirective
 Such columns must implement the {@link org.eclipse.jface.text.source.IVerticalRulerColumn}. interface.	__label__ExtensibleClassIdentificationDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 Subclasses may extend	__label__MethodOverridingDirective
 Subclasses may extend	__label__MethodOverridingDirective
 Subclasses may extend	__label__MethodOverridingDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 Subclasses may extend or reimplement.	__label__MethodOverridingDirective
 Subclassers may extend this method if required.	__label__MethodOverridingDirective
 Subclasses must override this method	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 subclasses must override this method	__label__MethodOverridingDirective
 reimplement createPageControls	__label__MethodOverridingDirective
 Subclasses should extend this method if the wizard instance maintains addition SWT resource that need to be disposed.	__label__MethodOverridingDirective
 Subclasses may reimplement.	__label__MethodOverridingDirective
 performHelp - may be reimplemented to display help for the page	__label__MethodOverridingDirective
 Subclasses must implement createControl rather than overriding this method.	__label__MethodOverridingDirective
 the changes are propagated to the control via the update method, which subclasses must implement.	__label__MethodOverridingDirective
 Subclasses should override to update their state.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override this method.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses must implement this method.	__label__MethodOverridingDirective
 Subclass must implement this method to create the field editors.	__label__MethodOverridingDirective
 Subclasses must implement this framework method	__label__MethodOverridingDirective
 May be replaced or extended by subclasses.	__label__MethodOverridingDirective
 May be extended by subclasses.	__label__MethodOverridingDirective
 subclasses may override to specify a number of spaces.	__label__MethodOverridingDirective
 The corresponding method in ObjectInputStream, readClassDescriptor, should then be overridden to reconstitute the class descriptor from its custom stream representation.	__label__MethodOverridingDirective
 Subclasses that change the layout type by overriding this method should also override createContents.	__label__MethodOverridingDirective
 Subclasses that wish to support indirect CRLs should override it.	__label__MethodOverridingDirective
 Subclasses may override the following methods:      * createButton: creates the cell editor's button control     * createContents: creates the cell editor's 'display value' control     * updateContents: updates the cell editor's 'display value' control after its value has changed     * openDialogBox: opens the dialog box when the end user presses the button	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Overriding this method is generally not required; however, if overriding in a subclass, super.getLabelProvider must be invoked.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 clients should overwrite {@link #apply(ITextViewer, char, int, int)} instead	__label__MethodOverridingDirective
 Subclasses should override this method rather than {@link #focusCellChanged(ViewerCell)}	__label__MethodOverridingDirective
 Note that the default implementation is not very efficient and should be overridden if this class is implemented.	__label__MethodOverridingDirective
 Subclasses can override this to create a different class.	__label__MethodOverridingDirective
 Subclasses can override this to match differently. @param key1 the first key to compare passed in from outside	__label__MethodOverridingDirective
 Subclasses can override this to match differently.	__label__MethodOverridingDirective
 Subclasses can override this to return iterators with different properties.	__label__MethodOverridingDirective
 Other subclasses should also provide overrides of this function that do the right thing.	__label__MethodOverridingDirective
 many implementations will override this method.	__label__MethodOverridingDirective
 Subclasses must define the protected methods that change this state, and which define what that state means in terms of this object being acquired or released.	__label__MethodOverridingDirective
 It is recommended that subclasses override this method.	__label__MethodOverridingDirective
 It is recommended that subclasses override this method.	__label__MethodOverridingDirective
 Override this method in subclass implementations for faster handling.	__label__MethodOverridingDirective
 Clients may call this framework method, but should not override it.	__label__MethodOverridingDirective
 This method is not intended to be overridden by subclasses.	__label__MethodOverridingDirective
 Subclassesmust call super.itemAdded	__label__MethodExtensionDirective
 Subclasses of Component that override this method need not call super.paint(g).	__label__MethodExtensionDirective
 Any subclass of RequiredModelMBean overloading or overriding this method should call super.preRegister(server, name)	__label__MethodExtensionDirective
 Subclasses should extend this method if the wizard instance maintains addition SWT resource that need to be disposed.	__label__MethodExtensionDirective
 super.getLabelProvider must be invoked.	__label__MethodExtensionDirective
 setDescription - may be extended	__label__MethodExtensionDirective
 dispose - may be extended to dispose additional allocated SWT resources	__label__MethodExtensionDirective
 If this method is overridden, then super.checkAccess should be called by the first statement in the overridden method, or the equivalent security check should be placed in the overridden method.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkSetFactory at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 Note: To properly nest multiple overridings, subclasses should generally invoke super.afterExecute at the beginning of this method.	__label__MethodExtensionDirective
 This algorithm is implemented by this method. If it is overridden, the behavior specified here must be maintained.	__label__MethodExtensionDirective
 Clients are expected to call {@link #createMessageArea(Composite)}, otherwise neither the icon nor the message will appear.	__label__CallContractSubclassingDirective
 Clients are expected to call this method, otherwise neither the icon nor the message will appear.	__label__CallContractSubclassingDirective
 If this method is overridden to do the actual refresh, then internalRefresh(Object element) should simply call internalRefresh(element, true).	__label__CallContractSubclassingDirective
 Subclasses could populate additional entry fields.	__label__CallContractSubclassingDirective
 In other words, this method must allocate a new array	__label__MethodImplementationDirective
 This option must be specified in the constructor.	__label__MethodImplementationDirective
 All execution methods in the Statement interface implicitly close a statment's current ResultSet object if an open one exists.	__label__MethodImplementationDirective
 The redefinition must not add, remove or rename fields or methods, change the signatures of methods, or change inheritance.	__label__MethodImplementationDirective
 A JDBC driver must apply this limit to the execute, executeQuery and executeUpdate methods.	__label__MethodImplementationDirective
 The implementor must ensure sgn(x.compareTo(y)) == -sgn(y.compareTo(x)) for all x and y. (This implies that x.compareTo(y) must throw an exception iff y.compareTo(x) throws an exception.) The implementor must also ensure that the relation is transitive: (x.compareTo(y)>0 && y.compareTo(z)>0) implies x.compareTo(z)>0. Finally, the implementor must ensure that x.compareTo(y)==0 implies that sgn(x.compareTo(z)) == sgn(y.compareTo(z)), for all z.	__label__MethodImplementationDirective
 # codesource must not be null. # If this object's certificates are not null, then all of this object's certificates must be present in codesource's certificates. # If this object's location (getLocation()) is not null, then the following checks are made against this object's location and codesource's: 1. codesource's location must not be null. 2. If this object's location equals codesource's location, then return true. 3. This object's protocol (getLocation().getProtocol()) must be equal to codesource's protocol. 4. If this object's host (getLocation().getHost()) is not null, then the SocketPermission constructed with this object's host must imply the SocketPermission constructed with codesource's host. 5. If this object's port (getLocation().getPort()) is not equal to -1 (that is, if a port is specified), it must equal codesource's port. 6. If this object's file (getLocation().getFile()) doesn't equal codesource's file, then the following checks are made: If this object's file ends with "/-", then codesource's file must start with this object's file (exclusive the trailing "-"). If this object's file ends with a "/*", then codesource's file must start with this object's file and must not have any further "/" separators. If this object's file doesn't end with a "/", then codesource's file must match this object's file with a '/' appended. 7. If this object's reference (getLocation().getRef()) is not null, it must equal codesource's reference.	__label__MethodImplementationDirective
 The description and choices are intialized to null and required is initialized to false.	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if fromKey cannot be compared to keys currently in the map	__label__MethodImplementationDirective
 Subclasses of this class are encouraged, but not required, to attempt to read as many characters as possible in the same fashion.	__label__MethodImplementationDirective
 All general-purpose Collection implementation classes (which typically implement Collection indirectly through one of its subinterfaces) should provide two "standard" constructors: a void (no arguments) constructor, which creates an empty collection, and a constructor with a single argument of type Collection, which creates a new collection with the same elements as its argument.	__label__MethodImplementationDirective
 In that case the implementation must ensure that the signal is redirected to another waiting thread, if there is one.	__label__MethodImplementationDirective
 The readExternal method must read the values in the same sequence and with the same types as were written by writeExternal	__label__Non-localConsistencySubclassingDirective
 For a class to be retransformed, {@link #isRetransformClassesSupported} must also be true. But the value of isRetransformClassesSupported() does not influence the value returned by this function. For a class to be redefined, {@link #isRedefineClassesSupported} must also be true. But the value of isRedefineClassesSupported() does not influence the value returned by this function.	__label__Non-localConsistencySubclassingDirective
 Subclasses wishing to perform validation should override both this method and isValid.	__label__Non-localConsistencySubclassingDirective
 When reading the value of an out parameter, you must use the getter method whose Java type corresponds to the parameter's registered SQL type.	__label__Non-localConsistencySubclassingDirective
 All ReadWriteLock implementations must guarantee that the memory synchronization effects of writeLock operations (as specified in the {@link Lock} interface) also hold with respect to the associated readLock	__label__Non-localConsistencySubclassingDirective
 @link ICompletionProposal#getDisplayString()} still needs to be correctly implemented as this method might be ignored in case of uninstalled owner draw support.	__label__Non-localConsistencySubclassingDirective
 This quick assist assistant will only be able to query the invocation context if sourceViewer also implements {@link ISourceViewerExtension3}.	__label__Non-localConsistencySubclassingDirective
 @exception SecurityException if there is a security manager and the caller does not have the permission required by {@link javax.management.MBeanServerFactory#createMBeanServer}.	__label__Non-localConsistencySubclassingDirective
 The output should be equivalent the following invocation of {@link String#toUpperCase(java.util.Locale)} out.toUpperCase()	__label__Non-localConsistencySubclassingDirective
 Implementations should seek to make this method perform equally as well as remove(Object)	__label__Non-localConsistencySubclassingDirective
 This method assumes that {@link #isValidFor(IDocument, int)} returns true if called for offset.	__label__Non-localConsistencySubclassingDirective
 Concrete subclasses of {@link ColumnViewer} should implement a matching concrete subclass of {@link ViewerColumn}.	__label__MiscellaneousSubclassingDirective
 Subclasses must define the protected methods that change this state, and which define what that state means in terms of this object being acquired or released.	__label__MiscellaneousSubclassingDirective
 Therefore, any subclasses of Logger (unless they are implemented in conjunction with a new LogManager class) should take care to obtain a Logger instance from the LogManager class and should delegate operations such as "isLoggable" and "log(LogRecord)" to that instance.	__label__MiscellaneousSubclassingDirective
 Additional input parameters required for executing the check may be specified through constructors of concrete implementations of this class.	__label__MiscellaneousSubclassingDirective
 The default implementation provided in the Observable class will notify Observers in the order in which they registered interest, but subclasses may change this order, use no guaranteed order, deliver notifications on separate threads, or may guarantee that their subclass follows this order, as they choose.	__label__MiscellaneousSubclassingDirective
 Decimal formats are generally not synchronized. It is recommended to create separate format instances for each thread.	__label__MiscellaneousSubclassingDirective
 A group must first be registered with the ActivationSystem before it can be created via this method	__label__MethodCallSequenceDirective
 Attributes.Name.MANIFEST_VERSION must be set in MainAttributes prior to invoking this method.	__label__MethodCallSequenceDirective
 The option must be enabled prior to entering the blocking operation to have effect.	__label__MethodCallSequenceDirective
 For client sockets, setReceiveBufferSize() must be called before connecting the socket to its remote peer.	__label__MethodCallSequenceDirective
 This method must be called before the URLConnection is connected.	__label__MethodCallSequenceDirective
 This method may only be called after the page's control has been created.	__label__MethodCallSequenceDirective
 This method must be called before any of the dialog unit based conversion methods are called.	__label__MethodCallSequenceDirective
 This method may only be called after initializeDialogUnits has been called.	__label__MethodCallSequenceDirective
 This method may only be called after initializeDialogUnits has been called.	__label__MethodCallSequenceDirective
 It must be {@linkplain java.io.PipedOutputStream#connect( java.io.PipedInputStream) connected} to a PipedOutputStream before being used.	__label__MethodCallSequenceDirective
 Formatters should set this before returning an error code from their parseObject method.	__label__MethodCallSequenceDirective
 The instance specific setRequestProperty method should be used after an appropriate instance of URLConnection is obtained.	__label__MethodCallSequenceDirective
 In the second case, the permission should be obtained and tested before connecting.	__label__MethodCallSequenceDirective
 The attributes must be read from an SQLInput input stream and written to an SQLOutput output stream in the same order in which they were listed in the SQL definition of the user-defined type.	__label__MethodCallSequenceDirective
 In other words, this method must allocate a new array even if this set is backed by an array	__label__MethodCallSequenceDirective
 Trusted system code should typically invoke the methods in this class, and the methods of the iterators which they return, from within a privileged security context.	__label__MethodCallSequenceDirective
 The keys should be immutable If they are not then they must not be changed after adding to the MultiKey.	__label__MethodCallSequenceDirective
 If the same listener instance has been added to the listener table through multiple invocations of addPropertyChangeListener, then an equivalent number of removePropertyChangeListener invocations are required to remove all instances of that listener from the listener table.	__label__MethodCallSequenceDirective
 Gets the index of the item to be retrieved if {@link #previous()} is called.	__label__MethodCallSequenceDirective
 Returns the index of the element that would be returned by a subsequent call to previous.	__label__MethodCallSequenceDirective
 Constructs a new EnumerationIterator that will not function until {@link #setEnumeration(Enumeration)} is called.	__label__MethodCallSequenceDirective
 Note that the default implementation of this method does not call setRedraw.	__label__MethodCallSequenceDirective
 If the font of the specified control is changed after this PixelConverter is created, then the conversions from this instance will not produce the desired effect.	__label__MethodCallSequenceDirective
 The object is invalid once the free method is called.	__label__MethodCallSequenceDirective
 Once the stream has been closed, further read(), ready(), mark(), or reset() invocations will throw an IOException	__label__MethodCallSequenceDirective
 Once this method is called, the behavior of the Deflater object is undefined.	__label__MethodCallSequenceDirective
 There must be an SWT Display created in the current thread before calling this method.	__label__MethodCallSequenceDirective
 The methods in this class can be called after the stream has been closed without generating an IOException.	__label__MethodCallSequenceDirective
 Reading and writing XML values to or from an SQLXML object can happen at most once. The conceptual states of readable and not readable determine if one of the reading APIs will return a value or throw an exception. The conceptual states of writable and not writable determine if one of the writing APIs will set a value or throw an exception.  The state moves from readable to not readable once free() or any of the reading APIs are called: getBinaryStream(), getCharacterStream(), getSource(), and getString(). Implementations may also change the state to not writable when this occurs.  The state moves from writable to not writeable once free() or any of the writing APIs are called: setBinaryStream(), setCharacterStream(), setResult(), and setString(). Implementations may also change the state to not readable when this occurs.	__label__MethodCallSequenceDirective
 @throws FormatterClosedException If this formatter has been closed by invoking its {@link #close()} method	__label__MethodCallSequenceDirective
 The required field is true if a value must be supplied for this property during Driver.connect and false otherwise.	__label__NonCall-basedStateDirective
 The cursor must be on the insert row when this method is called.	__label__NonCall-basedStateDirective
 The caller principal must be an owner of the ACL in order to invoke this method.	__label__NonCall-basedStateDirective
 This feature is only supported if the underlying list's {@link List#iterator iterator} method returns an implementation that supports it.	__label__NonCall-basedStateDirective
 In general, only immutable objects should use the constant factory.	__label__NonCall-basedStateDirective
 This feature is only supported if the underlying list's {@link List#listIterator} method returns an implementation that supports it	__label__NonCall-basedStateDirective
 @throws UnsupportedOperationException if the add method is not supported by the iterator implementation of the underlying list	__label__NonCall-basedStateDirective
 minimumFractionDigits must be <= maximumFractionDigits.	__label__NonCall-basedStateDirective
 The provider must be accessible from the same class loader that was initially queried to locate the configuration file; this is not necessarily the class loader that loaded the file.	__label__NonCall-basedStateDirective
 @throws ArithmeticException if { roundingMode==ROUND_UNNECESSARY} and the specified scaling operation would require rounding.	__label__NonCall-basedStateDirective
 The application should retain its own reference to the Logger object to avoid it being garbage collec	__label__NonCall-basedStateDirective
 Requires {@link StyledCellLabelProvider} with owner draw enabled.	__label__NonCall-basedStateDirective
 The table does not maintain strong references to its contained loaders, in order to allow them and their defined classes to be garbage collected when not otherwise reachable.	__label__NonCall-basedStateDirective
 This interface is used only for computations that do not throw checked exceptions; computations that throw checked exceptions must use PrivilegedExceptionAction instead.	__label__AlternativeDirective
 Update(SIZE) should be called to adjust the widget.	__label__AlternativeDirective
 Subclasses must implement createControl rather than overriding this method.	__label__AlternativeDirective
 Overriding createDialogArea and createButtonBar are recommended rather than overriding this method.	__label__AlternativeDirective
 Subclasses should override this method if they do not need information from the triggering event, or override runWithEvent(Event) if they do.	__label__AlternativeDirective
 Clients can implement this interface and its extension interfaces, subclass {@link AbstractInformationControl}, or use the (text-based) default implementation {@link DefaultInformationControl}.	__label__AlternativeDirective
 Therefore an RMI application should use the SecurityManager class or another application-specific SecurityManager implementation instead of this class.	__label__AlternativeDirective
 Note: this method should not be used for file-locking, as the resulting protocol cannot be made to work reliably. The {@link java.nio.channels.FileLock FileLock} facility should be used instead.	__label__AlternativeDirective
 The {@link PrintWriter} class should be used in situations that require writing characters rather than bytes.	__label__AlternativeDirective
 . The {@linkplain java.nio.charset.CharsetEncoder} class should be used when more control over the encoding process is required.	__label__AlternativeDirective
 No standard string format is defined for otherNames, X.400 names, EDI party names, IPv6 address names, or any other type of names. They should be specified using the {@link #addSubjectAlternativeName(int type, byte [] name) addSubjectAlternativeName(int type, byte [] name)} method.	__label__AlternativeDirective
 Subclasses do not typically override this method, but implement getSelectionFromWidget(List) instead.	__label__AlternativeDirective
 If a new Byte instance is not required, this method should generally be used in preference to the constructor {@link #Byte(byte)}, as this method is likely to yield significantly better space and time performance by caching frequently requested values.	__label__AlternativeDirective
 The {@link java.nio.charset.CharsetDecoder} class should be used when more control over the decoding process is required.	__label__AlternativeDirective
 The {@link java.nio.charset.CharsetDecoder} class should be used when more control over the decoding process is required.	__label__AlternativeDirective
 @deprecated use StyledText.invokeAction instead	__label__AlternativeDirective
 Overriding createDialogArea and (optionally) createTitleMenuArea and createTitleMenuArea are recommended rather than overriding this method.	__label__AlternativeDirective
 In general, {@link java.lang.String#toLowerCase()} should be used to map characters to lowercase.	__label__AlternativeDirective
 In general, {@link java.lang.String#toUpperCase()} should be used to map characters to uppercase.	__label__AlternativeDirective
 This method is an alternative to the {@link java.util.Map#putAll(java.util.Map)} method and constructors. It allows you to build a map from an object array of various possible styles.	__label__AlternativeDirective
 Note that LazyMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 Note that ReferenceMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap}.	__label__AlternativeDirective
 Note that ListOrderedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 WARNING: This method is binary incompatible with Commons Collections 2.1 and 2.1.1. Use new SingletonIterator(object) for compatability.	__label__AlternativeDirective
 WARNING: This method is binary incompatible with Commons Collections 2.1 and 2.1.1. Use new ArrayIterator(array,start) for compatability.	__label__AlternativeDirective
 Like the {@link #matches matches} method, this method always starts at the beginning of the region; unlike that method, it does not require that the entire region be matched.	__label__AlternativeDirective
 The required FontMetrics parameter may be created in the following way: GC gc = new GC(control); gc.setFont(control.getFont()); fontMetrics = gc.getFontMetrics(); gc.dispose();	__label__AlternativeDirective
 Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of updateAsciiStream which takes a length parameter.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of updateNClob which takes a length parameter.	__label__AlternativeDirective
 Note that there is another method for efficiently processing the simultaneous addition of multiple elements.	__label__AlternativeDirective
 This {@literal "static factory method"} is provided in preference to a ({ long}, { int}) constructor because it allows for reuse of frequently used { BigDecimal} values.	__label__AlternativeDirective
 The default Policy implementation can be changed by setting the value of the "policy.provider" security property (in the Java security properties file) to the fully qualified name of the desired Policy subclass implementation.	__label__AlternativeDirective
 May fail spuriously and does not provide ordering guarantees, so is only rarely an appropriate alternative to { compareAndSet}.	__label__AlternativeDirective
 Since 3.3, an alternative API is available, see {@link ViewerColumn#setEditingSupport(EditingSupport)} for a more flexible way of editing values in a column viewer.	__label__AlternativeDirective
 There are two ways to get an Image from an ImageDescriptor. The method createImage will always return a new Image which must be disposed by the caller. Alternatively, createResource() returns a shared Image.	__label__AlternativeDirective
 You do not have to restrict yourself to using a single family of ResourceBundles. For example, you could have a set of bundles for exception messages, ExceptionResources (ExceptionResources_fr, ExceptionResources_de, ...), and one for widgets, WidgetResource (WidgetResources_fr, WidgetResources_de, ...); breaking up the resources however you like.	__label__AlternativeDirective
 If multiple threads access an identity hash map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally. (A structural modification is any operation that adds or deletes one or more mappings; merely changing the value associated with a key that an instance already contains is not a structural modification.) This is typically accomplished by synchronizing on some object that naturally encapsulates the map. If no such object exists, the map should be "wrapped" using the {@link Collections#synchronizedMap Collections.synchronizedMap} method. This is best done at creation time, to prevent accidental unsynchronized access to the map:     Map m = Collections.synchronizedMap(new IdentityHashMap(...));	__label__AlternativeDirective
 If the backing store naturally syncs an entire subtree at once, the implementer is encouraged to override sync(), rather than merely overriding this method.	__label__AlternativeDirective
 Note that this method does not clean up references between this status line manager and its associated contribution items. Use removeAll for that purpose.	__label__AlternativeDirective
 If only the given element needs updating, it is more efficient to use the update methods.	__label__AlternativeDirective
 This does not handle structural changes (e.g. addition or removal of elements), and does not update any other related elements (e.g. child elements). To handle structural changes, use the refresh methods instead.	__label__AlternativeDirective
 If multiple threads access a format concurrently, it must be synchronized externally.	__label__SynchronizationDirective
 In all cases, before this method can return the current thread must re-acquire the lock associated with this condition.	__label__SynchronizationDirective
 Iterators must be separately synchronized around the loop.	__label__SynchronizationDirective
 Iterators must be manually synchronized.   synchronized (coll) {    ListIterator it = coll.listIterator(3);    // do stuff with iterator  }    @return an iterator that must be manually synchronized on the collection	__label__SynchronizationDirective
 You must manually synchronize on the returned buffer's iterator to avoid non-deterministic behavior:   Map m = MapUtils.synchronizedMap(myMap);  Set s = m.keySet();  // outside synchronized block  synchronized (m) {  // synchronized on MAP!      Iterator i = s.iterator();      while (i.hasNext()) {          process (i.next());      }  }	__label__SynchronizationDirective
 Much like the synchronized collections returned by {@link java.util.Collections}, you must manually synchronize on the returned buffer's iterator to avoid non-deterministic behavior:   Buffer b = BufferUtils.synchronizedBuffer(myBuffer);  synchronized (b) {      Iterator i = b.iterator();      while (i.hasNext()) {          process (i.next());      }  }	__label__SynchronizationDirective
 @return a negative value on failure; zero if acquisition in shared mode succeeded but no subsequent shared-mode acquire can succeed; and a positive value if acquisition in shared mode succeeded and subsequent shared-mode acquires might also succeed, in which case a subsequent waiting thread must check availability.	__label__SynchronizationDirective
 Before waiting on the condition the lock must be held by the current thread.	__label__SynchronizationDirective
 The public methods of all CertStoreSpi objects must be thread-safe.	__label__SynchronizationDirective
 The static methods of this class are guaranteed to be thread-safe. Multiple threads may concurrently invoke the static methods defined in this class with no ill effects.	__label__SynchronizationDirective
 Note that LazyMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 Note that LazySortedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. T	__label__SynchronizationDirective
 Note that HashedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 Note that MultiValueMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. This class may throw exceptions when accessed by concurrent threads without synchronization.	__label__SynchronizationDirective
 Note that CompositeMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 If multiple threads access an ArrayList instance concurrently, and at least one of the threads modifies the list structurally, it must be synchronized externally.	__label__SynchronizationDirective
 If multiple threads access a tree set concurrently, and at least one of the threads modifies the set, it must be synchronized externally.	__label__SynchronizationDirective
 It is recommended practice to always immediately follow a call to { lock} with a { try} block, most typically in a before/after construction	__label__SynchronizationDirective
 This may be executed on any thread.	__label__SynchronizationDirective
 Throughput and scalability are generally highest for the default barging (also known as greedy, renouncement, and convoy-avoidance) strategy. While this is not guaranteed to be fair or starvation-free, earlier queued threads are allowed to recontend before later queued threads, and each recontention has an unbiased chance to succeed against incoming threads. Also, while acquires do not "spin" in the usual sense, they may perform multiple invocations of tryAcquire interspersed with other computations before blocking. This gives most of the benefits of spins when exclusive synchronization is only briefly held, without most of the liabilities when it isn't. If so desired, you can augment this by preceding calls to acquire methods with "fast-path" checks, possibly prechecking {@link #hasContended} and/or {@link #hasQueuedThreads} to only do so if the synchronizer is likely not to be contended.	__label__SynchronizationDirective
 This method is fully reentrant, but not thread-safe.	__label__SynchronizationDirective
 If the preferences or nodes in the subtree rooted at this node are modified concurrently with an invocation of this method, the exported preferences comprise a "fuzzy snapshot" of the subtree; some of the concurrent modifications may be reflected in the exported data while others may not.	__label__SynchronizationDirective
 . If the preferences at this node are modified concurrently with an invocation of this method, the exported preferences comprise a "fuzzy snapshot" of the preferences contained in the node; some of the concurrent modifications may be reflected in the exported data while others may not.	__label__SynchronizationDirective
 Clients may call this method in order to trigger the menu via keystrokes or other gestures	__label__MiscellaneousDirective
 This can be called even after the dialog is closed.	__label__MiscellaneousDirective
 A piped input stream should be connected to a piped output stream; the piped input stream then provides whatever data bytes are written to the piped output stream.	__label__MiscellaneousDirective
 An application should not normally try to catch ThreadDeath unless it must do some extraordinary cleanup operation (note that the throwing of ThreadDeath causes finally clauses of try statements to be executed before the thread officially dies). If a catch clause catches a ThreadDeath object, it is important to rethrow the object so that the thread actually dies.	__label__MiscellaneousDirective
 Note that digest objects can compute only one digest (see {@link MessageDigest}), so that in order to compute intermediate digests, a caller should retain a handle onto the digest object, and clone it for each digest to be computed, leaving the orginal digest untouched.	__label__MiscellaneousDirective
 The circumstances and the exception type must be documented by that { Lock} implementation	__label__MiscellaneousDirective
 List classes should clearly specify in their documentation any restrictions on what elements may be added.	__label__MiscellaneousDirective
 An implementation should document when this is the case.	__label__MiscellaneousDirective
 Callers should re-check the conditions which caused the thread to park in the first place.	__label__MiscellaneousDirective
 Callers should re-check the conditions which caused the thread to park in the first place.	__label__MiscellaneousDirective
 List classes should clearly specify in their documentation any restrictions on what elements may be added.	__label__MiscellaneousDirective
 In general the FINE level should be used for information that will be broadly interesting to developers who do not have a specialized interest in the specific subsystem.	__label__MiscellaneousDirective
 Both packing steps should use precisely the same options, and the segment limit may also need to be set to "-1", to prevent accidental variation of segment boundaries as class file sizes change slightly.	__label__MiscellaneousDirective
 The add methods are affected by this class. Thus objects must be removed or searched for using their transformed form. For example, if the transformation converts Strings to Integers, you must use the Integer form to remove objects.	__label__MiscellaneousDirective
 Every Queue implementation must specify its ordering properties.	__label__MiscellaneousDirective
 It is strongly recommended that each Driver class should be small and standalone so that the Driver class can be loaded and queried without bringing in vast quantities of supporting code.	__label__MiscellaneousDirective
 There is no requirement that a process represented by a Process object execute asynchronously or concurrently with respect to the Java process that owns the Process object.	__label__MiscellaneousDirective
 A driver may only report true here if it passes the JDBC compliance tests; otherwise it is required to return false.  JDBC compliance requires full support for the JDBC API and full support for SQL 92 Entry Level. It is expected that JDBC compliant drivers will be available for all the major commercial databases.	__label__MiscellaneousDirective
 This operation will probably require time linear in the map size for most implementations.	__label__MiscellaneousDirective
 Note: if { ListIterator.remove} requires linear time, this implementation requires quadratic time.	__label__MiscellaneousDirective
 Note that this implementation requires linear time in the size of the map;	__label__MiscellaneousDirective
 Increasing the receive buffer size can increase the performance of network I/O for high-volume connection, while decreasing it can help reduce the backlog of incoming data.	__label__MiscellaneousDirective
get label button	__label__nonDir
return true window appear default location native windowing system next time window made visible	__label__nonDir
constructor accessible subclass	__label__nonDir
represents notification emitted mbean server mbeanserverdelegate mbean	__label__nonDir
org/omg/corba/ulongseqholder.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00	__label__nonDir
return localized pattern string describing date format	__label__nonDir
related documentation overview tutorial example guide tool documentation please see use tree section java tutorial	__label__nonDir
return preferred size viewport component embedded jscrollpane	__label__nonDir
set date time format symbol date format	__label__nonDir
soft reference object cleared discretion garbage collector response memory demand	__label__nonDir
constant open bracket key	__label__nonDir
provides interface class transferring data within application	__label__nonDir
set theme used metallookandfeel	__label__nonDir
construct parseexception specified detail message offset	__label__nonDir
helper charseq	__label__nonDir
provides class creating modifying image	__label__nonDir
malformed non-existent path ignored	__label__nonDir
return thread last set setexclusiveownerthread null never set	__label__nonDir
may also contain string describing exception	__label__nonDir
mediatype instance iso/din c1 x mm	__label__nonDir
kind element	__label__nonDir
bound property name messagesstopcellediting	__label__nonDir
simple visitor type default behavior appropriate release_7 source version	__label__nonDir
specifies alternate group implementation execution environment used group	__label__nonDir
mlet added classloaderrepository	__label__nonDir
helper policy	__label__nonDir
constant malayalam unicode character block	__label__nonDir
return dialog plain	__label__nonDir
extended predefined width	__label__nonDir
used expression like second tuesday march	__label__nonDir
constant identifying permille field	__label__nonDir
constant syloti nagri unicode character block	__label__nonDir
implementation imageinputstream get input file randomaccessfile	__label__nonDir
baseline table	__label__nonDir
provides class interface locating servant	__label__nonDir
return field value descriptor array object	__label__nonDir
visit enum_constant variable element calling defaultaction	__label__nonDir
may also contain string describing exception	__label__nonDir
get height arc round corner	__label__nonDir
information helper file see generated file helper file	__label__nonDir
helper repositoryid	__label__nonDir
package specification precise list supported section official specification java tm platform standard edition orb complies see official specification corba support java tm se	__label__nonDir
helper charseq	__label__nonDir
identifies khmer range decimal base	__label__nonDir
return primary control info color current theme	__label__nonDir
description copied class basicbuttonui	__label__nonDir
construct unique group id	__label__nonDir
process event text field	__label__nonDir
mark last integer id range paint event id	__label__nonDir
org/omg/corba/wcharseqholder.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00	__label__nonDir
invoked mouse cursor ha moved onto component button pushed	__label__nonDir
param_out represents parameter	__label__nonDir
class also contains two method public int value access value field completionstatus object public static completionstatus from_int int creating instance one int member	__label__nonDir
constructor concrete subclass us argument default value	__label__nonDir
set designated parameter given java.io.reader object specified number character	__label__nonDir
insert specified element front deque	__label__nonDir
visitor program element style visitor design pattern	__label__nonDir
thrown indicate problem parameter value passed orb.create_policy operation	__label__nonDir
return string representation map	__label__nonDir
source version java™ programming language	__label__nonDir
constant identifying decimal separator field	__label__nonDir
multiplexing ui used combine treeuis	__label__nonDir
return true collection contains element	__label__nonDir
requestprocessingpolicyvalue following value	__label__nonDir
provides system input output data stream serialization file system	__label__nonDir
return look feel default	__label__nonDir
get background color component	__label__nonDir
set designated parameter given java.sql.date value using default time zone virtual machine running application	__label__nonDir
default srgb space	__label__nonDir
visit double primitive type calling defaultaction	__label__nonDir
supply abstract class service provider subclass offering new audio device sound file reader writer audio format converter	__label__nonDir
return number element collection	__label__nonDir
stub policy	__label__nonDir
obtains clock always return instant	__label__nonDir
keyeventdispatcher cooperates current keyboardfocusmanager targeting dispatching keyevents	__label__nonDir
provides interface class dealing different type event fired awt component	__label__nonDir
construct windowevent object specified previous new window state	__label__nonDir
convert designated column cachedrowset object collection object	__label__nonDir
contains support x.509 v3 certificate x.509 v2 crls	__label__nonDir
interceptor intended mean orb service gain access orb processing effectively becoming part orb	__label__nonDir
org/omg/corba/ulonglongseqholder.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00	__label__nonDir
return path passed row	__label__nonDir
user-chosen password used password-based encryption pbe	__label__nonDir
run following produced	__label__nonDir
multiplexing ui used combine menuitemuis	__label__nonDir
package specification jaxb specification related documentation overview tutorial example guide tool documentation please see jaxb website	__label__nonDir
org/omg/portableinterceptor/forwardrequesthelper.java	__label__nonDir
provides class secure socket package	__label__nonDir
set designated parameter sql null	__label__nonDir
contains minor code give detailed information caused exception completion status	__label__nonDir
provides class interface drawing specialized border around swing component	__label__nonDir
implementation push button	__label__nonDir
return tooltip location component coordinate system	__label__nonDir
primary use request interceptor enable orb service transfer context information client server	__label__nonDir
jarinputstream class used read content jar file input stream	__label__nonDir
see http www.saxproject.org information sax	__label__nonDir
return true whitespace glyph	__label__nonDir
provides definition attribute change notification sent mbeans	__label__nonDir
constant tag unicode character block	__label__nonDir
return string describes shaper	__label__nonDir
query key tool extracting information date-times	__label__nonDir
class represents internet protocol ip address	__label__nonDir
construct connectionevent object initialized given pooledconnection object sqlexception object	__label__nonDir
typevariable common superinterface type variable kind	__label__nonDir
tab key found popup window closed	__label__nonDir
constant japanese-roman function key	__label__nonDir
class represents access network via socket	__label__nonDir
return new numberformat instance format percentage value specified locale	__label__nonDir
glyph data	__label__nonDir
servant manager supply poa ability activate object demand poa receives request targeted inactive object	__label__nonDir
return int describing set sql join type governing joinrowset instance	__label__nonDir
value used indicate keycode unknown	__label__nonDir
constructor concrete subclass us null default value	__label__nonDir
objectinput extends datainput interface include reading object	__label__nonDir
capability property buffer	__label__nonDir
return boolean indicating whether shaper shape contextually	__label__nonDir
variable ctxlist represents empty contextlist object	__label__nonDir
return object perform action registered given keystroke	__label__nonDir
executable method constructor initializer	__label__nonDir
package javax.print.event contains event class listener interface	__label__nonDir
implement characteriterator.getbeginindex string	__label__nonDir
awt package contains several layout manager class interface building layout manager	__label__nonDir
support document object model level core apii document object model dom level core document object model dom level load save	__label__nonDir
class used represent jar file entry	__label__nonDir
provides class interface dealing javax.swing.jtable	__label__nonDir
return color rgb value respectively	__label__nonDir
rowsorterlistener notification rowsorter ha changed way	__label__nonDir
set named desktop property specified value fire property change event notify listener value ha changed	__label__nonDir
constant representing scrolling block like scrolling page-up page-down key	__label__nonDir
atomically add given value current value field given object managed updater	__label__nonDir
return boolean whether cursor pointing first entry	__label__nonDir
disables event defined specified event mask parameter delivered component	__label__nonDir
creates listener responsible updating selection based mouse event	__label__nonDir
guardedobject object used protect access another object	__label__nonDir
request standard optional ligature	__label__nonDir
description copied class componentui	__label__nonDir
warning chain automatically cleared time new row read	__label__nonDir
constant identifying exponent field	__label__nonDir
addcomponent label2 addcomponent tf2 layout.setverticalgroup vgroup	__label__nonDir
provides class interface obtaining reflective information class object	__label__nonDir
refer awt threading issue detail awt threading model	__label__nonDir
return primary control dark shadow color current theme	__label__nonDir
notifies listener registered rowset object cursor ha moved	__label__nonDir
invoked table tablemodel generates tablemodelevent	__label__nonDir
implementation visit uniontype calling defaultaction	__label__nonDir
proc	__label__nonDir
jarinputstream class used read content jar file input stream	__label__nonDir
related documentation overview tutorial example guide please see sound	__label__nonDir
constant saurashtra unicode character block	__label__nonDir
provides method implementation access identity object method wa invoked	__label__nonDir
facility declaring annotation processor allowing annotation processor communicate annotation processing tool environment	__label__nonDir
may also contain string describing exception	__label__nonDir
name object adapter	__label__nonDir
set color displayed docking area	__label__nonDir
contains class related developing bean component based javabeans™ architecture	__label__nonDir
set componentorientation property component component contained within	__label__nonDir
justification	__label__nonDir
visit enum type element calling defaultaction	__label__nonDir
constant khmer symbol unicode character block	__label__nonDir
provides class networking application	__label__nonDir
notifies listener registered interest notification event type	__label__nonDir
interface extends layoutmanager interface deal layout explicitly term constraint object specify component added layout	__label__nonDir
request interceptor designed intercept flow request/reply sequence orb specific point service query request information manipulate service context propagated client server	__label__nonDir
constant minus key	__label__nonDir
holder longseq	__label__nonDir
may also contain string describing exception	__label__nonDir
constant f14 function key	__label__nonDir
org/omg/corba/namevaluepairhelper.java generated idl-to-java compiler portable version june o'clock gmt+00:00	__label__nonDir
provides user interface object built according java look feel codenamed metal default look feel	__label__nonDir
canvas component represents blank rectangular area screen onto application draw application trap input event user	__label__nonDir
creates new atomicstampedreference given initial value	__label__nonDir
return new breakiterator instance sentence break given locale	__label__nonDir
suggested completion annotation	__label__nonDir
remove specified window listener longer receives window event window	__label__nonDir
set whether window always window	__label__nonDir
provides runtime binding framework client application including unmarshalling marshalling validation capability	__label__nonDir
return green component range default srgb space	__label__nonDir
return shaper provided unicode range	__label__nonDir
default theme metallookandfeel	__label__nonDir
provides class interface security framework	__label__nonDir
org/omg/iop/codecpackage/formatmismatch.java	__label__nonDir
gradientpaint class provides way fill shape linear color gradient pattern	__label__nonDir
defines code used represent custom marshalled value type typecode	__label__nonDir
org/omg/corba/wrongtransactionholder.java generated idl-to-java compiler portable version corba.idl thursday august pm pdt	__label__nonDir
maximum amount left side glyph grow	__label__nonDir
return iterator element deque reverse sequential order	__label__nonDir
dayofweek store day-of-week	__label__nonDir
retrieves remove first element deque	__label__nonDir
helper current	__label__nonDir
class include simplified version java.security.cert package	__label__nonDir
constant vai unicode character block	__label__nonDir
description copied class componentui	__label__nonDir
generates wrapper element around xml representation	__label__nonDir
constructor concrete subclass us argument default value	__label__nonDir
return string representing state textfield	__label__nonDir
update lead row selection	__label__nonDir
true glyph absorbs extra space lower priority level grows	__label__nonDir
description interface repository member idl union	__label__nonDir
method wrap connection commit method allow flexible auto commit non auto commit transactional control support	__label__nonDir
default value returned defaultaction return value unless method overridden	__label__nonDir
 @param set the set to decorate, must not be null	__label__NotNullDirective
 May not be null.	__label__NotNullDirective
 @param list the list to decorate, must be empty and not null	__label__NotNullDirective
 @param lock the lock object to use, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if list is null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map is null	__label__NotNullDirective
 @throws NullPointerException if the entry is null	__label__NotNullDirective
 @throws NullPointerException if the entry is null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param coll the collection to iterate over, not null	__label__NotNullDirective
 @param map the map to add to, may not be null	__label__NotNullDirective
 @param coll the collection to decorate, must not be null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @param collection the collection to add to, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param b the second (super?) collection, must not be null	__label__NotNullDirective
 @param buffer the buffer to predicate, must not be null	__label__NotNullDirective
 @param predicate the predicate used to evaluate new elements, must not be null	__label__NotNullDirective
 @param closure the closure the execute, not null	__label__NotNullDirective
 @throws IllegalArgumentException if either argument is null	__label__NotNullDirective
 @throws NullPointerException if the key is null	__label__NotNullDirective
 @throws IllegalArgumentException if the list is null	__label__NotNullDirective
 @throws IllegalArgumentException if the Buffer is null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @param predicate the predicate for the set, must not be null	__label__NotNullDirective
 @param entry the entry to query, must not be null	__label__NotNullDirective
 @param entry the entry to query, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @throws NullPointerException if array is null	__label__NotNullDirective
 @throws IllegalArgumentException if the transformer or the predicate is null	__label__NotNullDirective
 @throws IllegalArgumentException if the Set or Predicate is null	__label__NotNullDirective
 @throws IllegalArgumentException if the SortedBag or Predicate is null	__label__NotNullDirective
 @throws IllegalArgumentException if the Collection is null	__label__NotNullDirective
 @throws IllegalArgumentException if the prototype is null	__label__NotNullDirective
 @throws NullPointerException if the value is null and this map does not not permit null values (optional).	__label__NotNullDirective
 @param loggerName The name of the Logger to be set. Must be non-null.	__label__NotNullDirective
 @throws NullPointerException if iterator parameter is null	__label__NotNullDirective
 Unless otherwise noted, passing a null argument to a constructor or method in this class will cause a {@link NullPointerException} to be thrown.	__label__NotNullDirective
 @throws NullPointerException if the specified element is null	__label__NotNullDirective
 @param readMethod May be null if the property is write-only	__label__NullSemanticsDirective
 null returns all types	__label__NullSemanticsDirective
 @param envp array of strings, each element of which has environment variable settings in the format name=value, or null if the subprocess should inherit the environment of the current process.	__label__NullSemanticsDirective
 @param inputIterator the iterator to get the input from, may be null	__label__NullSemanticsDirective
 @param root the root object to start iterating from, null results in an empty iterator	__label__NullSemanticsDirective
 @param keyTransformer the transformer to use for key conversion, null means no transformation	__label__NullSemanticsDirective
 may be null, in which case the suffix ".tmp" will be used	__label__NullSemanticsDirective
 @param q the queue with which the reference is to be registered, or null if registration is not required	__label__NullSemanticsDirective
 @param l event listener (can be null)	__label__NullSemanticsDirective
 @param text the text for the action; may be null.	__label__NullSemanticsDirective
 @param position must be non-negative	__label__NumberRangeDirective
 The tc must be in the range 0 <= tc <= 255 or an IllegalArgumentException will be thrown.	__label__NumberRangeDirective
 maximumIntegerDigits must be >= minimumIntegerDigits.	__label__NumberRangeDirective
 The index must be a value greater than or equal to { 0} and less than the current size of the vector.	__label__NumberRangeDirective
 @param threhsold the new collection usage threshold value in bytes. Must be non-negative.	__label__NumberRangeDirective
 This value may be negative, in which case releases must occur before any acquires will be granted.	__label__NumberRangeDirective
 This value should always be nonnegative and not larger than the length of buf.	__label__NumberRangeDirective
 If the argument is any value in the range 0x7f800001 through 0x7fffffff or in the range 0xff800001 through 0xffffffff, the result is a NaN. all NaN bit patterns, quiet or signaling, must be in the NaN range identified above.	__label__NumberRangeDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__NumberRangeDirective
 @param capacity the initial capacity for the buffer, greater than zero	__label__NumberRangeDirective
 @param keyType the type of reference to use for keys; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param keyType the type of reference to use for keys; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param length the number of consecutive characters to be copied; the value for length must be 0 or greater	__label__NumberRangeDirective
 @param name Permission name. Must be "control".	__label__StringFormatDirective
 The format is locale independent and digits must be taken from the Basic Latin block of the Unicode standard.	__label__StringFormatDirective
 A cookie's path must include the servlet that set the cookie, for example, /catalog, which makes the cookie visible to all directories on the server under /catalog.	__label__StringFormatDirective
 An UnquotedPattern can contain arbitrary characters except single quotes, but curly braces within it must be balanced	__label__StringFormatDirective
 Either the text-argument must already be present in the sequence, or some initial substring of the text-argument must be present. (e.g. "a < b & ae < e" is valid since "a" is present in the sequence before "ae" is reset). In this latter case, "ae" is not entered and treated as a single character; instead, "e" is sorted as if it were expanded to two characters: "a" followed by an "e". This difference appears in natural languages: in traditional Spanish "ch" is treated as though it contracts to a single character (expressed as "c < ch < d"), while in traditional German a-umlaut is treated as though it expanded to two characters (expressed as "a,A < b,B ... &ae;\u00e3&AE;\u00c3"). [\u00e3 and \u00c3 are, of course, the escape sequences for a-umlaut.] Ignorable Characters For ignorable characters, the first rule must start with a relation	__label__StringFormatDirective
 The selection criterion must be specified in one of the following two formats:	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 @param name A name for the logger. This should be a dot-separated name and should normally be based on the package name or class name of the subsystem, such as java.net or javax.swing	__label__StringFormatDirective
 The rest of s should constitute a FloatValue as described by the lexical syntax rules: FloatValue: Signopt NaN Signopt Infinity Signopt FloatingPointLiteral Signopt HexFloatingPointLiteral SignedInteger HexFloatingPointLiteral: HexSignificand BinaryExponent FloatTypeSuffixopt HexSignificand: HexNumeral HexNumeral . 0x HexDigitsopt . HexDigits 0X HexDigitsopt . HexDigits BinaryExponent: BinaryExponentIndicator SignedInteger BinaryExponentIndicator: p P where Sign, FloatingPointLiteral, HexNumeral, HexDigits, SignedInteger and FloatTypeSuffix are as defined in the lexical structure sections of the of the Java Language Specification.	__label__StringFormatDirective
 Note that it is not sufficient to only examine the character preceding a line terminator sequence to decide if the line terminator is escaped; there must be an odd number of contiguous backslashes for the line terminator to be escaped.	__label__StringFormatDirective
 This byte array should contain the DER encoded name, as it would appear in the GeneralName structure defined in RFC 2459 and X.509. The encoded byte array should only contain the encoded value of the name, and should not include the tag associated with the name in the GeneralName structure. The ASN.1 definition of this structure appears below.	__label__StringFormatDirective
 The name is provided in string format. RFC 822, DNS, and URI names use the well-established string formats for those types (subject to the restrictions included in RFC 2459). IPv4 address names are supplied using dotted quad notation. OID address names are represented as a series of nonnegative integers separated by periods. And directory names (distinguished names) are supplied in RFC 2253 format. No standard string format is defined for otherNames, X.400 names, EDI party names, IPv6 address names, or any other type of names. They should be specified using the {@link #addPathToName(int type, byte [] name) addPathToName(int type, byte [] name)} method.	__label__StringFormatDirective
 If issuerDN is not null, it should contain a distinguished name, in RFC 2253 format.	__label__StringFormatDirective
 Any URL that ends with a '/' is assumed to refer to a directory. Otherwise, the URL is assumed to refer to a JAR file which will be downloaded and opened as needed.	__label__StringFormatDirective
 All elements inserted into the set must implement the {@link Comparable} interface.	__label__MethodParameterTypeDirective
 Furthermore, all elements in the array must be mutually comparable (that is, e1.compareTo(e2) must not throw a ClassCastException for any elements e1 and e2 in the array).	__label__MethodParameterTypeDirective
 All keys inserted into the map must be mutually comparable by the given comparator: comparator.compare(k1, k2) must not throw a ClassCastException for any keys k1 and k2 in the map	__label__MethodParameterTypeDirective
 A regular expression, specified as a string, must first be compiled into an instance of this class.	__label__MethodParameterTypeDirective
 The key must implement Comparable.	__label__MethodParameterTypeDirective
 The group's class must be a concrete subclass of ActivationGroup.	__label__MethodParameterTypeDirective
 @param the output type of the transformer - this extends O.	__label__MethodParameterTypeDirective
 The property must implement java.lang#Boolean.	__label__MethodParameterTypeDirective
 For an option that has a notion of on and off, and requires a non-boolean parameter, setting its value to anything other than Boolean(false) implicitly enables it.	__label__MethodParameterTypeDirective
 All elements in the collection must implement the Comparable interface.	__label__MethodParameterTypeDirective
 @throws ArrayStoreException if the runtime type of the specified array is not a supertype of the runtime type of every element in this queue	__label__MethodParameterTypeDirective
 The length argument must be less than or equal to buf.length	__label__MethodParameterCorrelationDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__MethodParameterCorrelationDirective
 You should always pass in the binary name of the class you are defining as well as the bytes.	__label__MethodParameterCorrelationDirective
 If subjectKeyID is not null, it should contain a single DER encoded value corresponding to the contents of the extension value (not including the object identifier, criticality setting, and encapsulating OCTET STRING) for a SubjectKeyIdentifier extension.	__label__MethodParameterCorrelationDirective
 The reader must contain the number of characters specified by length otherwise a SQLException will be generated when the PreparedStatement is executed.	__label__MethodParameterCorrelationDirective
 The inputstream must contain the number of characters specified by length otherwise a SQLException will be generated when the PreparedStatement is executed.	__label__MethodParameterCorrelationDirective
 @throws ArithmeticException if the result is inexact but the rounding mode is { UNNECESSARY}, or { mc.precision} {@literal >} 0 and the result of { this.divideToIntgralValue(divisor)} would require a precision of more than { mc.precision} digits.	__label__MethodParameterCorrelationDirective
 @exception IndexOutOfBoundsException If off is negative, len is negative, or len is greater than b.length - off	__label__MethodParameterCorrelationDirective
 The returned parameter object must be initialized via a call to init, using an appropriate parameter specification or parameter encoding.	__label__Post-CallDirective
 The keys should be immutable If they are not then they must not be changed after adding to the MultiKey.	__label__Post-CallDirective
 If uppercase letters are desired, the {@link java.lang.String#toUpperCase()} method may be called on the result:       Integer.toString(n, 16).toUpperCase()	__label__Post-CallDirective
 t is never correct to use the return value of this method to allocate a buffer intended to hold all data in this stream.	__label__Post-CallDirective
 @return All of the active bindings (Binding), not sorted in any fashion. This collection may be empty, but it is never null.	__label__ReturnValueDirective
 Clients should always assume that running the action succeeded in the absence of notification to the contrary.	__label__ReturnValueDirective
 @return the font descriptor (never null)	__label__ReturnValueDirective
 The value returned is between 0 and 61.	__label__ReturnValueDirective
 The returned control's layout data must be an instance of GridData.	__label__ReturnValueDirective
 This version string must be a sequence of positive decimal integers separated by "."'s and may have leading zeros.	__label__ReturnValueDirective
 If the Type is a parameterized type, the Type object returned must accurately reflect the actual type parameters used in the source code.	__label__ReturnValueDirective
 The certificate chain must have been associated with the alias by a call to setKeyEntry, or by a call to setEntry with a PrivateKeyEntry.	__label__ReturnValueDirective
 All X.509 certificate extensions that a PKIXCertPathChecker might possibly be able to process should be included in the set.	__label__ReturnValueDirective
 @return the predicate as the only element in an array	__label__ReturnValueDirective
 @return the predicate as the only element in an array	__label__ReturnValueDirective
 @return a new looping iterator	__label__ReturnValueDirective
 @return a new list containing the results	__label__ReturnValueDirective
 If this set makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.	__label__ReturnValueDirective
 Note that a new OutputStream object must be returned each time this method is called	__label__ReturnValueDirective
 In dialogs implemented by JFace, this will be an IDialogPage.	__label__ReturnValueDirective
 In dialogs implemented by JFace, this will be an IDialogPage.	__label__ReturnValueDirective
 If the implementing method determines that no transformations are needed, it should return null. Otherwise, it should create a new byte[] array, copy the input classfileBuffer into it, along with all desired transformations, and return the new array.	__label__ReturnValueDirective
 The backtrace for a throwable with an initialized, non-null cause should generally include the backtrace for the cause.	__label__ReturnValueDirective
 The value 0 indicates that a bundle must be validated each time it is retrieved from the cache.	__label__ReturnValueDirective
 @return the array this iterator iterates over, or null if the no-arg constructor was used and {@link #setArray} has never been called with a valid array.	__label__ReturnValueDirective
 The array may be the internal data structure of the predicate and thus should not be altered.	__label__ReturnValueDirective
 Implementations must return a SortedBidiMap instance, usually by forwarding to inverseSortedBidiMap().	__label__ReturnValueDirective
 The method must return either a boolean or a non-null Boolean, and have no parameters.	__label__ReturnValueDirective
 In other words, this method must allocate a new array even if this list is backed by an array	__label__ReturnValueDirective
 Evaluates the rule by examining the characters available from the provided character scanner. The token returned by this rule returns true when calling isUndefined, if the text that the rule investigated does not match the rule's requirements. Otherwise, this method returns this rule's success token.	__label__ReturnValueDirective
 It is required that unequal key sequences return unequal strings.	__label__ReturnValueDirective
 @param returnValue The command's result, may be null.	__label__ReturnValueDirective
 @param toolBarManager the manager or null if toolbar is not desired	__label__ReturnValueDirective
 The returned value is of nanoseconds precision but not necessarily nanoseconds accuracy.	__label__ReturnValueDirective
 It should not be called from application code.	__label__MethodCallVisibilityDirective
 Denigrated, use {@linkplain #getIssuer()} or {@linkplain #getIssuerAsBytes()} instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.	__label__MethodCallVisibilityDirective
 Denigrated, replaced by {@linkplain #getIssuerX500Principal()}. This method returns the issuer as an implementation specific Principal object, which should not be relied upon by portable code.	__label__MethodCallVisibilityDirective
 Constructor only used in deserialization, do not use otherwise.	__label__MethodCallVisibilityDirective
 Constructor only used in deserialization, do not use otherwise.	__label__MethodCallVisibilityDirective
 Note that this class is abstract and extends from SignatureSpi for historical reasons. Application developers should only take notice of the methods defined in this Signature class; all the methods in the superclass are intended for cryptographic service providers who wish to supply their own implementations of digital signature algorithms.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL Date values do not have a time component.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 Not intended for interactive use outside of subclasses.	__label__MethodCallVisibilityDirective
 This method is intended to be used only for debugging purposes, and the format of the returned string may vary between implementations.	__label__MethodCallVisibilityDirective
 @noinstantiate This class is not intended to be instantiated by clients.	__label__MethodCallVisibilityDirective
 @noinstantiate This class is not intended to be instantiated by clients.	__label__MethodCallVisibilityDirective
 Therefore an RMI application should use the SecurityManager class or another application-specific SecurityManager implementation instead of this class.	__label__MethodCallVisibilityDirective
 NOTE: This class is obsolete. New implementations should implement the Map interface, rather than extending this class.	__label__MethodCallVisibilityDirective
 This class is intended to be instantiated and used by clients.	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 Clients may call this framework method	__label__MethodCallVisibilityDirective
 Call this internal framework method to superimpose another image atop this composite image.	__label__MethodCallVisibilityDirective
 @exception IOException if an I/O error occurs.	__label__ExceptionRaisingDirective
 @throws EOFException If end of file is reached. @throws IOException If other I/O error has occurred.	__label__ExceptionRaisingDirective
 @throws IllegalStateException if not all the elements can be added at this time due to insertion restrictions	__label__ExceptionRaisingDirective
 @throws SecurityException If a security manager exists and its {@link java.lang.SecurityManager#checkWrite(java.lang.String)} method denies write access to the file	__label__ExceptionRaisingDirective
 The view's iterator is a "weakly consistent" iterator that will never throw {@link ConcurrentModificationException}, and guarantees to traverse elements as they existed upon construction of the iterator, and may (but is not guaranteed to) reflect any modifications subsequent to construction.	__label__ExceptionRaisingDirective
 @throws IllegalFormatException If a format string contains an illegal syntax, a format specifier that is incompatible with the given arguments, insufficient arguments given the format string, or other illegal conditions. For specification of all possible formatting errors, see the Details section of the formatter class specification.	__label__ExceptionRaisingDirective
 @throws IOException if a file error occurs	__label__ExceptionRaisingDirective
 @exception IOException if I/O errors occur @exception ClassNotFoundException If the class for an object being restored cannot be found.	__label__ExceptionRaisingDirective
 @exception IOException If an I/O error occurs	__label__ExceptionRaisingDirective
 @exception EOFException if this input stream reaches the end before reading all the bytes. @exception IOException the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs.	__label__ExceptionRaisingDirective
 @throws org.eclipse.swt.SWTException in these cases:      * {@link org.eclipse.swt.SWT#ERROR_WIDGET_DISPOSED} - if the receiver has been disposed     * {@link org.eclipse.swt.SWT#ERROR_THREAD_INVALID_ACCESS} - if not called from the thread that created the receiver	__label__ExceptionRaisingDirective
 The driver should throw an SQLException if it is the right driver to connect to the given URL but has trouble connecting to the database.	__label__ExceptionRaisingDirective
 If a collection refuses to add a particular element for any reason other than that it already contains the element, it must throw an exception (rather than returning false).	__label__ExceptionRaisingDirective
 @throws InvalidPropertiesFormatException Data on input stream does not constitute a valid XML document with the mandated document type.	__label__ExceptionRaisingDirective
 @throws IllegalArgumentException if this map itself has a restricted range, and { toKey} lies outside the bounds of the range	__label__ExceptionRaisingDirective
 Even under these circumstances it is generally better to simply ignore the invocation and return, rather than throwing an exception	__label__ExceptionRaisingDirective
 @throws NullPointerException if { fromElement} or { toElement} is null and this set does not permit null elements @throws IllegalArgumentException if { fromElement} is greater than { toElement}; or if this set itself has a restricted range, and { fromElement} or { toElement} lies outside the bounds of the range.	__label__ExceptionRaisingDirective
 Furthermore, the document must satisfy the properties DTD described above	__label__MiscellaneousMethodCallDirective
 @param schema a schema name; must match the schema name as it is stored in the database; "" retrieves those without a schema;	__label__MiscellaneousMethodCallDirective
 @param newWeekdays the new weekday strings. The array should be indexed by Calendar.SUNDAY, Calendar.MONDAY, etc.	__label__MiscellaneousMethodCallDirective
 @param newShortWeekdays the new short weekday strings. The array should be indexed by Calendar.SUNDAY, Calendar.MONDAY, etc.	__label__MiscellaneousMethodCallDirective
 The file must be encoded in UTF-8.	__label__MiscellaneousMethodCallDirective
 **** deprecated tag (Value Directive - Parameter: too vague): Which commands are valid is system-dependent, but at the very least the command must be a non-empty list of non-null strings.	__label__MiscellaneousMethodCallDirective
 The java.util.Properties argument can be used to pass arbitrary string tag/value pairs as connection arguments. Normally at least "user" and "password" properties should be included in the Properties object.	__label__MiscellaneousMethodCallDirective
 The range must be sorted (as by the {@link #sort(double[], int, int)} method) prior to making this call.	__label__MiscellaneousMethodCallDirective
 @param map the map to add, must be size 0 or 1, and the key must match	__label__MiscellaneousMethodCallDirective
 @param parentCatalog a catalog name; must match the catalog name as it is stored in the database;	__label__MiscellaneousMethodCallDirective
 The formatting should include localization.	__label__MiscellaneousMethodCallDirective
 The array must be sorted (as by the {@link #sort(byte[])} method) prior to making this call	__label__MiscellaneousMethodCallDirective
 @param tableNamePattern a table name pattern; must match the table name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param attributeNamePattern an attribute name pattern; must match the attribute name as it is declared in the database	__label__MiscellaneousMethodCallDirective
 The value objects in a WeakHashMap are held by ordinary strong references. Thus care should be taken to ensure that value objects do not strongly refer to their own keys, either directly or indirectly, since that will prevent the keys from being discarded.	__label__MiscellaneousMethodCallDirective
 Note that this method assumes GridData for the layout data of the rightControl	__label__MiscellaneousMethodCallDirective
 Be aware of the fact that you should at least position the tool tip 1px right to your mouse cursor else click events may not get propagated properly.	__label__MiscellaneousMethodCallDirective
 The annotation hover provides the information to be displayed in a hover popup window if requested over the annotation presentation area. The annotation hover is assumed to be line oriented.	__label__MiscellaneousMethodCallDirective
 The annotation hover is assumed to be line oriented.	__label__MiscellaneousMethodCallDirective
 Clients are not permitted to extend this class.	__label__ExtensibleClassIdentificationDirective
 Clients may implement, but must not extend.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This interface is not intended to be extended by clients.	__label__ExtensibleClassIdentificationDirective
 This interface is internal to the framework; it should not be implemented outside the framework.	__label__ExtensibleClassIdentificationDirective
 A remote object implementation should implement the Unreferenced interface to receive notification when there are no more clients that reference that remote object.	__label__ExtensibleClassIdentificationDirective
 Subclasses must implement this IWizard method to perform any special finish processing for their wizard.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface and its extension interfaces	__label__ExtensibleClassIdentificationDirective
 This interface must be implemented by clients. Implementers should be registered with a content formatter in order get involved in the formatting process.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 This interface must be implemented by clients that want to use one of their models as a reconcile step's input model.	__label__ExtensibleClassIdentificationDirective
 The interface can be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 Subclasses may extend or reimplement.	__label__MethodOverridingDirective
 Subclasses may extend or reimplement.	__label__MethodOverridingDirective
 Subclasses may extend or reimplement.	__label__MethodOverridingDirective
 Subclasses may extend or reimplement.	__label__MethodOverridingDirective
 Subclasses may extend or reimplement.	__label__MethodOverridingDirective
 Subclasses should override this method	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Clients may extend this method.	__label__MethodOverridingDirective
 Subclasses can override or extend.	__label__MethodOverridingDirective
 createContents- extend or reimplement to create controls before window opens	__label__MethodOverridingDirective
 Subclasses may also extend or reimplement.	__label__MethodOverridingDirective
 Applications use this class by overriding {@link #getPasswordAuthentication()} in a sub-class.	__label__MethodOverridingDirective
 canFlipToNextPage - may be extended or reimplemented	__label__MethodOverridingDirective
 dispose - may be extended to dispose additional allocated SWT resources	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override if a different control is desired for representing the title text, or if something different than the title should be displayed in location where the title text typically is shown.	__label__MethodOverridingDirective
 Subclasses may override this method.	__label__MethodOverridingDirective
 It provides framework hooks that allow subclasses to set the focus and tab order	__label__MethodOverridingDirective
 Subclasses may override if desired.	__label__MethodOverridingDirective
 Subclasses must implement the createFieldEditors method and should override createLayout if a special layout of the field editors is needed.	__label__MethodOverridingDirective
 Subclasses must implement this framework method.	__label__MethodOverridingDirective
 May be replaced or extended by subclasses.	__label__MethodOverridingDirective
 May be replaced or extended by subclasses.	__label__MethodOverridingDirective
 Subclasses may override this method.	__label__MethodOverridingDirective
 Subclasses may override this method if they need extra space on the line number ruler.	__label__MethodOverridingDirective
 Hook method to formats the given messages.  Subclasses can change this to create a different format like HTML.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses must either override {@link IInformationControl#setInformation(String)} or implement {@link IInformationControlExtension2}.	__label__MethodOverridingDirective
 This method should be overridden by a subclass.	__label__MethodOverridingDirective
 Applications that want a stricter policy should override this method.	__label__MethodOverridingDirective
 . This should be overridden by a specific security manager to return the appropriate thread group.	__label__MethodOverridingDirective
 A stateful implementation must override the {@link #clone clone} method if necessary in order to allow a PKIX CertPathBuilder to efficiently backtrack and try other paths.	__label__MethodOverridingDirective
 Subclasses may override it to implement a different strategy for picking a new selection when the old selection becomes invalid.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 This framework method may be extended (super.close must be called).	__label__MethodOverridingDirective
 Subclasses could override to fully control adds to the map.	__label__MethodOverridingDirective
 Subclasses could override to handle changes to the map.	__label__MethodOverridingDirective
 This method must be overridden if a subclass must be setup before put() is used.	__label__MethodOverridingDirective
 however subclasses may override this.	__label__MethodOverridingDirective
 Subclasses can override this to return iterators with different properties.	__label__MethodOverridingDirective
 Subclasses should, if possible, override this with a more efficient implementation - in many cases, they can simply return getMinimum().	__label__MethodOverridingDirective
 Clients may call this framework method, but should not override it.	__label__MethodOverridingDirective
 Subclasses are not expected to override this method.	__label__MethodOverridingDirective
 This method is not intended to be overridden by subclasses.	__label__MethodOverridingDirective
 Clients should not override it.	__label__MethodOverridingDirective
 Subclasses should always call super.getBackgroundColorExclusions to aggregate the list.	__label__MethodExtensionDirective
 Subclasses must call the super implementation.	__label__MethodExtensionDirective
 If you override this, be sure to call super.	__label__MethodExtensionDirective
 Any subclass of RequiredModelMBean overloading or overriding this method should call super.postDeregister()	__label__MethodExtensionDirective
 Subclasses should extend the doComputeSize framework method to compute the size of the page's control.	__label__MethodExtensionDirective
 Subclasses should extend if extra pages need to be added before the wizard opens.	__label__MethodExtensionDirective
 if overriding in a subclass, super.getContentProvider must be invoked.	__label__MethodExtensionDirective
 setTitle - may be extended	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkTopLevelWindow at the point the overridden method would normally return false, and the value of super.checkTopLevelWindow should be returned.	__label__MethodExtensionDirective
 Note: To properly nest multiple overridings, subclasses should generally invoke super.beforeExecute at the end of this method.	__label__MethodExtensionDirective
 New pages should be added by calling addPage.	__label__CallContractSubclassingDirective
 Subclasses must implement this framework method to paint images within the given bounds using one or more calls to the drawImage framework method.	__label__CallContractSubclassingDirective
 Subclasses should call this method on construction.	__label__CallContractSubclassingDirective
 If you override this method, then you should make a call to super.checkLink at the point the overridden method would normally throw an exception.	__label__CallContractSubclassingDirective
 Whenever a permission is added to a heterogeneous PermissionCollection such as Permissions, and the PermissionCollection doesn't yet contain a PermissionCollection of the specified permission's type, the PermissionCollection should call the newPermissionCollection method on the permission's class to see if it requires a special PermissionCollection.	__label__CallContractSubclassingDirective
 Calls to the getAttribute and setAttribute methods must map to the get and put methods of the Bindings for the specified scope.	__label__CallContractSubclassingDirective
 Subclasses may call the noDefaultAndApplyButton framework method before the page's control has been created to suppress the standard Apply and Defaults buttons.	__label__CallContractSubclassingDirective
 FilePermission objects must be stored in a manner that allows them to be inserted into the collection in any order	__label__MethodImplementationDirective
 In other words, this method must allocate a new array	__label__MethodImplementationDirective
 In either case the implementation must ensure that the signal is redirected to another waiting thread, if there is one.	__label__MethodImplementationDirective
 SocketPermission objects must be stored in a manner that allows them to be inserted into the collection in any orde	__label__MethodImplementationDirective
 A serializable class can declare its own serialVersionUID explicitly by declaring a field named "serialVersionUID" that must be static, final, and of type long	__label__MethodImplementationDirective
 The general contract of hashCode is: * Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application. * If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result. * It is not required that if two objects are unequal according to the {@link java.lang.Object#equals(java.lang.Object)} method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hashtables.	__label__MethodImplementationDirective
 When a Driver class is loaded, it should create an instance of itself and register it with the DriverManager. This means that a user can load and register a driver by calling Class.forName("foo.bah.Driver")	__label__MethodImplementationDirective
 Implementations should seek to avoid creating a new object every time this method is called.	__label__MethodImplementationDirective
 A PKIXCertPathChecker implementation must support reverse checking (the ability to perform its checks when it is presented with certificates in the reverse direction) and may support forward checking (the ability to perform its checks when it is presented with certificates in the forward direction).	__label__MethodImplementationDirective
 The system class loader supports adding a JAR file to be searched if it implements a method named appendToClassPathForInstrumentation which takes a single parameter of type java.lang.String. The method is not required to have public access.	__label__MethodImplementationDirective
 The returned parameters may be the same that were used to initialize this signature, or may contain a combination of default and randomly generated parameter values used by the underlying signature implementation if this signature requires algorithm parameters but was not initialized with any.	__label__MethodImplementationDirective
 If the identity has a public key, the public key in the certificate must be the same, and if the identity does not have a public key, the identity's public key is set to be that specified in the certificate.	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if fromKey or toKey cannot be compared to keys currently in the map.	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if { toElement} cannot be compared to elements currently in the set.	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if { fromKey} cannot be compared to keys currently in the map.	__label__MethodImplementationDirective
 all of the methods and constructors in subclasses of this class must obey the additional constraints imposed by the Set interface	__label__MethodImplementationDirective
 While Deque implementations are not strictly required to prohibit the insertion of null elements, they are strongly encouraged to do so.	__label__MethodImplementationDirective
 Subclasses can override this to implement caching (override clear as well).	__label__Non-localConsistencySubclassingDirective
 For a modifiable list the programmer should additionally implement the list iterator's set method.	__label__Non-localConsistencySubclassingDirective
 Every Preferences implementation must have an associated {@link PreferencesFactory} implementation.	__label__Non-localConsistencySubclassingDirective
 This API is only valid if the information control implements {@link IInformationControlExtension3}. Not following this restriction will later result in an {@link UnsupportedOperationException}.	__label__Non-localConsistencySubclassingDirective
 Subclasses of Objects that are not serializable can be serializable. In this case the non-serializable class must have a no-arg constructor to allow its fields to be initialized.	__label__MiscellaneousSubclassingDirective
 If you reimplement this method, you should also reimplement updateContents.	__label__MiscellaneousSubclassingDirective
 Classes that require special handling during the serialization and deserialization process must implement special methods with these exact signatures:	__label__MiscellaneousSubclassingDirective
 Subclasses who can provide this feature can open this method for the public	__label__MiscellaneousSubclassingDirective
 Subclasses do not typically override this method, but implement setSelectionToWidget(List, boolean) instead.	__label__MiscellaneousSubclassingDirective
 If this method is overridden, the method that overrides it should additionally check to see if the calling thread has the RuntimePermission("modifyThreadGroup") permission, and if so, return silently.	__label__MiscellaneousSubclassingDirective
 Should be called whenever needsInput() returns true indicating that more input data is required.	__label__MethodCallSequenceDirective
 A return value of 0 indicates that needsInput() or needsDictionary() should be called	__label__MethodCallSequenceDirective
 Should be called whenever needsInput() returns true indicating that more input data is required	__label__MethodCallSequenceDirective
 This method should be called before requesting the order of the contribution items to ensure that the order is accurate.	__label__MethodCallSequenceDirective
 This method may only be called after initializeDialogUnits has been called.	__label__MethodCallSequenceDirective
 Applications should not assume that they can change the TOS field after the connection.	__label__MethodCallSequenceDirective
 The execute method executes an SQL statement and indicates the form of the first result. You must then use the methods getResultSet or getUpdateCount to retrieve the result, and getMoreResults to move to any subsequent result(s)	__label__MethodCallSequenceDirective
 All the data in the returned stream must be read prior to getting the value of any other column.	__label__MethodCallSequenceDirective
 Retrieves the current result as a ResultSet object. This method should be called only once per result.	__label__MethodCallSequenceDirective
 Note that this method should be called only after calling a getter method; otherwise, there is no value to use in determining whether it is null or not.	__label__MethodCallSequenceDirective
 This method should be called when the decompressor is no longer being used, but will also be called automatically by the finalize() method.	__label__MethodCallSequenceDirective
 Should be called when inflate() returns 0 and needsDictionary() returns true indicating that a preset dictionary is required.	__label__MethodCallSequenceDirective
 @throws IllegalStateException if hasNext() has already been called.	__label__MethodCallSequenceDirective
 package names must be unique within a class loader and cannot be redefined or changed once created.	__label__MethodCallSequenceDirective
 The context must be a security context returned by a previous call to getSecurityContext.	__label__MethodCallSequenceDirective
 When a call to the next method returns false, the cursor is positioned after the last row. Any invocation of a ResultSet method which requires a current row will result in a SQLException being thrown.	__label__MethodCallSequenceDirective
 Holds the index of the last item returned by a call to next() or previous(). This is set to -1 if neither method has yet been invoked.	__label__MethodCallSequenceDirective
 Returns the index of the element that would be returned by a subsequent call to {@link #previous}.	__label__MethodCallSequenceDirective
 If the matcher is to be used in further matching operations then it should first be reset.	__label__MethodCallSequenceDirective
 As of 3.2, AbstractTreeViewer supports multiple equal elements (each with a different parent chain) in the tree. This support requires that clients enable the element map by calling setUseHashLookup(true).	__label__MethodCallSequenceDirective
 Prior to disposing, a painter should be deactivated.	__label__MethodCallSequenceDirective
 Assumes that the element has been expanded before.	__label__MethodCallSequenceDirective
 Previous values of other fields are retained. If this is not desired, call {@link #clear()} first.	__label__MethodCallSequenceDirective
 The preference node assumes (sole) responsibility for disposing of the image; this will happen when the node is disposed.	__label__MethodCallSequenceDirective
 This method must be called before this window's shell is created.	__label__MethodCallSequenceDirective
 Once the stream has been closed, further write() or flush() invocations will cause an IOException to be thrown.	__label__MethodCallSequenceDirective
 It should be set when the action is created. It should not be modified once the action is part of an action contribution item.	__label__MethodCallSequenceDirective
 Once established, a page's wizard cannot be changed to a different wizard.	__label__MethodCallSequenceDirective
 Note: It is the callers responsibility to prevent an endless loop i.e. to test whether a given anchor has already been used once.	__label__MethodCallSequenceDirective
 May only be called from a UI thread.	__label__MethodCallSequenceDirective
 Once the shell is created, it must be disposed (i.e., closed) before this method can be called.	__label__MethodCallSequenceDirective
 This method should only be called by a thread that is the owner of this object's monitor.	__label__NonCall-basedStateDirective
 IteratorChains cannot be modified once they have executed a method from the Iterator interface.	__label__NonCall-basedStateDirective
 The index must be a value greater than or equal to { 0} and less than the current size of the vector.	__label__NonCall-basedStateDirective
 Removes the given TransferDropTargetListener. Listeners should not be removed while a drag and drop operation is in progress.	__label__NonCall-basedStateDirective
 @throws IllegalArgumentException if this map itself has a restricted range, and fromKey lies outside the bounds of the range	__label__NonCall-basedStateDirective
 After this method returns, the next character to be read will have the value cbuf[0], the character after that will have the value cbuf[1], and so forth.	__label__NonCall-basedStateDirective
 The list will be empty after this call returns.	__label__NonCall-basedStateDirective
 If the object does not call Activatable.inactive when it deactivates, the object will never be garbage collected since the group keeps strong references to the objects it creates.	__label__NonCall-basedStateDirective
 applications that override this method should either call super.update(g) or incorporate the functionality described	__label__AlternativeDirective
 Subclasses of Component that override this method should either call super.update(g), or call paint(g) directly from their update method.	__label__AlternativeDirective
 Instead, an application should register an activation descriptor and export a remote object separately, so that exceptions can be handled properly.	__label__AlternativeDirective
 Instead of overwriting this method subclasses should overwrite {@link #createViewerToolTipContentArea(Event, ViewerCell, Composite)}	__label__AlternativeDirective
 Applications should solely rely on the implies method to perform policy checks.	__label__AlternativeDirective
 An application can call {@link #PKIXParameters(Set) PKIXParameters(Set)}, specifying a Set of TrustAnchor objects, each of which identify a most-trusted CA. Alternatively, an application can call {@link #PKIXParameters(KeyStore) PKIXParameters(KeyStore)}, specifying a KeyStore instance containing trusted certificate entries, each of which will be considered as a most-trusted CA.	__label__AlternativeDirective
 Denigrated, use {@linkplain #addIssuer(X500Principal)} or {@linkplain #addIssuerName(byte[])} instead. This method should not be relied on as it can fail to match some CRLs because of a loss of encoding information in the RFC 2253 String form of some distinguished names.	__label__AlternativeDirective
 Subclasses do not typically override this method, but implement setSelectionToWidget(List, boolean) instead.	__label__AlternativeDirective
 The {@link java.nio.charset.CharsetDecoder} class should be used when more control over the decoding process is required.	__label__AlternativeDirective
 This method is no longer called by the framework and clients should overwrite {@link #apply(ITextViewer, char, int, int)} instead	__label__AlternativeDirective
 Implementors must either use the dialog font or override {@link #computeSizeConstraints(int, int)}.	__label__AlternativeDirective
 User code should use the methods of class Array to manipulate arrays.	__label__AlternativeDirective
 Where the existing class file bytes are to be transformed (for example in bytecode instrumentation) {@link #retransformClasses retransformClasses} should be used.	__label__AlternativeDirective
 Since this implementation does not support add() or remove(), set() may be called as often as desired.	__label__AlternativeDirective
 Note that PredicatedSortedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedSortedMap}.	__label__AlternativeDirective
 Note that TransformedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 Note that LazySortedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedSortedMap}.	__label__AlternativeDirective
 Note that HashedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 If you know that you have an object array, the {@link org.apache.commons.collections.iterators.ObjectArrayIterator ObjectArrayIterator} class is a better choice, as it will perform better.	__label__AlternativeDirective
 The following extension interface exists:      {@link org.eclipse.jface.text.presentation.IPresentationReconcilerExtension} since version 3.0 adding support for documents with multiple partitionings.	__label__AlternativeDirective
 The following extension interfaces exist:      {@link org.eclipse.jface.text.source.IVerticalRulerInfoExtension} since version 3.0 allowing custom annotation hovers and specific annotation models.	__label__AlternativeDirective
 This selection should be used instead of null.	__label__AlternativeDirective
 These formatting strategies are required to handle the position updating of the document. To facilitate the work with these text edit based formatting strategies, a default implementation called ContextBasedFormattingStrategy is provided.	__label__AlternativeDirective
 This method should no longer be used for actions in the Eclipse workbench. IWorkbenchCommandSupport and IWorkbenchContextSupport provide all the functionality required for key bindings.	__label__AlternativeDirective
 The required FontMetrics parameter may be created in the following way: GC gc = new GC(control); gc.setFont(control.getFont()); fontMetrics = gc.getFontMetrics(); gc.dispose();	__label__AlternativeDirective
 Specifying which properties are affected may allow the viewer to optimize the update. For example, if the label provider is not affected by changes to any of these properties, an update may not actually be required.	__label__AlternativeDirective
 The default is false for backwards compatibility, but the recommended practice is to specify true, and specify the desired width for the content of the column, rather than adding a fudge factor to the specified width.	__label__AlternativeDirective
 @deprecated This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.	__label__AlternativeDirective
 The results of this constructor can be somewhat unpredictable and its use is generally not recommended; see the notes under the {@link #BigDecimal(double)} constructor.	__label__AlternativeDirective
 Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.	__label__AlternativeDirective
 Note that this method is not used when drawing annotations on the editor's text widget. This is handled trough a {@link org.eclipse.jface.text.source.AnnotationPainter.IDrawingStrategy}.	__label__AlternativeDirective
 Developers are encouraged to use the comparator returned from this method instead of constructing a new instance to reduce allocation and GC overhead when multiple comparable comparators may be used in the same VM.	__label__AlternativeDirective
 The statement       boolean b = Pattern.matches("a*b", "aaaaab");  is equivalent to the three statements above, though for repeated matches it is less efficient since it does not allow the compiled pattern to be reused.	__label__AlternativeDirective
 Since 3.3, an alternative API is available, see {@link ViewerColumn#setEditingSupport(EditingSupport)} for a more flexible way of editing values in a column viewer.	__label__AlternativeDirective
 The following extension interfaces exist:      {@link org.eclipse.jface.text.source.IAnnotationAccessExtension} since version 3.0 replacing all methods in that interface     {@link IAnnotationAccessExtension2} since version 3.2 allowing to set a quick assist assistant to an annotation access.	__label__AlternativeDirective
 CollationKeys provide better performance than Collator.compare when Strings are involved in multiple comparisons.	__label__AlternativeDirective
 For efficiency, a character-stream object may use an object other than itself to protect critical sections.	__label__AlternativeDirective
 Once a remote object is registered (bound) with the RMI registry on the local host, callers on a remote (or local) host can lookup the remote object by name, obtain its reference, and then invoke remote methods on the object. A registry may be shared by all servers running on a host or an individual server process may create and use its own registry if desired (see java.rmi.registry.LocateRegistry.createRegistry method for details).	__label__AlternativeDirective
 Because databases may use an optimized representation for the XML, accessing the value through getSource() and setResult() can lead to improved processing performance without serializing to a stream representation and parsing the XML.	__label__AlternativeDirective
 Each thread must re-acquire the lock before it can return from { await}.	__label__SynchronizationDirective
 In all cases, before this method can return the current thread must re-acquire the lock associated with this condition.	__label__SynchronizationDirective
 If multiple threads access a format concurrently, it must be synchronized externally.	__label__SynchronizationDirective
 Note that this implementation is not synchronized.	__label__SynchronizationDirective
 Note that this implementation is not synchronized.	__label__SynchronizationDirective
 You must manually synchronize on the returned buffer's iterator to avoid non-deterministic behavior:   Set s = SetUtils.synchronizedSet(mySet);  synchronized (s) {      Iterator i = s.iterator();      while (i.hasNext()) {          process (i.next());      }  }	__label__SynchronizationDirective
 It is imperative that the user manually synchronize on the returned set when iterating over it:    Set s = Collections.synchronizedSet(new HashSet());       ...   synchronized(s) {       Iterator i = s.iterator(); // Must be in the synchronized block       while (i.hasNext())           foo(i.next());   }	__label__SynchronizationDirective
 It is imperative that the user manually synchronize on the returned list when iterating over it:    List list = Collections.synchronizedList(new ArrayList());       ...   synchronized(list) {       Iterator i = list.iterator(); // Must be in synchronized block       while (i.hasNext())           foo(i.next());   }	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 Note that ReferenceMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 Note that this method should not synchronize the preferences in any subnodes of this node.	__label__SynchronizationDirective
 Appendables are not necessarily safe for multithreaded access. Thread safety is the responsibility of classes that extend and implement this interface.	__label__SynchronizationDirective
 Due to the multi-threaded nature of class loading, it is possible for a transformer to receive calls after it has been removed. Transformers should be written defensively to expect this situation.	__label__SynchronizationDirective
 All { Lock} implementations must enforce the same memory synchronization semantics as provided by the built-in monitor lock, as described in The Java Language Specification, Third Edition (17.4 Memory Model)	__label__SynchronizationDirective
 The model is allowed to send back notifications to its listeners in any thread, and the listeners must not assume that the notifications will arrive in the UI thread.	__label__SynchronizationDirective
 DataInputStream is not necessarily safe for multithreaded access.	__label__SynchronizationDirective
 Security note: If an application needs to read a password or other secure data, it should use {@link #readPassword()} or {@link #readPassword(String, Object...)} and manually zero the returned character array after processing to minimize the lifetime of sensitive data in memory.	__label__MiscellaneousDirective
 Additional columns beyond the columns defined to be returned by the ResultSet object for a given method can be defined by the JDBC driver vendor and must be accessed by their column label.	__label__MiscellaneousDirective
 This constructor is used for serialization only and should not be used by subclasses.	__label__MiscellaneousDirective
 This is important because classes should not be subclassed unless the programmer intends on modifying or enhancing the fundamental behavior of the class.	__label__MiscellaneousDirective
 f it is critical to obtain every active subgroup in this thread group, the caller should verify that the returned int value is strictly less than the length of list.	__label__MiscellaneousDirective
 An application remotely accesses the platform MXBeans using proxy should prepare to catch IOException as if accessing with the MBeanServerConnector interface.	__label__MiscellaneousDirective
 Under many circumstances, linking Iterators together in this manner is more efficient (and convenient) than using nested for loops to extract a list.	__label__MiscellaneousDirective
 If an implementation provides such specialized semantics then the implementation must document those semantics.	__label__MiscellaneousDirective
 Typically, an exception will be thrown (such as {@link IllegalMonitorStateException}) and the implementation must document that fact.	__label__MiscellaneousDirective
 Although this can be used to reset iteration, the {@link #reset()} method is a more effective choice.	__label__MiscellaneousDirective
 An implementation should document when this is the case.	__label__MiscellaneousDirective
 Collection classes should clearly specify in their documentation any restrictions on what elements may be added.	__label__MiscellaneousDirective
 The add methods are affected by this class. Thus objects must be removed or searched for using their transformed form. For example, if the transformation converts Strings to Integers, you must use the Integer form to remove objects.	__label__MiscellaneousDirective
 The add methods are affected by this class. Thus objects must be removed or searched for using their transformed form. For example, if the transformation converts Strings to Integers, you must use the Integer form to remove objects.	__label__MiscellaneousDirective
 Beware that, unlike in most collections, this method is NOT a constant-time operation. Because of the asynchronous nature of these sets, determining the current number of elements requires traversing them all to count the	__label__MiscellaneousDirective
 When a TCP connection is closed the connection may remain in a timeout state for a period of time after the connection is closed (typically known as the TIME_WAIT state or 2MSL wait state). For applications using a well known socket address or port it may not be possible to bind a socket to the required SocketAddress if there is a connection in the timeout state involving the socket address or	__label__MiscellaneousDirective
constant vedic extension unicode character block	__label__nonDir
return y-component advance glyph	__label__nonDir
cause current thread wait signalled interrupted specified waiting time elapses	__label__nonDir
obtain value specific attribute dynamic mbean	__label__nonDir
find color system property	__label__nonDir
provides user interface object combine two look feel	__label__nonDir
manifest class used maintain manifest entry name associated attribute	__label__nonDir
indicates field defining constant value may referenced native code	__label__nonDir
creates copy simpledateformat	__label__nonDir
get fontmetrics specified font	__label__nonDir
contains class creating user interface painting graphic image	__label__nonDir
enables combo box item selected	__label__nonDir
org/omg/iop/servicecontextholder.java	__label__nonDir
constant tai le unicode character block	__label__nonDir
creates new serializablepermission object specified name	__label__nonDir
information helper file see generated file helper file	__label__nonDir
color green	__label__nonDir
get current millisecond instant clock	__label__nonDir
holder class serviceinformation object used store inout parameter idl method	__label__nonDir
single strikethrough	__label__nonDir
return array object currently registered foolisteners upon window	__label__nonDir
constant nko unicode character block	__label__nonDir
constant f8 function key	__label__nonDir
static method jmx api	__label__nonDir
return iterator element queue proper sequence	__label__nonDir
see section meaning minor code see minor code exception	__label__nonDir
main api date time instant duration	__label__nonDir
policy specifies whether created poa retains active servant active object map	__label__nonDir
creates listener responsible updating display focus lost/gained	__label__nonDir
indicates container validate root	__label__nonDir
return opacity window	__label__nonDir
color light gray	__label__nonDir
exception indicates error ha occurred performing unmarshal operation prevents jaxb provider completing operation	__label__nonDir
interface must implemented modelmbeans	__label__nonDir
org/omg/corba/definitionkindhelper.java generated idl-to-java compiler portable version ir.idl june o'clock gmt+00:00	__label__nonDir
check duration zero length	__label__nonDir
creates color object based specified value hsb color model	__label__nonDir
extension valuebase implemented custom value type	__label__nonDir
description copied interface annotatedelement	__label__nonDir
get set unit supported duration	__label__nonDir
interface used imagereader implementation notify caller image thumbnail reading method progress	__label__nonDir
provides mbean server reference	__label__nonDir
contains minor code give detailed information caused exception completion status	__label__nonDir
helper floatseq	__label__nonDir
add specified mouse listener receive mouse-motion event trayicon	__label__nonDir
format object producing attributedcharacteriterator	__label__nonDir
return transparency mode color	__label__nonDir
method attempt create best strategy available number buffer supplied	__label__nonDir
extends class java.util.zip.zipfile support reading optional manifest entry	__label__nonDir
use class interface want control tree constructed updated rendered well data associated tree node viewed managed	__label__nonDir
appends separator specified size end tool bar	__label__nonDir
selects item index anindex	__label__nonDir
java idl ptc valueoutputstream used implementing rmi-iiop stream format version	__label__nonDir
monthday store month day without year time	__label__nonDir
describes member idl struct interface repository including name struct member type struct member typedef represents idl type struct member described struct member object	__label__nonDir
return string representation jtextfield	__label__nonDir
last number range id used text event	__label__nonDir
map javabean property xml id	__label__nonDir
constant f24 function key	__label__nonDir
one kind primitive essential idl data type	__label__nonDir
defines base type key used along renderinghints class control various algorithm choice rendering imaging pipeline	__label__nonDir
thrown indicate malformed url ha occurred	__label__nonDir
return true metal provide window decoration	__label__nonDir
determines offset end given line	__label__nonDir
message stop editing session	__label__nonDir
information helper file see generated file helper file	__label__nonDir
context object may named purpose specifying starting search scope	__label__nonDir
insert specified element tail deque	__label__nonDir
constructor concrete subclass us null default value	__label__nonDir
logrecord object used pas logging request logging framework individual log handler	__label__nonDir
font program	__label__nonDir
poa ha retain policy us servant manager servantactivators	__label__nonDir
set designated parameter given long java programming language	__label__nonDir
return true collection contains specified element	__label__nonDir
package contains class exception dynanyfactory interface dynamicany module specified omg common object request broker architecture specification http cgi.omg.org/cgi-bin/doc formal/99-10-07 section	__label__nonDir
holder policylist	__label__nonDir
width roundrectangle2d	__label__nonDir
helper shortseqhelper	__label__nonDir
return group command-environment control object	__label__nonDir
construct texturepaint object	__label__nonDir
multi-threaded environment several context exist simultaneously single paint object	__label__nonDir
update expanded state descendant path getting expanded descendant tree forwarding tree state	__label__nonDir
visit type value annotation	__label__nonDir
return boolean whether cursor last result	__label__nonDir
constant f19 function key	__label__nonDir
fetch configured java command option	__label__nonDir
might example write console write file send network logging service forward log whatever	__label__nonDir
constructor concrete subclass call	__label__nonDir
construct windowevent object specified opposite window	__label__nonDir
paint horizontal part leg	__label__nonDir
support reporting bound property change integer property	__label__nonDir
provides interface tool invoked program example compiler	__label__nonDir
description copied class abstractborder	__label__nonDir
multiplexing ui used combine separatoruis	__label__nonDir
sole constructor	__label__nonDir
param_inout represents inout parameter	__label__nonDir
get table-based rule collation object	__label__nonDir
description copied class componentui	__label__nonDir
mime type file format comment begin format mime type space separated file extension example text/plain txt text txt would map file.txt file.text file.txt mime type text/plain	__label__nonDir
provides class color space	__label__nonDir
jbutton added initially set disabled	__label__nonDir
font header	__label__nonDir
general reader may invoke rowset method one exception	__label__nonDir
default srgb space	__label__nonDir
mediatype instance iso/din b8 x mm	__label__nonDir
inset object representation border container	__label__nonDir
return set focus traversal key given traversal operation component	__label__nonDir
pseudo-type used actual type appropriate	__label__nonDir
org/omg/corba/fieldnamehelper.java generated idl-to-java compiler portable version june o'clock gmt+00:00	__label__nonDir
visit none pseudo-type calling defaultaction	__label__nonDir
queue concurrentlinkedqueue class supply efficient scalable thread-safe non-blocking fifo queue	__label__nonDir
return array containing method object reflecting declared method class interface represented class object including public protected default package access private method excluding inherited method	__label__nonDir
holder class long used store inout parameter idl method	__label__nonDir
xmladapter spec-defined sub-classes allow arbitrary java class used jaxb	__label__nonDir
set flag enabling rollover border toolbar also install apropriate border depending state flag	__label__nonDir
construct iterator given range given string index set specified position	__label__nonDir
interface object adjustable numeric value contained within bounded range value	__label__nonDir
used determine display	__label__nonDir
interface used model element java programming language	__label__nonDir
return array actionlisteners added jtextfield addactionlistener	__label__nonDir
provides api defines contract transaction manager resource manager allows transaction manager enlist delist resource object supplied resource manager driver jta transaction	__label__nonDir
description copied class abstractborder	__label__nonDir
applies given localized pattern string date format	__label__nonDir
metal l f implementation separatorui	__label__nonDir
provides class allowing processing xml document	__label__nonDir
information stub file see generated file stub	__label__nonDir
see java.awt.awtevent class detail awt event model	__label__nonDir
flag used getlayoutflags indicates glyphvector ha right-to-left run direction	__label__nonDir
clipboard typically used copy paste operation	__label__nonDir
information see swing threading policy	__label__nonDir
errormanager object attached handler process error occurs handler logging	__label__nonDir
return separator background color current theme	__label__nonDir
specified class loader used load class interface	__label__nonDir
visit boolean primitive type calling defaultaction	__label__nonDir
set bundle returned getextras	__label__nonDir
holder charseq	__label__nonDir
appends separator default size end tool bar	__label__nonDir
method implemented term handful protected abstract method	__label__nonDir
constant variation selector unicode character block	__label__nonDir
information helper file see generated file helper file	__label__nonDir
class provided representing quantization huffman table extension imagereadparam imagewriteparam provided supply table reading writing process	__label__nonDir
constant kayah li unicode character block	__label__nonDir
default value returned defaultaction return value unless method overridden	__label__nonDir
get accessiblecontext associated canvas	__label__nonDir
package contains dynamic module specified omg portable interceptor specification http cgi.omg.org/cgi-bin/doc ptc/2000-08-06 section	__label__nonDir
may also contain string describing exception	__label__nonDir
annotation processing tool framework provide annotation processor object implementing interface processor query information round annotation processing	__label__nonDir
override parent method avoid creating menu bar	__label__nonDir
make container undisplayable removing connection native screen resource	__label__nonDir
class encapsulating currency defined iso	__label__nonDir
transforms jar file packed stream pack200 format	__label__nonDir
example java.util.hashtable collections.synchronizedmap new hashmap synchronized	__label__nonDir
root event class awt event	__label__nonDir
aligns origin graphic roman baseline line	__label__nonDir
return number key-value mapping map	__label__nonDir
return descriptor equal descriptor	__label__nonDir
allows mbean perform operation needed registered mbean server registration ha failed	__label__nonDir
creates return propertychangelistener responsible listening change specified action updating appropriate property	__label__nonDir
wildcardtype represents wildcard type expression	__label__nonDir
package enables text editing component receive text input input method	__label__nonDir
poa ha non_retain policy us servant manager servantlocators	__label__nonDir
org/omg/corba/policyhelper.java generated idl-to-java compiler portable version src/share/classes/org/omg/portableserver/corba.idl saturday july pdt	__label__nonDir
atomically set given value return old value	__label__nonDir
set maximum number row rowset object may contain given number	__label__nonDir
return string representation collection	__label__nonDir
visit annotation_type type element calling defaultaction	__label__nonDir
predestroy annotation used method callback notification signal instance process removed container	__label__nonDir
remove element deque	__label__nonDir
service provider found system classpath e.g jre/lib/ext directory sun implementation jdk automatically loaded soon class instantiated	__label__nonDir
return x position event relative source component	__label__nonDir
check button selected	__label__nonDir
set command string used action event	__label__nonDir
also defines static method testing whether particular charset supported locating charset instance name constructing map contains every charset support available current java virtual machine	__label__nonDir
return string representation jtooltip	__label__nonDir
xml/java type mapping	__label__nonDir
return default cell renderer used stamping node	__label__nonDir
class implement server socket	__label__nonDir
constant small form variant unicode character block	__label__nonDir
helper booleanseq	__label__nonDir
get accessiblecontext associated jtooltip	__label__nonDir
attribute key converting ascii decimal digit decimal range	__label__nonDir
refer swing component supporting action detail find information use action section java tutorial	__label__nonDir
single pixel solid low underline	__label__nonDir
class defines service provider interface spi securerandom class	__label__nonDir
constant tai tham unicode character block	__label__nonDir
description copied class abstractborder	__label__nonDir
method allows syncprovider object reset	__label__nonDir
creates new instance cachedrowset	__label__nonDir
set designated parameter object java programming language	__label__nonDir
lay specified container using card layout	__label__nonDir
provides library support java programming language annotation facility	__label__nonDir
seekable output stream interface use imagewriters	__label__nonDir
obtains toolkit implementation helper class mouseinfo operation	__label__nonDir
object represents orb service service_detail_type field contains type orb service service_detail field contains description orb service	__label__nonDir
return array action listener registered trayicon	__label__nonDir
version jdbc api incorporates previous jdbc api version jdbc api jdbc api jdbc api jdbc core api jdbc optional package api note jdbc core api jdbc optional package api together referred jdbc api	__label__nonDir
return list constructor element	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
return string describing modifier key shift ctrl+shift	__label__nonDir
container holder exception used request operation make exception available client	__label__nonDir
 @param iterator the iterator to add to the collation, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if list is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the buffer is null	__label__NotNullDirective
 @throws IllegalArgumentException if list is null	__label__NotNullDirective
 @param iterator the iterator to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param entry the entry to copy, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @throws NullPointerException if name is null.	__label__NotNullDirective
 @param put to wrap, must not be null	__label__NotNullDirective
 @param predicates a collection of predicates to check, may not be null	__label__NotNullDirective
 @throws IllegalArgumentException if any predicate in the collection is null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param coll2 the first collection, must not be null	__label__NotNullDirective
 @param collection the collection to add to, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param b the second collection, must not be null	__label__NotNullDirective
 @param transformer the transformer for the buffer, must not be null	__label__NotNullDirective
 @param a the first collection, must not be null	__label__NotNullDirective
 @param predicate the predicate for the bag, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the SortedMap is null	__label__NotNullDirective
 @throws NullPointerException if the key is null and null keys are invalid	__label__NotNullDirective
 . @param map the map to synchronize, must not be null	__label__NotNullDirective
 @param map the map to synchronize, must not be null	__label__NotNullDirective
 @param transformerFactory the factory for creating new objects, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param factory the factory for creating new objects, must not be null	__label__NotNullDirective
 @param transformer the transformer for the list, must not be null	__label__NotNullDirective
 @param a the first collection, must not be null	__label__NotNullDirective
 @param predicates array of predicates, cloned, no nulls	__label__NotNullDirective
 @throws NullPointerException if the entry is null	__label__NotNullDirective
 @throws IllegalArgumentException if the prototype is null	__label__NotNullDirective
 @throws IllegalArgumentException if the classToInstantiate is null	__label__NotNullDirective
 @throws NullPointerException if either srcCspace or dstCspace is null	__label__NotNullDirective
 @throws NullPointerException if array is null	__label__NotNullDirective
 @param out the stream to print to, must not be null	__label__NotNullDirective
 @throws NullPointerException if the stream is null	__label__NotNullDirective
 Insert the specified contents into the control's current contents. Must not be null.	__label__NotNullDirective
 @throws NullPointerException if { b} is null	__label__NotNullDirective
 @param value the value for the entry, may be null	__label__NullSemanticsDirective
 If this parameter is null, then only a specified keyStroke will invoke content proposal	__label__NullSemanticsDirective
 @param key the key to use when persisting the user's preference; null if you don't want it persisted.	__label__NullSemanticsDirective
 @param store the IPreference store in which the user's preference should be persisted; null if you don't want it persisted automatically.	__label__NullSemanticsDirective
 the font or null to use the default font	__label__NullSemanticsDirective
 If subjectKeyID is not null, it should contain a single DER encoded value corresponding to the contents of the extension value (not including the object identifier, criticality setting, and encapsulating OCTET STRING) for a SubjectKeyIdentifier extension.	__label__NullSemanticsDirective
 If key is not null, it should contain a single DER encoded SubjectPublicKeyInfo structure, as defined in X.509.	__label__NullSemanticsDirective
 Specify null to return all Certificates (if supported).	__label__NullSemanticsDirective
 @param dir the working directory of the subprocess, or null if the subprocess should inherit the working directory of the current process.	__label__NullSemanticsDirective
 @param outputCollection the collection to output into, may not be null	__label__NullSemanticsDirective
 @param valueTransformer the transformer for the map values, null means no transformation	__label__NullSemanticsDirective
 @param keyTransformer the transformer to use for key conversion, null means no conversion	__label__NullSemanticsDirective
 @param valueTransformer the predicate to validate to values, null means no transformation	__label__NullSemanticsDirective
 @param valuePredicate the predicate to validate to values, null means no check	__label__NullSemanticsDirective
 @param object the object to add, if null it will not be added @return true if the collection changed	__label__NullSemanticsDirective
 @param valuePredicate the predicate to validate to values, null means no check	__label__NullSemanticsDirective
 @param comparator the comparator used to order the elements, null means use natural order	__label__NullSemanticsDirective
 A null value indicates that the elements' {@linkplain Comparable natural ordering} should be used.	__label__NullSemanticsDirective
 If the number of formal parameters required by the underlying constructor is 0, the supplied initargs array may be of length 0 or null.	__label__NullSemanticsDirective
 @param resourceBundleName name of ResourceBundle to be used for localizing messages for this logger. May be null if none of the messages require localization.	__label__NullSemanticsDirective
 @param key the key for the entry, may be null	__label__NullSemanticsDirective
 @param text the text to be shown in the info hover, or null if no text should be shown.	__label__NullSemanticsDirective
 @param annotationHover the hover to be used, null is a valid argument	__label__NullSemanticsDirective
 @param newSelection the selection after the update, or null if none	__label__NullSemanticsDirective
 The block increment must be greater than zero	__label__NumberRangeDirective
 The ttl must be in the range 0 <= ttl <= 255	__label__NumberRangeDirective
 The timeout must be > 0.	__label__NumberRangeDirective
 @param size the size to which to set the send buffer size. This value must be greater than 0.	__label__NumberRangeDirective
 Specifying a port number of -1 indicates that the URL should use the default port for the protocol.	__label__NumberRangeDirective
 This value may be negative, in which case releases must occur before any acquires will be granted.	__label__NumberRangeDirective
 @param length the number of consecutive bytes to be copied; the value for length must be 0 or greater	__label__NumberRangeDirective
 @param kind the kind of dialog to open, one of {@link #ERROR}, {@link #INFORMATION}, {@link #QUESTION}, {@link #WARNING}, {@link #CONFIRM}, or {#QUESTION_WITH_CANCEL}.	__label__NumberRangeDirective
 A valid port value is between 0 and 65535.	__label__NumberRangeDirective
 The name must conform to RFC 2965.	__label__StringFormatDirective
 The prefix argument must be at least three characters long.	__label__StringFormatDirective
 It also understands the continental U.S. time-zone abbreviations, but for general use, a time-zone offset should be used: "Sat, 12 Aug 1995 13:30:00 GMT+0430" (4 hours, 30 minutes west of the Greenwich meridian).	__label__StringFormatDirective
 @param header a String specifying the set-cookie header. The header should start with "set-cookie", or "set-cookie2" token; or it should have no leading token at all.	__label__StringFormatDirective
 The World Wide Web Consortium Recommendation states that UTF-8 should be used. Not doing so may introduce incompatibilites.	__label__StringFormatDirective
 If the conversion is 'a' or 'A', then the precision must not be specified.	__label__StringFormatDirective
 For ignorable characters, the first rule must start with a relation (the examples we have used above are really fragments; "a < b" really should be "< a < b").	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 If a name is specified as a byte array, it should contain a single DER encoded distinguished name, as defined in X.501.	__label__StringFormatDirective
 For a user-named parameter the fully-qualified SQL type name of the parameter should also be given, while a REF parameter requires that the fully-qualified type name of the referenced type be given. A JDBC driver that does not need the type code and type name information may ignore it. To be portable, however, applications should always provide these values for user-named and REF parameters.	__label__StringFormatDirective
 Valid strings are Base64 encoded binary data, as defined in RFC 2045, Section 6.8, with one minor change: the string must consist solely of characters from the Base64 Alphabet; no newline characters or extraneous characters are permitted.	__label__StringFormatDirective
 HTTP requires all request properties which can legally have multiple instances with the same key to use a comma-seperated list syntax which enables multiple properties to be appended into a single property.	__label__StringFormatDirective
 The recommended encoding scheme to use is UTF-8. However, for compatibility reasons, if an encoding is not specified, then the default encoding of the platform is used.	__label__StringFormatDirective
 A URL can optionally specify a "port", which is the port number to which the TCP connection is made on the remote host machine. If the port is not specified, the default port for the protocol is used instead. For example, the default port for http is 80. An alternative port could be specified as:           http://www.socs.uts.edu.au:80/MosaicDocs-old/url-primer.html	__label__StringFormatDirective
 All elements in the collection must be mutually comparable by the specified comparator (that is, comp.compare(e1, e2) must not throw a ClassCastException for any elements e1 and e2 in the collection).	__label__MethodParameterTypeDirective
 Furthermore, all such elements must be mutually comparable: e1.compareTo(e2) (or comparator.compare(e1, e2)) must not throw a ClassCastException for any elements e1 and e2 in the sorted set.	__label__MethodParameterTypeDirective
 All keys and values must implement Comparable	__label__MethodParameterTypeDirective
 Both key and value must implement Comparable.	__label__MethodParameterTypeDirective
 The second argument must be an object type; for integral values, the java.lang equivalent objects should be used.	__label__MethodParameterTypeDirective
 @param insertPos the position in the text where the character was inserted. Must not be less than the start of newParagraph, and must be less than the end of newParagraph.	__label__MethodParameterCorrelationDirective
 In that case, the number of bands in the source Raster must match the number of components in srcCspace, and the number of bands in the destination Raster must match the number of components in dstCspace	__label__MethodParameterCorrelationDirective
 If the protected key is of type java.security.PrivateKey, it must be accompanied by a certificate chain certifying the corresponding public key	__label__MethodParameterCorrelationDirective
 The length argument must be less than or equal to buf.length	__label__MethodParameterCorrelationDirective
 Ideally, you should choose a value to accommodate as many threads as will ever concurrently modify the table.	__label__MethodParameterCorrelationDirective
 @throws IllegalArgumentException if end is before start	__label__MethodParameterCorrelationDirective
 If the JDBC type expected to be returned to this output parameter is specific to this particular database, sqlType should be java.sql.Types.OTHER.	__label__MethodParameterCorrelationDirective
 The range must be sorted (as by the {@link #sort(double[], int, int)} method) prior to making this call.	__label__MethodParameterCorrelationDirective
 The range must be sorted (as by the {@link #sort(float[], int, int)} method) prior to making this call.	__label__MethodParameterCorrelationDirective
 The bytes in positions off through off+len-1 should have the format of a valid class file as defined by the Java Virtual Machine Specification	__label__MethodParameterCorrelationDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__MethodParameterCorrelationDirective
 @param b the bytes that make up the class data. The bytes from positions b.position() through b.position() + b.limit() -1 should have the format of a valid class file as defined by the Java Virtual Machine Specification.	__label__MethodParameterCorrelationDirective
 If the second argument is an InputStream then the stream must contain the number of bytes specified by scaleOrLength.	__label__MethodParameterCorrelationDirective
 Note that thes margins will be added to the ones specified by {@link #margins(int, int)}.	__label__MethodParameterCorrelationDirective
 @return the dialog, after being closed by the user, which the client can only call getReturnCode() or getToggleState()	__label__Post-CallDirective
 If it is not then it must not be changed.	__label__Post-CallDirective
 To achieve laziness the actual work of parsing the available provider-configuration files and instantiating providers must be done by the iterator itself.	__label__Post-CallDirective
 @return The SWT look-up table for key stroke format information; never null.	__label__ReturnValueDirective
 @return The singleton instance; this value is never null.	__label__ReturnValueDirective
 If createButton was never called with this parameter, or if createButton is overridden, getOKButton will return null. @return the OK button or null	__label__ReturnValueDirective
 @return the OID (never null)	__label__ReturnValueDirective
 @return the number of processors available to the virtual machine; never smaller than one.	__label__ReturnValueDirective
 Results must be semi-monotonic	__label__ReturnValueDirective
 Ranges must be in ascending order and must not overlap.	__label__ReturnValueDirective
 It must contain at least a Locale instance equal to {@link java.util.Locale#US Locale.US}.	__label__ReturnValueDirective
 Thus, a custom equals method for a collection class that implements neither the List nor Set interface must return false when this collection is compared to any list or set.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.	__label__ReturnValueDirective
 by subclasses to use an alternate loading mechanism but must return a Class object	__label__ReturnValueDirective
 The List returned must be immutable and thread-safe.	__label__ReturnValueDirective
 f this operation is supported, the returned set of permissions must be a new mutable instance and it must support heterogeneous Permission types.	__label__ReturnValueDirective
 the returned set of permissions must be a new mutable instance and it must support heterogeneous Permission types.	__label__ReturnValueDirective
 All results returned by the {@link CertPathValidator#validate CertPathValidator.validate} method must implement this interface.	__label__ReturnValueDirective
 @return a new looping iterator	__label__ReturnValueDirective
 It must contain at least a Locale instance equal to {@link java.util.Locale#US Locale.US}.	__label__ReturnValueDirective
 Gets the previous key before the key specified, always null.	__label__ReturnValueDirective
 Since this method always increases the size of the bag, according to the {@link Collection#add(Object)} contract, it should always return true.	__label__ReturnValueDirective
 In other words, this method must allocate a new array	__label__ReturnValueDirective
 In other words, this method must allocate a new array	__label__ReturnValueDirective
 The iterator returned by the iterator method must implement hasNext and next.	__label__ReturnValueDirective
 This is not intended to be called outside of the workbench.	__label__MethodCallVisibilityDirective
 This constructor should only be used for serialization.	__label__MethodCallVisibilityDirective
 Denigrated, replaced by {@linkplain #getSubjectX500Principal()}. This method returns the subject as an implementation specific Principal object, which should not be relied upon by portable code.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL TIME values do not have a month component.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL Date values do not have a time component.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL Date values do not have a time component.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 The string representation of this binding -- for debugging purposes only.	__label__MethodCallVisibilityDirective
 An application should not normally try to catch ThreadDeath unless it must do some extraordinary cleanup operation (note that the throwing of ThreadDeath causes finally clauses of try statements to be executed before the thread officially dies). If a catch clause catches a ThreadDeath object, it is important to rethrow the object so that the thread actually dies.	__label__MethodCallVisibilityDirective
 A more complete and consistent set of LIFO stack operations is provided by the {@link Deque} interface and its implementations, which should be used in preference to this class.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 @deprecated As of 3.3, this class is no longer necessary.	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 This concrete dialog class can be instantiated as is	__label__MethodCallVisibilityDirective
 @throws ZipException if a compression (ZIP) format error occurs	__label__ExceptionRaisingDirective
 @exception SQLException if the columnIndex is not valid; if a database access error occurs; the result set concurrency is CONCUR_READ_ONLY or this method is called on a closed result set @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @exception IOException if an I/O error occurs. @exception SocketTimeoutException if setSoTimeout was previously called and the timeout has expired. @exception PortUnreachableException may be thrown if the socket is connected to a currently unreachable destination. Note, there is no guarantee that the exception will be thrown. @exception java.nio.channels.IllegalBlockingModeException if this socket has an associated channel, and the channel is in non-blocking mode	__label__ExceptionRaisingDirective
 @throws SQLException if parameterName does not correspond to a named parameter; if the driver does not support national character sets; if the driver can detect that a data conversion error could occur; if a database access error occurs or this method is called on a closed CallableStatement @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @exception SQLException if a database access error occurs	__label__ExceptionRaisingDirective
 If a security manager exists, its {@link SecurityManager#checkPermission checkPermission} method is called with a {@link RuntimePermission}("getenv."+name) permission. This may result in a {@link SecurityException} being thrown. If no exception is thrown the value of the variable name is returned.	__label__ExceptionRaisingDirective
 @param filename the file to load. @exception SecurityException if a security manager exists and its checkLink method doesn't allow loading of the specified dynamic library @exception UnsatisfiedLinkError if the file does not exist.	__label__ExceptionRaisingDirective
 @throws IllegalMonitorStateException if exclusive synchronization is not held @throws IllegalArgumentException if the given condition is not associated with this synchronizer @throws NullPointerException if the condition is null	__label__ExceptionRaisingDirective
 @exception SecurityException If a security manager, s, is present and any of the following conditions is met	__label__ExceptionRaisingDirective
 @throws IllegalFormatException If a format string contains an illegal syntax, a format specifier that is incompatible with the given arguments, insufficient arguments given the format string, or other illegal conditions. For specification of all possible formatting errors, see the Details section of the formatter class specification.	__label__ExceptionRaisingDirective
 Throws CloneNotSupportedException. This guarantees that enums are never cloned, which is necessary to preserve their "singleton" status. @return (never returns)	__label__ExceptionRaisingDirective
 @exception IOException If an I/O error occurs	__label__ExceptionRaisingDirective
 @exception EOFException if this input stream has reached the end. @exception IOException the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs.	__label__ExceptionRaisingDirective
 @exception IllegalArgumentException - if the array is null, or if any of the indices is not between 0 and the number of elements in the list minus 1 (inclusive)	__label__ExceptionRaisingDirective
 This exception must be thrown in a consistent fashion for synchronization to work correctly.	__label__ExceptionRaisingDirective
 Note that null is not an instance of any class, and e.compareTo(null) should throw a NullPointerException even though e.equals(null) returns false.	__label__ExceptionRaisingDirective
 For many such operations it is possible to return a value that indicates timeout; when that is not possible or desirable then TimeoutException should be declared and thrown.	__label__ExceptionRaisingDirective
 Generally speaking, this method should not throw an exception under any circumstances.	__label__ExceptionRaisingDirective
 Generally speaking, these SPI methods should not throw exceptions.	__label__ExceptionRaisingDirective
 There is one circumstance under which putSpi, removeSpi and childSpi should throw an exception: if the caller lacks sufficient privileges on the underlying operating system to perform the requested operation.	__label__ExceptionRaisingDirective
 @exception SQLException if there is an error accessing the length of the BLOB @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 The url argument that is passed as an argument must specify an absolute URL.	__label__MiscellaneousMethodCallDirective
 The file component must be specified.	__label__MiscellaneousMethodCallDirective
 The given CompositeData must contain the following attributes:	__label__MiscellaneousMethodCallDirective
 The name is provided as a byte array. This byte array should contain a single DER encoded distinguished name, as defined in X.501.	__label__MiscellaneousMethodCallDirective
 The keys should be immutable If they are not then they must not be changed after adding to the MultiKey.	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog;	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database;"" retrieves those without a catalog; null means catalog name should not be used to narrow down the search.	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param procedureNamePattern a procedure name pattern; must match the procedure name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param schema a schema name; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in this database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param columnNamePattern a parameter name pattern; must match the parameter or column name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in this database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 The range must be sorted (as by the {@link #sort(long[], int, int)} method) prior to making this call	__label__MiscellaneousMethodCallDirective
 This implementation of IRunnableContext#run(boolean, boolean, IRunnableWithProgress) blocks until the runnable has been run, regardless of the value of fork. It is recommended that fork is set to true in most cases. If fork is set to false, the runnable will run in the UI thread and it is the runnable's responsibility to call Display.readAndDispatch() to ensure UI responsiveness.	__label__MiscellaneousMethodCallDirective
 In the event of an error, a default image is returned if returnMissingImageOnError is true, otherwise null is returned.  Note: Even if returnMissingImageOnError is true, it is still possible for this method to return null in extreme cases, for example if SWT runs out of image handles.	__label__MiscellaneousMethodCallDirective
 Do not subclass.	__label__ExtensibleClassIdentificationDirective
 Note: this class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 This class is neither intended to be instantiated nor subclassed.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 Not intended to be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be subclassed outside the viewer framework.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 This interface is internal to the framework; it should not be implemented outside the framework.	__label__ExtensibleClassIdentificationDirective
 Clients may extend this class.	__label__ExtensibleClassIdentificationDirective
 it may also be subclassed.	__label__ExtensibleClassIdentificationDirective
 Clients may subclass this class but should expect some breakage by future releases.	__label__ExtensibleClassIdentificationDirective
 The interface can be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 The interface can be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 This interface must be implemented by clients. Implementers should be registered with a reconciler in order get involved in the reconciling process.	__label__ExtensibleClassIdentificationDirective
 This interface may be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 The interface can be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 A runtime exception for Provider exceptions (such as misconfiguration errors or unrecoverable internal errors), which may be subclassed by Providers to throw specialized, provider-specific runtime errors.	__label__ExtensibleClassIdentificationDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 Subclasses may extend this method	__label__MethodOverridingDirective
 Subclasses may extend this method.	__label__MethodOverridingDirective
 subclasses must override this method	__label__MethodOverridingDirective
 They should override {@link #getInformationPresenterControlCreator()}.	__label__MethodOverridingDirective
 Subclasses should extend if extra pages need to be added before the wizard opens.	__label__MethodOverridingDirective
 Concrete subclasses must implement three methods:     1. format(Object obj, StringBuffer toAppendTo, FieldPosition pos)    2. formatToCharacterIterator(Object obj)    3. parseObject(String source, ParsePosition pos)	__label__MethodOverridingDirective
 Subclasses may reimplement this method to provide a more optimized implementation.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses must implement the IAction.run method to carry out the action's semantics.	__label__MethodOverridingDirective
 Subclasses may override this method to update additional buttons.	__label__MethodOverridingDirective
 Subclasses should override this method when an alternate default size is desired, rather than overriding {@link #getInitialSize()}.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override this method, but typically do not.	__label__MethodOverridingDirective
 Subclasses must implement this method to save the entered value into the preference store.	__label__MethodOverridingDirective
 May be extended by subclasses.	__label__MethodOverridingDirective
 May be replaced or extended by subclasses.	__label__MethodOverridingDirective
 May be replaced or extended by subclasses.	__label__MethodOverridingDirective
 May be replaced or extended by subclasses.	__label__MethodOverridingDirective
 Hook method to format the given single message.  Subclasses can change this to create a different format like HTML.	__label__MethodOverridingDirective
 Subclasses should override the default implementation, which returns null.	__label__MethodOverridingDirective
 Subclasses of FilterWriter should override some of these methods	__label__MethodOverridingDirective
 Subclasses may override this method to customize the cool bar manager.	__label__MethodOverridingDirective
 Subclasses may override this method to provide an alternative implementation for the tool bar manager.	__label__MethodOverridingDirective
 This framework method must be implemented by concrete subclasses.	__label__MethodOverridingDirective
 Subclasses should overwrite.	__label__MethodOverridingDirective
 Subclasses should overwrite this method, which has a default implementation (returning 0) for API backwards compatility reasons	__label__MethodOverridingDirective
 Subclasses of class Permission should override this if they need to store their permissions in a particular PermissionCollection object in order to provide the correct semantics when the PermissionCollection.implies method is called.	__label__MethodOverridingDirective
 Otherwise, it calls {@link #identityEquals(Identity) identityEquals}, which subclasses should override.	__label__MethodOverridingDirective
 Subclasses may override any of the following methods:      * isLabelProperty     * getImage     * getText     * dispose	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Overriding this method is generally not required; however, if overriding in a subclass, super.updateSelection must be invoked.	__label__MethodOverridingDirective
 Applications that want a stricter policy should override this method.	__label__MethodOverridingDirective
 Clients are expected to override the creation of the main dialog area, and may optionally override the creation of the title area and info area in order to add content.	__label__MethodOverridingDirective
 Implementors must either use the dialog font or override {@link #computeSizeConstraints(int, int)}.	__label__MethodOverridingDirective
 Subclasses can override this to match differently.	__label__MethodOverridingDirective
 Subclasses may override if the subclass has a specific field that must be present before put() or calculateThreshold() will work correctly.	__label__MethodOverridingDirective
 Subclasses may override if they have a specific field that must be present on read before this implementation will work.	__label__MethodOverridingDirective
 Subclasses can override this to return iterators with different properties.	__label__MethodOverridingDirective
 Override to transform the value when using setValue.	__label__MethodOverridingDirective
 Your subclasses must override two methods: handleGetObject and getKeys().	__label__MethodOverridingDirective
 Implementors must override the nine abstract service-provider interface (SPI) methods:	__label__MethodOverridingDirective
 Subclasses must override getContents and provide an array, where each item in the array is a pair of objects.	__label__MethodOverridingDirective
 To implement a modifiable collection, the programmer must additionally override this class's add method (which otherwise throws an UnsupportedOperationException),	__label__MethodOverridingDirective
 May be overidden by handlers for other protocols that have different requirements for hashCode calculation.	__label__MethodOverridingDirective
 It is recommended that subclasses override this method.	__label__MethodOverridingDirective
 This method is meant to be overidden by handlers with default port numbers.	__label__MethodOverridingDirective
 It can be overriden in a subclass.	__label__MethodOverridingDirective
 Subclasses may override this method to invoke completion callbacks or perform bookkeeping.	__label__MethodOverridingDirective
 Subclasses are encouraged to provide a more efficient implementation of this method.	__label__MethodOverridingDirective
 Note: This default is incorrect but cannot be changed in order not to break any existing clients. Subclasses should overwrite this method and use {@link #getIndentPrefixesForTab(int)} if applicable.	__label__MethodOverridingDirective
 The class FilterInputStream itself simply overrides all methods of InputStream with versions that pass all requests to the contained input stream. Subclasses of FilterInputStream may further override some of these methods and may also provide additional methods and fields.	__label__MethodOverridingDirective
 Subclasses typically need not override this method,	__label__MethodOverridingDirective
 Do neither call nor override.	__label__MethodOverridingDirective
 Subclasses should always call super.getForegroundColorExclusions to aggregate the list.	__label__MethodExtensionDirective
 Subclasses call super.dispose	__label__MethodExtensionDirective
 Any subclass of RequiredModelMBean overloading or overriding this method should call super.preDeregister()	__label__MethodExtensionDirective
 Subclasses may call super as in the following example	__label__MethodExtensionDirective
 Subclasses can override or extend.	__label__MethodExtensionDirective
 close- extend to free other SWT resources	__label__MethodExtensionDirective
 extend dispose	__label__MethodExtensionDirective
 This method may be extended (super.close must be called).	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkListen at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkAccept at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If this method is overridden, then super.checkPackageDefinition should be called as the first line in the overridden method.	__label__MethodExtensionDirective
 If this method is overridden, then a call to super.checkMemberAccess cannot be made, as the default implementation of checkMemberAccess relies on the code being checked being at a stack depth of 4.	__label__MethodExtensionDirective
 Subclasses must call this method at the end of their constructor(s)	__label__CallContractSubclassingDirective
 The default implementation of this method should call getContent() and screen the return type for a match of the suggested types.	__label__CallContractSubclassingDirective
 The first serializable subclass must call this method from writeObject.	__label__CallContractSubclassingDirective
 Implementation of this method must finish their computation by setting the computation results using setInformation.	__label__CallContractSubclassingDirective
 . Should only succeed once per remote call.	__label__MethodImplementationDirective
 The implementation of the method must follow this protocol: * It must read each of the attributes or elements of the SQL type from the given input stream. This is done by calling a method of the input stream to read each item, in the order that they appear in the SQL definition of the type. * The method readSQL then assigns the data to appropriate fields or elements (of this or other objects). Specifically, it must call the appropriate reader method (SQLInput.readString, SQLInput.readBigDecimal, and so on) method(s) to do the following: for a distinct type, read its single data element; for a structured type, read a value for each attribute of the SQL type.	__label__MethodImplementationDirective
 Marking a closed stream should not have any effect on the stream.	__label__MethodImplementationDirective
 The driver shall submit a query on the connection or use some other mechanism that positively verifies the connection is still valid when this method is called.  The query submitted by the driver to validate the connection shall be executed in the context of the current transaction.	__label__MethodImplementationDirective
 It is strongly recommended, but not strictly required that (x.compareTo(y)==0) == (x.equals(y)).	__label__MethodImplementationDirective
 Therefore, most methods with more than 0.5 ulp errors are required to be semi-monotonic: whenever the mathematical function is non-decreasing, so is the floating-point approximation, likewise, whenever the mathematical function is non-increasing, so is the floating-point approximation.	__label__MethodImplementationDirective
 All general-purpose map implementation classes should provide two "standard" constructors: a void (no arguments) constructor which creates an empty map, and a constructor with a single argument of type Map, which creates a new map with the same key-value mappings as its argument.	__label__MethodImplementationDirective
 A single call to { add(int, E)} or { remove(int)} must add no more than one to this field, or the iterators (and list iterators) will throw bogus { ConcurrentModificationExceptions}.	__label__MethodImplementationDirective
 Two possibly null elements e1 and e2 are deeply equal if any of the following conditions hold:      e1 and e2 are both arrays of object reference types, and Arrays.deepEquals(e1, e2) would return true     e1 and e2 are arrays of the same primitive type, and the appropriate overloading of Arrays.equals(e1, e2) would return true.     e1 == e2     e1.equals(e2) would return true.   Note that this definition permits null elements at any depth.	__label__MethodImplementationDirective
 Generic list algorithms are encouraged to check whether the given list is an instanceof this interface before applying an algorithm that would provide poor performance if it were applied to a sequential access list, and to alter their behavior if necessary to guarantee acceptable performance.	__label__MethodImplementationDirective
 Assumes that all annotations are represented using the same height.	__label__MethodImplementationDirective
 This set will not contain the element once the call returns	__label__MethodImplementationDirective
 If you reimplement this method, you should also reimplement createContents.	__label__Non-localConsistencySubclassingDirective
 All CertPathBuilder implementations must include a class (the SPI class) that extends this class (CertPathBuilderSpi) and implements all of its methods.	__label__Non-localConsistencySubclassingDirective
 If this method returns true then calling unwrap with the same argument should succeed.	__label__Non-localConsistencySubclassingDirective
 The readExternal method must read the values in the same sequence and with the same types as were written by writeExternal.	__label__Non-localConsistencySubclassingDirective
 In order for the data structure to serialize successfully, the comparator (if provided) must implement Serializable.	__label__Non-localConsistencySubclassingDirective
 The reader must present a serialized form as produced by the save method.	__label__Non-localConsistencySubclassingDirective
 These methods must explicitly coordinate with the supertype to save its state.	__label__MiscellaneousSubclassingDirective
 Subclasses that hook their own focus listener should override this method and return false.	__label__MiscellaneousSubclassingDirective
 Most Deque implementations place no fixed limits on the number of elements they may contain, but this interface supports capacity-restricted deques as well as those with no fixed size limit.	__label__MiscellaneousSubclassingDirective
 This method must be called to release any resources associated with the stream.	__label__MethodCallSequenceDirective
 Must be called to release any resources associated with the stream	__label__MethodCallSequenceDirective
 Must be called to release any resources associated with the stream.	__label__MethodCallSequenceDirective
 All the data in the returned stream must be read prior to getting the value of any other column	__label__MethodCallSequenceDirective
 Note that you must first call one of the getter methods on a column to try to read its value and then call the method wasNull to see if the value read was SQL NULL	__label__MethodCallSequenceDirective
 This method may only be called once; the call must occur before JFaceResources.getFontRegistry is invoked	__label__MethodCallSequenceDirective
 The option must be set prior to entering a blocking operation to take effect	__label__MethodCallSequenceDirective
 This method must be called before the URLConnection is connected.	__label__MethodCallSequenceDirective
 Because isShowing returns false when the applet's start is first called, methods requiring isShowing to return true should be called from a ComponentListener.	__label__MethodCallSequenceDirective
 This method may only be called after initializeDialogUnits has been called.	__label__MethodCallSequenceDirective
 Done should only be called if the invoke returns successfully (non-exceptionally) to the stub.	__label__MethodCallSequenceDirective
 All OUT parameters must be registered before a stored procedure is executed.	__label__MethodCallSequenceDirective
 The getKeyStore method must be invoked before this method may be called.	__label__MethodCallSequenceDirective
 This means that you don't have to wrap instances of this class with {@link java.util.Collections#synchronizedMap(Map)}; instances are already thread-safe.	__label__MethodCallSequenceDirective
 Purges stale mappings from this map before write operations.	__label__MethodCallSequenceDirective
 An unused ExecutorService should be shut down to allow reclamation of its resources.	__label__MethodCallSequenceDirective
 @throws IllegalStateException if the next method has not yet been called, or the remove method has already been called after the last call to the next method.	__label__MethodCallSequenceDirective
 	__label__MethodCallSequenceDirective
 When waiting upon a { Condition}, a "spurious wakeup" is permitted to occur, in general, as a concession to the underlying platform semantics. This has little practical impact on most application programs as a { Condition} should always be waited upon in a loop, testing the state predicate that is being waited for.	__label__MethodCallSequenceDirective
 This can be used prior to a sequence of additions to avoid memory reallocation.	__label__MethodCallSequenceDirective
 Returns the SWT menu, created as a pop up menu parented by the given control. In most cases, this menu can be created once, cached and reused when the pop-up/drop-down action occurs. If the menu must be dynamically created (i.e., each time it is popped up or dropped down), the old menu should be disposed of before replacing it with the new menu.	__label__MethodCallSequenceDirective
 This method takes the Device that created the Image as an argument, allowing the original Image to be reused if the descriptor is asked for another Image on the same device.	__label__MethodCallSequenceDirective
 Painters are informed about changes to the viewer content and state and can take the necessary action in responds to the notification.	__label__MethodCallSequenceDirective
 This method will be called before any other method and can be called multiple times.	__label__MethodCallSequenceDirective
 Must be called before paint is called the first time.	__label__MethodCallSequenceDirective
 If no TableColumns were created by the programmer, this method will throw ERROR_INVALID_RANGE despite the fact that a single column of data may be visible in the table.	__label__MethodCallSequenceDirective
 Must be called before start. May again be called between start and stop.	__label__MethodCallSequenceDirective
 TableViewer#replace(Object, int) is not called before returning from this method selections may have missing or stale elements. In this situation it is suggested that the selection is asked for again after he update.	__label__MethodCallSequenceDirective
 This feature is only supported if the underlying list's {@link List#listIterator} method returns an implementation that supports it.	__label__NonCall-basedStateDirective
 The setValue() method on iterators will succeed only if the new value being set is not already in the bidimap.	__label__NonCall-basedStateDirective
 This version of registerOutParameter should be used when the parameter is of JDBC type NUMERIC or DECIMAL.	__label__NonCall-basedStateDirective
 ComparatorChains cannot be modified once they have performed a comparison.	__label__NonCall-basedStateDirective
 @throws IndexOutOfBoundsException if the index is out of range (index < 0 || index > size()).	__label__NonCall-basedStateDirective
 For each certificate cert in a certification path certPath, cert.getType().equals(certPath.getType()) must be true.	__label__NonCall-basedStateDirective
 A PKIX CertPathBuilder instance must not build paths longer than the length specified.	__label__NonCall-basedStateDirective
 The hover information control which is used to display the information must be able process the given object.	__label__NonCall-basedStateDirective
 If the current thread is the holder of this lock then the hold count is decremented. If the hold count is now zero then the lock is released. If the current thread is not the holder of this lock then {@link IllegalMonitorStateException} is thrown. @throws IllegalMonitorStateException if the current thread does not hold this lock.	__label__NonCall-basedStateDirective
 However, a call to set(Calendar.DAY_OF_MONTH, 30) before the call to getTime() sets the date to September 30, 1999, since no recomputation occurs after set() itself.	__label__NonCall-basedStateDirective
 After this method returns, the next character to be read will have the value cbuf[off], the character after that will have the value cbuf[off+1], and so forth.	__label__NonCall-basedStateDirective
 Subclassers are advised to override inputChanged rather than this method	__label__AlternativeDirective
 You must call either the method getResultSet or getUpdateCount to retrieve the result	__label__AlternativeDirective
 Client implementations of dispatchEvent and client-defined KeyEventDispatchers must call redispatchEvent(target, e) instead of target.dispatchEvent(e) to dispatch an event.	__label__AlternativeDirective
 The new {@link #setScale(int, RoundingMode)} method should be used in preference to this legacy method.	__label__AlternativeDirective
 When a { double} must be used as a source for a { BigDecimal}, note that this constructor provides an exact conversion; it does not give the same result as converting the { double} to a { String} using the {@link Double#toString(double)} method and then using the {@link #BigDecimal(String)} constructor. To get that result, use the { static} {@link #valueOf(double)} method.	__label__AlternativeDirective
 An application does not generally call the getContent method in this class directly. Instead, an application calls the getContent method in class URL or in URLConnection.	__label__AlternativeDirective
 It is recommended to use ViewerComparator instead.	__label__AlternativeDirective
 This method clears the existing bindings, but does not trigger a recomputation (other method calls are required to do that).	__label__AlternativeDirective
 Subclasses must either override this method or implement {@link IInformationControlExtension2}.	__label__AlternativeDirective
 A subclass should therefore use the object in this field rather than this or a synchronized method.	__label__AlternativeDirective
 If an application absolutely must call a getPermissions method, it should call getPermissions(ProtectionDomain).	__label__AlternativeDirective
 Denigrated, use {@linkplain #getIssuer()} or {@linkplain #getIssuerAsBytes()} instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.	__label__AlternativeDirective
 Denigrated, replaced by {@linkplain #getIssuerX500Principal()}. This method returns the issuer as an implementation specific Principal object, which should not be relied upon by portable code.	__label__AlternativeDirective
 In general, instances of this class should only be accessed through the CertStore class.	__label__AlternativeDirective
 Clients may use the standard implementation {@link org.eclipse.jface.text.TextViewer}.	__label__AlternativeDirective
 This method is no longer called by the framework and clients should overwrite {@link #apply(ITextViewer, char, int, int)} instead	__label__AlternativeDirective
 In general, {@link java.lang.String#toLowerCase()} should be used to map characters to lowercase.	__label__AlternativeDirective
 An alternative to this method is to use the better named {@link #keyList()} or {@link #keySet()}.	__label__AlternativeDirective
 This map is designed for performance and can outstrip HashMap. It also has good garbage collection characteristics.      * Optimised for operation at size 3 or less.     * Still works well once size 3 exceeded.     * Gets at size 3 or less are about 0-10% faster than HashMap,     * Puts at size 3 or less are over 4 times faster than HashMap.     * Performance 5% slower than HashMap once size 3 exceeded once.	__label__AlternativeDirective
 Note that TransformedSortedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedSortedMap}.	__label__AlternativeDirective
 Note that CompositeMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 WARNING: This method is binary incompatible with Commons Collections 2.1 and 2.1.1. Use new ArrayIterator(array,start,end) for compatability.	__label__AlternativeDirective
 If the last value for a key is removed, implementations typically return null from a subsequant get(Object), however they may choose to return an empty collection.	__label__AlternativeDirective
 @return the Collection of values, implementations should return null for no mapping, but may return an empty collection	__label__AlternativeDirective
 Unless prompt output is required, it is advisable to wrap a BufferedWriter around any Writer whose write() operations may be costly, such as FileWriters and OutputStreamWriters.	__label__AlternativeDirective
 If no such object exists, the map should be "wrapped" using the {@link Collections#synchronizedSortedMap Collections.synchronizedSortedMap} method.	__label__AlternativeDirective
 If you would like to ensure that unreferenced pools are reclaimed even if users forget to call {@link ThreadPoolExecutor#shutdown}, then you must arrange that unused threads eventually die, by setting appropriate keep-alive times, using a lower bound of zero core threads and/or setting {@link ThreadPoolExecutor#allowCoreThreadTimeOut(boolean)}.	__label__AlternativeDirective
 If {@link ICompletionProposalExtension5} is implemented, this method should not be called any longer.	__label__AlternativeDirective
 It is recommended to use setComparator() instead.	__label__AlternativeDirective
 This is not recommended and is included for backwards compatability. It is recommended to use the default font provided by SWT (that is, do not set the font).	__label__AlternativeDirective
 @deprecated as this method only checks or unchecks visible items is is recommended that {@link #setSubtreeChecked(Object, boolean)} is used instead.	__label__AlternativeDirective
 It is recommended that the {@link #probablePrime probablePrime} method be used in preference to this constructor unless there is a compelling need to specify a certainty.	__label__AlternativeDirective
 Subclasses of ClassLoader are encouraged to override {@link #findClass(String)}, rather than this method.	__label__AlternativeDirective
 May fail spuriously and does not provide ordering guarantees, so is only rarely an appropriate alternative to { compareAndSet}.	__label__AlternativeDirective
 If multiple threads access a hash set concurrently, and at least one of the threads modifies the set, it must be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the set. If no such object exists, the set should be "wrapped" using the {@link Collections#synchronizedSet Collections.synchronizedSet} method. This is best done at creation time, to prevent accidental unsynchronized access to the set:     Set s = Collections.synchronizedSet(new HashSet(...));	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of setClob which takes a length parameter.	__label__AlternativeDirective
 The default CertPathValidator type can be changed by setting the value of the "certpathvalidator.type" security property (in the Java security properties file) to the desired type.	__label__AlternativeDirective
 When using a capacity-restricted deque, it is generally preferable to use method {@link #offerLast}.	__label__AlternativeDirective
 For a one time comparison, this method has the best performance. If a given String will be involved in multiple comparisons, CollationKey.compareTo has the best performance.	__label__AlternativeDirective
 A subclass should therefore use the object in this field rather than this or a synchronized method.	__label__SynchronizationDirective
 Note that this implementation is not synchronized.	__label__SynchronizationDirective
 Instances of FixedOrderComparator are not synchronized. The class is not thread-safe at construction time, but it is thread-safe to perform multiple comparisons after all the setup operations are complete.	__label__SynchronizationDirective
 In either case the implementation must ensure that the signal is redirected to another waiting thread, if there is one.	__label__SynchronizationDirective
 Instances of this class need not be protected against concurrent access from multiple threads. Threads that need to access a single CertPathBuilderSpi instance concurrently should synchronize amongst themselves and provide the necessary locking before calling the wrapping CertPathBuilder object.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 Returns an iterator that does not support concurrent modification.  If the underlying list is modified while iterating using this iterator a ConcurrentModificationException will occur.	__label__SynchronizationDirective
 Note that DefaultedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 Note that IdentityMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 If multiple threads access a hash set concurrently, and at least one of the threads modifies the set, it must be synchronized externally.	__label__SynchronizationDirective
 If multiple threads access an identity hash map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally.	__label__SynchronizationDirective
 Note that this implementation is not synchronized. Multiple threads should not access a { PriorityQueue} instance concurrently if any of the threads modifies the queue.	__label__SynchronizationDirective
 The public methods of all CertStoreSpi objects must be thread-safe.	__label__SynchronizationDirective
 @param map the map to transform, must not be null, typically empty	__label__SynchronizationDirective
 When threads must repeatedly count down in this way, instead use a {@link CyclicBarrier}.	__label__SynchronizationDirective
 This method should only be called from the UI thread. If you are not on the UI thread then wrap the call with a PlatformUI.getWorkbench().getDisplay().synchExec() in order to guarantee the correct result. Failure to do this may result in an {@link SWTException} being thrown.	__label__SynchronizationDirective
 If this write lock is not held when any {@link Condition} method is called then an {@link IllegalMonitorStateException} is thrown. (Read locks are held independently of write locks, so are not checked or affected. However it is essentially always an error to invoke a condition waiting method when the current thread has also acquired read locks, since other threads that could unblock it will not be able to acquire the write lock.)	__label__SynchronizationDirective
 The JSR-181 tool must provide feedback if the service implementation bean is inconsistent with the portType and bindings declared in this WSDL.	__label__MiscellaneousDirective
 Typically, an exception will be thrown (such as {@link IllegalMonitorStateException}) and the implementation must document that fact.	__label__MiscellaneousDirective
 This constructor should only be used for serialization.	__label__MiscellaneousDirective
 Each class that implements PrivilegedAction should document what (if anything) this value represents.	__label__MiscellaneousDirective
 Not all databases allow for a non-typed Null to be sent to the backend. For maximum portability, the setNull or the setObject(int parameterIndex, Object x, int sqlType) method should be used instead of setObject(int parameterIndex, Object x).	__label__MiscellaneousDirective
 Not all databases allow for a non-typed Null to be sent to the backend. For maximum portability, the setNull or the setObject(String parameterName, Object x, int sqlType) method should be used instead of setObject(String parameterName, Object x).	__label__MiscellaneousDirective
 Generally speaking, any class that implements the Comparable interface and violates this condition should clearly indicate this fact.	__label__MiscellaneousDirective
 This method may be called frequently, so implementors should ensure it returns quickly, e.g. by caching the returned creator.	__label__MiscellaneousDirective
 Under many circumstances, linking Iterators together in this manner is more efficient (and convenient) than reading out the contents of each Iterator into a List and creating a new Iterator.	__label__MiscellaneousDirective
 Therefore, if a logging Handler wants to pass off a LogRecord to another thread, or to transmit it over RMI, and if it wishes to subsequently obtain method name or class name information it should call one of getSourceClassName or getSourceMethodName to force the values to be filled in.	__label__MiscellaneousDirective
 Compilers must ignore any warning names they do not recognize.	__label__MiscellaneousDirective
 For some memory pools, this method may be an expensive operation that requires some computation to determine the estimate.	__label__MiscellaneousDirective
 Beware that, unlike in most collections, the size method is not a constant-time operation. Because of the asynchronous nature of these sets, determining the current number of elements requires a traversal of the elements.	__label__MiscellaneousDirective
 Beware that, unlike in most collections, this method is NOT a constant-time operation. Because of the asynchronous nature of these queues, determining the current number of elements requires an O(n) traversal.	__label__MiscellaneousDirective
 Note that this implementation requires linear time in the size of the map.	__label__MiscellaneousDirective
 It is a compile-time error for a single ElementType constant to appear more than once in a Target annotation.	__label__MiscellaneousDirective
opportunity lazily evaluate desktop property value	__label__nonDir
provides interface class transferring data within application	__label__nonDir
orb responsible creating embodiment request delivering dynamic implementation routine dir	__label__nonDir
return location along x-axis render particular row	__label__nonDir
feature supported package include selection/highlighting editing style key mapping	__label__nonDir
indicates unknown kind type wa encountered	__label__nonDir
defines contract user-interface component assistive technology provides access component	__label__nonDir
attribute key paint used render text	__label__nonDir
return component tooltip applies	__label__nonDir
message digest secure one-way hash function take arbitrary-sized data output fixed-length hash value	__label__nonDir
also possible manually add service provider found automatically well remove using interface serviceregistry class	__label__nonDir
return preferred size dimension needed textfield	__label__nonDir
add specified action listener receive action event textfield	__label__nonDir
vertical metric header	__label__nonDir
helper doubleseq	__label__nonDir
return dialog plain	__label__nonDir
constant miscellaneous symbol pictograph unicode character block	__label__nonDir
constant public_member	__label__nonDir
point representing location x coordinate space specified integer precision	__label__nonDir
see package specification javax.xml.bind.package javadoc additional common information	__label__nonDir
return control info color current theme	__label__nonDir
class represents metadata set modelmbean element	__label__nonDir
provides class interface locating servant	__label__nonDir
multiplexing ui used combine comboboxuis	__label__nonDir
package specification collection framework overview collection framework annotated outline related documentation overview tutorial example guide tool documentation please see collection framework tutorial collection framework design faq	__label__nonDir
parameterizedtype represents parameterized type collection string	__label__nonDir
provides library support java programming language annotation facility	__label__nonDir
tell whether stream ready read	__label__nonDir
set element position given value	__label__nonDir
multiplexing ui used combine internalframeuis	__label__nonDir
object responsible handling sizing expanded issue	__label__nonDir
information helper file see generated file helper file	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
path searched order listed	__label__nonDir
visit byte value annotation	__label__nonDir
utility method operating program element	__label__nonDir
set designated parameter given java double value	__label__nonDir
provides portability layer set orb apis make possible code generated one vendor run another vendor orb	__label__nonDir
set field given object managed updater given updated value	__label__nonDir
description copied class abstractbutton	__label__nonDir
serialization note logrecord class serializable	__label__nonDir
request information accessible interceptor	__label__nonDir
implemented wide variety way even populate caller row nonrelational data source	__label__nonDir
similarly callables submitted executorservice	__label__nonDir
return height text	__label__nonDir
alias iso_c3	__label__nonDir
construct keyevent object	__label__nonDir
set designated parameter reader object	__label__nonDir
return array containing class object representing public class interface member class represented class object	__label__nonDir
constant f21 function key	__label__nonDir
column approximate average character width platform-dependent	__label__nonDir
get accessiblecontext associated jtogglebutton	__label__nonDir
org/omg/corba/octetseqholder.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00	__label__nonDir
construct query object constraint	__label__nonDir
description copied class number	__label__nonDir
writes data property metadata webrowset object given writer object xml format	__label__nonDir
provides class interface relating font	__label__nonDir
org/omg/corba/booleanseqhelper.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00 class definition ha modified conform following omg specification orb core defined corba formal/99-10-07 idl/java language mapping defined ptc/00-01-08	__label__nonDir
case bmp image writer select compression type support encoding given image without loss color resolution	__label__nonDir
extend class abstractownablesynchronizer simple class help record thread currently holding exclusive synchronization	__label__nonDir
provides class creating modifying image	__label__nonDir
panel simplest container class	__label__nonDir
computes hash code color	__label__nonDir
defines factory api enables application obtain parser produce dom object tree xml document	__label__nonDir
attribute key user-defined glyph display lieu font standard glyph character	__label__nonDir
visit executable element	__label__nonDir
return leading text	__label__nonDir
array wstrings	__label__nonDir
check field supported temporal object	__label__nonDir
scanning visitor program element default behavior appropriate release_8 source version	__label__nonDir
retrieves active filter filteredrowset object	__label__nonDir
class used prevent unauthorized access logging stream associated drivermanager may contain information table name column data	__label__nonDir
constant transport map symbol unicode character block	__label__nonDir
skeletal visitor program element default behavior appropriate release_6 source version	__label__nonDir
provides user interface object built according basic look feel	__label__nonDir
provides class performing arbitrary-precision integer arithmetic biginteger arbitrary-precision decimal arithmetic bigdecimal	__label__nonDir
holder	__label__nonDir
populates table system color	__label__nonDir
propagates row update insert delete change made cachedrowset object underlying data source	__label__nonDir
helper interface run nested event loop	__label__nonDir
return string describing keycode home f1	__label__nonDir
contains support representing type type multiple master font opentype font truetype font	__label__nonDir
add listener registered mbean	__label__nonDir
state change reported either object adapter adapter manager	__label__nonDir
information helper file see generated file helper file	__label__nonDir
indicates mouse button used getbutton	__label__nonDir
key indicating shape filled	__label__nonDir
initializes newly created sequenceinputstream remembering argument must enumeration produce object whose run-time type inputstream	__label__nonDir
description copied class componentui	__label__nonDir
information holder file see generated file holder file short used store inout parameter idl operation	__label__nonDir
creates new serializablepermission specified name	__label__nonDir
security reason often desirable use activeevent avoid calling untrusted code critical thread	__label__nonDir
subtracts object specified temporal object	__label__nonDir
sole constructor	__label__nonDir
inputstream provides reading mapped idl type stream	__label__nonDir
indicates mouse button used getbutton	__label__nonDir
kind notype void corresponds keyword void	__label__nonDir
standard system exception time-to-live qos applied invocation	__label__nonDir
org/omg/portableinterceptor/location_forward.java	__label__nonDir
class used request operation describe context need resolved sent invocation	__label__nonDir
constructor concrete subclass us null default value	__label__nonDir
org/omg/corba/wrongtransactionhelper.java generated idl-to-java compiler portable version corba.idl thursday august pm pdt	__label__nonDir
lowest justification priority	__label__nonDir
array string	__label__nonDir
org/omg/corba/shortseqhelper.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00 class definition ha modified conform following omg specification orb core defined corba formal/99-10-07 idl/java language mapping defined ptc/00-01-08	__label__nonDir
add path specified row current selection	__label__nonDir
provides class interface describe type javatm print service attribute collected attribute set	__label__nonDir
package implemented mime-based package processor enables interpretation creation optimized binary data within mime-based package format	__label__nonDir
process element calling e.accept p method may overridden subclass	__label__nonDir
multiplexing ui used combine slideruis	__label__nonDir
package contains messaging module specified omg corba messaging specification http cgi.omg.org/cgi-bin/doc formal/99-10-07	__label__nonDir
axis variation	__label__nonDir
method invocation return orb fill value corresponding value returned server	__label__nonDir
class implement notificationfilter interface attribute change notification	__label__nonDir
eventqueue platform-independent class queue event underlying peer class trusted application class	__label__nonDir
editing fail celleditor wo n't allow selected item	__label__nonDir
provides interface class i/o sequencing synthesis midi musical instrument digital interface data	__label__nonDir
get current value held field given object managed updater	__label__nonDir
return dialog bold	__label__nonDir
see also java.util.concurrent.locks java.util.concurrent.atomic package	__label__nonDir
return shape whose interior corresponds visual representation specified glyph within glyphvector	__label__nonDir
return supported cursor dimension closest desired size	__label__nonDir
multiplexing ui used combine desktopiconuis	__label__nonDir
return list item specified index	__label__nonDir
deprecated	__label__nonDir
return array containing constructor object reflecting public constructor class represented class object	__label__nonDir
holder valuebase	__label__nonDir
construct activationexception	__label__nonDir
notifies listener registered rowset object one row ha changed	__label__nonDir
return baseline	__label__nonDir
lifespanpolicy specifies lifespan object implemented created poa	__label__nonDir
creates new color brighter version color	__label__nonDir
implement characteriterator.last string	__label__nonDir
context property represent portion client application environment meant propagated made implicitly part server environment	__label__nonDir
paint vertical line	__label__nonDir
implementation may optionally support zip64 tm format extension defined pkware zip file format specification	__label__nonDir
object-oriented programming system language application october	__label__nonDir
following build panel consisting two label one column followed two textfields next column jcomponent panel grouplayout layout new grouplayout panel panel.setlayout layout turn automatically adding gap component layout.setautocreategaps true turn automatically creating gap component touch edge container container	__label__nonDir
retrieves index match column set rowset object method setmatchcolumn int columnidxes	__label__nonDir
package contains helper class including support bootstrapping sax-based application	__label__nonDir
preferredsize valid	__label__nonDir
report bound property change	__label__nonDir
visit type mirror passing type mirror accept method	__label__nonDir
creates toolkit implementation popupmenu using specified peer interface	__label__nonDir
description copied class abstractborder	__label__nonDir
immediately revers last update operation row ha modified	__label__nonDir
created stub satisfy interface	__label__nonDir
horizontal device metric	__label__nonDir
interface provides dispatching mechanism incoming call	__label__nonDir
adjusts specified temporal object	__label__nonDir
return right bottom side bearing glyph	__label__nonDir
return accelerator selected foreground color current theme	__label__nonDir
visit declared type	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
class describing stream encoded	__label__nonDir
object reference template	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
grouplayout layoutmanager hierarchically group component order position container	__label__nonDir
return preferred size textarea	__label__nonDir
interface implemented modelmbeaninfo every modelmbean	__label__nonDir
date time instance composed field conveniently made available apis	__label__nonDir
addcomponent label1 addcomponent label2 hgroup.addgroup layout.createparallelgroup	__label__nonDir
poa ha retain policy us servant manager servantactivators	__label__nonDir
set image displayed icon window	__label__nonDir
constant telugu unicode character block	__label__nonDir
contains three exception thrown orb machinery unmarshalling	__label__nonDir
variable nv represents newly-created nvlist object contains description argument method described given operationdef object	__label__nonDir
information helper file see generated file helper file	__label__nonDir
provides class interface javatm platform core logging facility	__label__nonDir
org/omg/corba/longseqholder.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00	__label__nonDir
followed filler glyph remaining character	__label__nonDir
get accessiblecontext associated window	__label__nonDir
constant key	__label__nonDir
exception thrown jmx implementation	__label__nonDir
creates new atomicinteger initial value	__label__nonDir
return image get pixel data specified url	__label__nonDir
package specification pkcs rsa encryption standard version november pkcs private-key information syntax standard version november federal information processing standard publication fips pub digital signature standard ds related documentation documentation includes information algorithm parameter key specification please see javatm cryptography architecture api specification reference implement provider javatm cryptography architecture	__label__nonDir
constant inscriptional parthian unicode character block	__label__nonDir
equivalent seconds.convert duration	__label__nonDir
cryptographic operation defined package include encryption key generation key agreement message authentication code mac generation	__label__nonDir
par text string produce date	__label__nonDir
alias iso_c8	__label__nonDir
see http www.saxproject.org information sax	__label__nonDir
value true considered false	__label__nonDir
class used reporting application level exception orb stub	__label__nonDir
class encapsulating single jpeg quantization table	__label__nonDir
constant runic unicode character block	__label__nonDir
holder serviceinformation	__label__nonDir
construct new empty textfield specified number column	__label__nonDir
creates new custom cursor object	__label__nonDir
update event type	__label__nonDir
return enum constant type specified name	__label__nonDir
constant non-numpad right arrow key	__label__nonDir
constant miscellaneous mathematical symbols-a unicode character block	__label__nonDir
information holder file see generated file holder file	__label__nonDir
return control text color current theme	__label__nonDir
ensures node specified row collapsed	__label__nonDir
package specification javatm cryptography architecture standard algorithm name documentation	__label__nonDir
class defines service provider interface spi policy class	__label__nonDir
return array awteventlisteners registered toolkit	__label__nonDir
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param signerCertPath is the TSA's certificate path. It must not be null	__label__NotNullDirective
 @param key the key to add, must not be null	__label__NotNullDirective
 @param actions Must be either null or the empty string.	__label__NotNullDirective
 Context must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @return The string representation; never null.	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param lock the lock object to use, must not be null	__label__NotNullDirective
 @param collection the collection to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if list is null	__label__NotNullDirective
 @throws IllegalArgumentException if map is null	__label__NotNullDirective
 @throws IllegalArgumentException if map is null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @throws NullPointerException if the entry is null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param list the list to iterate over, not null	__label__NotNullDirective
 @param predicates an array of predicates to check, may not be null	__label__NotNullDirective
 @param predicates an array of predicates to check, may not be null	__label__NotNullDirective
 @param list the list to predicate, must not be null	__label__NotNullDirective
 Attempting to add a null key or value to the map will raise a NullPointerException.	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param coll the BoundedCollection to decorate, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, not null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param coll the collection to decorate, must not be null	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param transformer the transformer to use as a factory to create entries, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param a the first collection, must not be null	__label__NotNullDirective
 @param map the map to transform, must not be null, typically empty	__label__NotNullDirective
 @throws NullPointerException if the key is null and null keys are invalid	__label__NotNullDirective
 @throws NullPointerException if the map is null	__label__NotNullDirective
 @throws IllegalArgumentException if the Bag is null	__label__NotNullDirective
 @throws IllegalArgumentException if the Buffer is null	__label__NotNullDirective
 @param buffer the buffer to synchronize, must not be null	__label__NotNullDirective
 @param set the sorted set to predicate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param set the set to make unmodifiable, must not be null	__label__NotNullDirective
 @param list the list to make lazy, must not be null	__label__NotNullDirective
 @param list the list whose size to fix, must not be null	__label__NotNullDirective
 @param keys the array of keys, not null	__label__NotNullDirective
 @param predicates array of predicates, cloned, no nulls	__label__NotNullDirective
 @throws NullPointerException if either node is null	__label__NotNullDirective
 @throws NullPointerException if array is null	__label__NotNullDirective
 @throws NullPointerException if array is null	__label__NotNullDirective
 @throws NullPointerException this map does not permit null keys or values, and the specified key or value is null.	__label__NotNullDirective
 @throws NullPointerException if name is null	__label__NotNullDirective
 @param identifier The identifier of the item from which the accelerator text should be obtained ; must not be null.	__label__NotNullDirective
 @param schemeListener the instance of ISchemeListener to register. Must not be null.	__label__NotNullDirective
 @param trigger The prefix to look for; must not be null.	__label__NotNullDirective
 null means that the catalog name should not be used to narrow the search	__label__NullSemanticsDirective
 the preference store, or null	__label__NullSemanticsDirective
 null means that the catalog name should not be used to narrow the search	__label__NullSemanticsDirective
 @param label The label to be used, may be null. If null, the label is not output.	__label__NullSemanticsDirective
 If the list is null, all available attribute information should be made accessible.	__label__NullSemanticsDirective
 @param envp array of strings, each element of which has environment variable settings in the format name=value, or null if the subprocess should inherit the environment of the current process.	__label__NullSemanticsDirective
 @param inputCollection the collection to get the input from, may be null	__label__NullSemanticsDirective
 @param transformer the transformer to use, may be null	__label__NullSemanticsDirective
 @param valueTransformer the transformer for the map values, null means no transformation	__label__NullSemanticsDirective
 @param keyTransformer the predicate to validate the keys, null means no transformation	__label__NullSemanticsDirective
 @param valueTransformer the predicate to validate to values, null means no transformation	__label__NullSemanticsDirective
 @param transformer the transformer to call, null means nop	__label__NullSemanticsDirective
 @param valueTransformer the transformer to use for value conversion, null means no conversion	__label__NullSemanticsDirective
 @param list2 the second list, may be null	__label__NullSemanticsDirective
 When called the first time, priorVariables should be null.	__label__NullSemanticsDirective
 @param q the queue with which the reference is to be registered, or null if registration is not required	__label__NullSemanticsDirective
 @param cause the underlying reason for this SQLException (which is saved for later retrieval by the getCause() method); may be null indicating the cause is non-existent or unknown	__label__NullSemanticsDirective
 Note that the empty string is not treated the same as null; it indicates an error state but with no message to display.	__label__NullSemanticsDirective
 @param toolBarManager the manager or null if toolbar is not desired	__label__NullSemanticsDirective
 @param initialCapacity the initial capacity, must be a power of two @param loadFactor the load factor, must be > 0.0f and generally < 1.0f	__label__NumberRangeDirective
 The timeout must be > 0.	__label__NumberRangeDirective
 @param size the size to which to set the receive buffer size. This value must be greater than 0.	__label__NumberRangeDirective
 @param year the year minus 1900; must be 0 to 8099.	__label__NumberRangeDirective
 The backlog argument must be a positive value greater than 0.	__label__NumberRangeDirective
 The mode argument must be either OPEN_READ or OPEN_READ | OPEN_DELETE.	__label__NumberRangeDirective
 @throws IndexOutOfBoundsException if the index is out of range (index < 0 || index > size()).	__label__NumberRangeDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__NumberRangeDirective
 @param valueType the type of reference to use for values; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param valueType the type of reference to use for values; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 The count must be at least 1.	__label__NumberRangeDirective
 @param autoGeneratedKeys one of the following constants: Statement.RETURN_GENERATED_KEYS or Statement.NO_GENERATED_KEYS	__label__NumberRangeDirective
 In general clients of logging should use one of the constant Level objects such as SEVERE or FINEST.	__label__NumberRangeDirective
 @param name Permission name. Must be either "monitor" or "control".	__label__StringFormatDirective
 The host is expressed as a DNS name, as a numerical IP address, or as "localhost" (for the local machine). The wildcard "*" may be included once in a DNS name host specification. If it is included, it must be in the leftmost position, as in "*.sun.com".	__label__StringFormatDirective
 The characters in the string must all be digits of the specified radix (as determined by whether {@link java.lang.Character#digit(char, int)} returns a nonnegative value), except that the first character may be an ASCII minus sign '-' ('\u002D') to indicate a negative value.	__label__StringFormatDirective
 The characters in the string must all be decimal digits, except that the first character may be an ASCII minus sign '-' ('\u002D') to indicate a negative value.	__label__StringFormatDirective
 If IPv6 literal address is used, it should be enclosed in square brackets ('[' and ']'), as specified by RFC 2732; However, the literal IPv6 address format defined in RFC 2373: IP Version 6 Addressing Architecture is also accepted.	__label__StringFormatDirective
 The byte format of the Unicode stream must be a Java UTF-8, as defined in the Java Virtual Machine Specification.	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 The specified provider must be registered in the provider list.	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 For a user-defined parameter, the fully-qualified SQL type name of the parameter should also be given, while a REF parameter requires that the fully-qualified type name of the referenced type be given.	__label__StringFormatDirective
 In the case of a certificate factory for X.509 certificates, the certificate provided in inStream must be DER-encoded and may be supplied in binary or printable (Base64) encoding. If the certificate is provided in Base64 encoding, it must be bounded at the beginning by -----BEGIN CERTIFICATE-----, and must be bounded at the end by -----END CERTIFICATE-----.	__label__StringFormatDirective
 The name is provided as a byte array. This byte array should contain the DER encoded name, as it would appear in the GeneralName structure defined in RFC 2459 and X.509.	__label__StringFormatDirective
 If authorityKeyID is not null, it should contain a single DER encoded value corresponding to the contents of the extension value (not including the object identifier, criticality setting, and encapsulating OCTET STRING) for an AuthorityKeyIdentifier extension.	__label__StringFormatDirective
 The name constraints are specified as a byte array. This byte array should contain the DER encoded form of the name constraints, as they would appear in the NameConstraints structure defined in RFC 2459 and X.509.	__label__StringFormatDirective
 If the system property java.util.jar.Pack200.Packer is defined, then the value is taken to be the fully-qualified name of a concrete implementation class, which must implement Packer.	__label__StringFormatDirective
 Whether aliases are case sensitive is implementation dependent. In order to avoid problems, it is recommended not to use aliases in a KeyStore that only differ in case.	__label__StringFormatDirective
 all such keys must be mutually comparable: k1.compareTo(k2) must not throw a ClassCastException for any keys k1 and k2 in the map.	__label__MethodParameterTypeDirective
 Compares this Timestamp object to the given Date, which must be a Timestamp object.	__label__MethodParameterTypeDirective
 @throws ClassCastException if the key or value is of an invalid type	__label__MethodParameterTypeDirective
 The parseObject method in the various Format classes requires a ParsePosition object as an argument.	__label__MethodParameterTypeDirective
 @throws ArrayStoreException if the runtime type of the specified array is not a supertype of the runtime type of every element in this queue	__label__MethodParameterTypeDirective
 @param size must be non-negative, and the sum position + size must be non-negative	__label__MethodParameterCorrelationDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__MethodParameterCorrelationDirective
 The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case false is placed in all elements of the copy whose index is greater than or equal to original.length - from.	__label__MethodParameterCorrelationDirective
 @param b The bytes that make up the class data. The bytes in positions off through off+len-1 should have the format of a valid class file as defined by the Java Virtual Machine Specification.	__label__MethodParameterCorrelationDirective
 @return the dialog, after being closed by the user, which the client can only call getReturnCode() or getToggleState()	__label__Post-CallDirective
 @return the dialog, after being closed by the user, which the client can only call getReturnCode() or getToggleState()	__label__Post-CallDirective
 If the method returns true, then the window can be shown without any special restrictions.	__label__Post-CallDirective
 Unlike the otherwise equivalent newScheduledThreadPool(1) the returned executor is guaranteed not to be reconfigurable to use additional threads.	__label__ReturnValueDirective
 The returned map will never contain null keys or values.	__label__ReturnValueDirective
 @return the ASN.1 DER encoded bytes (never null)	__label__ReturnValueDirective
 Returns an array of all locales for which the get*Instance methods of this class can return localized instances. It must contain at least a Locale instance equal to {@link java.util.Locale#US Locale.US}	__label__ReturnValueDirective
 Returns an array of all locales for which the get*Instance methods of this class can return localized instances. It must contain at least a Locale instance equal to {@link java.util.Locale#US Locale.US}	__label__ReturnValueDirective
 If the resource is to be cached, then put() must return a CacheRequest object which contains a WriteableByteChannel that the protocol handler will use to write the resource into the cache. If the resource is not to be cached, then put must return null.	__label__ReturnValueDirective
 An applet should override this method to return a String containing information about the author, version, and copyright of the applet.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.	__label__ReturnValueDirective
 @return a new transformed SortedBag	__label__ReturnValueDirective
 The computed result must be within 2.5 ulps of the exact result.	__label__ReturnValueDirective
 . All results returned by the {@link CertPathBuilder#build CertPathBuilder.build} method must implement this interface.	__label__ReturnValueDirective
 If a zone does not implement daylight saving time, the daylight saving time names should not be used.	__label__ReturnValueDirective
 The result should be a concise but informative representation that is easy for a person to read.	__label__ReturnValueDirective
 That is, for every nonnegative int index k,  ((BitSet)obj).get(k) == this.get(k)  must be true.	__label__ReturnValueDirective
 Reinitialize the logging properties and reread the logging configuration from the given stream, which should be in java.util.Properties format.	__label__ReturnValueDirective
 If this set makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.	__label__ReturnValueDirective
 The returned parameters may be the same that were used to initialize this signature engine, or may contain a combination of default and randomly generated parameter values used by the underlying signature implementation if this signature engine requires algorithm parameters but was not initialized with any.	__label__ReturnValueDirective
 This is not intended to be called outside of the workbench.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 Note: Using this method (as well as the Activatable constructors that both register and export an activatable remote object) is strongly discouraged because the actions of registering and exporting the remote object are not guaranteed to be atomic.	__label__MethodCallVisibilityDirective
 Constructor only used in deserialization, do not use otherwise.	__label__MethodCallVisibilityDirective
 Constructor only used in deserialization, do not use otherwise.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL TIME values do not have a month component.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL Date values do not have a time component.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL Date values do not have a time component.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 @deprecated this method should not be used.	__label__MethodCallVisibilityDirective
 @deprecated Initialization of this field is prone to deadlocks.	__label__MethodCallVisibilityDirective
 MapUtils should not normally be instantiated.	__label__MethodCallVisibilityDirective
 ListUtils should not normally be instantiated.	__label__MethodCallVisibilityDirective
 ComparatorUtils should not normally be instantiated.	__label__MethodCallVisibilityDirective
 Because Properties inherits from Hashtable, the put and putAll methods can be applied to a Properties object. Their use is strongly discouraged as they allow the caller to insert entries whose keys or values are not Strings. The setProperty method should be used instead.	__label__MethodCallVisibilityDirective
 Clients may neither instantiate this class nor extend.	__label__MethodCallVisibilityDirective
 This class is not intended to be called or extended by any external clients.	__label__MethodCallVisibilityDirective
 Granting AllPermission should be done with extreme care, as it implies all other permissions. Thus, it grants code the ability to run with security disabled. Extreme caution should be taken before granting such a permission to code. This permission should be used only during testing, or in extremely rare cases where an application or applet is completely trusted and adding the necessary permissions to the policy is prohibitively cumbersome.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 Clients can implement this interface and its extension interfaces, subclass {@link AbstractInformationControl}, or use the (text-based) default implementation {@link DefaultInformationControl}.	__label__MethodCallVisibilityDirective
 Constructor for use by subclasses.	__label__MethodCallVisibilityDirective
 This method is used by subclasses to explicitly close the popup based on additional logic.	__label__MethodCallVisibilityDirective
 @throws IOException if an I/O error occurs when waiting for a connection.	__label__ExceptionRaisingDirective
 @throws SocketException If an I/O error occurs.	__label__ExceptionRaisingDirective
 The returned Iterator is a "weakly consistent" iterator that will never throw {@link ConcurrentModificationException}, and guarantees to traverse elements as they existed upon construction of the iterator, and may (but is not guaranteed to) reflect any modifications subsequent to construction.	__label__ExceptionRaisingDirective
 The returned Iterator is a "weakly consistent" iterator that will never throw {@link ConcurrentModificationException}, and guarantees to traverse elements as they existed upon construction of the iterator, and may (but is not guaranteed to) reflect any modifications subsequent to construction.	__label__ExceptionRaisingDirective
 @throws java.lang.instrument.UnmodifiableClassException if a specified class cannot be modified ({@link #isModifiableClass} would return false) @throws java.lang.UnsupportedOperationException if the current configuration of the JVM does not allow redefinition ({@link #isRedefineClassesSupported} is false) or the redefinition attempted to make unsupported changes @throws java.lang.ClassFormatError if the data did not contain a valid class @throws java.lang.NoClassDefFoundError if the name in the class file is not equal to the name of the class @throws java.lang.UnsupportedClassVersionError if the class file version numbers are not supported @throws java.lang.ClassCircularityError if the new classes contain a circularity @throws java.lang.LinkageError if a linkage error occurs @throws java.lang.NullPointerException if the supplied definitions array or any of its components is null @throws java.lang.ClassNotFoundException Can never be thrown (present for compatibility reasons only)	__label__ExceptionRaisingDirective
 @exception IOException if an I/O error occurs.	__label__ExceptionRaisingDirective
 This exception must be thrown in a consistent fashion for synchronization to work correctly.	__label__ExceptionRaisingDirective
 This exception must be thrown in a consistent fashion for synchronization to work correctly.	__label__ExceptionRaisingDirective
 @throws org.eclipse.swt.SWTException in these cases:      * {@link org.eclipse.swt.SWT#ERROR_WIDGET_DISPOSED} - if the receiver has been disposed     * {@link org.eclipse.swt.SWT#ERROR_THREAD_INVALID_ACCESS} - if not called from the thread that created the receiver	__label__ExceptionRaisingDirective
 Any parse method that does not take a ParsePosition argument should throw ParseException when no text in the required format is at the beginning of the input text.	__label__ExceptionRaisingDirective
 If the input object is null, a PredicateException is thrown.	__label__ExceptionRaisingDirective
 @throws UnsupportedOperationException if the map is unmodifiable	__label__ExceptionRaisingDirective
 This iterator does not support modification of its backing array's size, and so will always throw an {@link UnsupportedOperationException} when this method is invoked.	__label__ExceptionRaisingDirective
 @exception SQLException if the columnLabel is not valid; if a database access error occurs; the result set concurrency is CONCUR_READ_ONLY or this method is called on a closed result set @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @throws IllegalArgumentException if this map itself has a restricted range, and { fromKey} lies outside the bounds of the range	__label__ExceptionRaisingDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 The given CompositeData must contain the following attributes:	__label__MiscellaneousMethodCallDirective
 The file must be encoded in UTF-8.	__label__MiscellaneousMethodCallDirective
 @param p is the packet to be sent. The packet should contain the destination multicast ip address and the data to be sent.	__label__MiscellaneousMethodCallDirective
 The name constraints are specified as a byte array. This byte array should contain the DER encoded form of the name constraints, as they would appear in the NameConstraints structure defined in RFC 2459 and X.509.	__label__MiscellaneousMethodCallDirective
 The array must be sorted into ascending order according to the {@linkplain Comparable natural ordering} of its elements (as by the {@link #sort(Object[])} method) prior to making this call.	__label__MiscellaneousMethodCallDirective
 The list must be sorted into ascending order according to the specified comparator (as by the {@link #sort(List, Comparator) sort(List, Comparator)} method), prior to making this call	__label__MiscellaneousMethodCallDirective
 @param schema a schema name; must match the schema name as it is stored in the database; "" retrieves those without a schema	__label__MiscellaneousMethodCallDirective
 @param tableNamePattern a table name pattern; must match the table name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 If the specified map is an EnumMap instance, this constructor behaves identically to {@link #EnumMap(EnumMap)}. Otherwise, the specified map must contain at least one mapping (in order to determine the new enum map's key type).	__label__MiscellaneousMethodCallDirective
 The array must be sorted (as by the {@link #sort(long[])} method) prior to making this call.	__label__MiscellaneousMethodCallDirective
 @param info a proposed list of tag/value pairs that will be sent on connect open @return an array of DriverPropertyInfo objects describing possible properties. This array may be an empty array if no properties are required.	__label__MiscellaneousMethodCallDirective
 @param schema a schema name; must match the schema name as it is stored in this database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param typeNamePattern a type name pattern; must match the type name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param schema a schema name; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param map the map to transform, must not be null, typically empty	__label__MiscellaneousMethodCallDirective
 Fixed-delay execution is appropriate for recurring activities that require "smoothness." In other words, it is appropriate for activities where it is more important to keep the frequency accurate in the short run than in the long run.	__label__MiscellaneousMethodCallDirective
 @param sortOrder new sort order. The comparator must be able to support being used in a background thread.	__label__MiscellaneousMethodCallDirective
 This implementation of IRunnableContext#run(boolean, boolean, IRunnableWithProgress) blocks until the runnable has been run, regardless of the value of fork. It is recommended that fork is set to true in most cases. If fork is set to false, the runnable will run in the UI thread and it is the runnable's responsibility to call Display.readAndDispatch() to ensure UI responsiveness.	__label__MiscellaneousMethodCallDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be extended by clients.	__label__ExtensibleClassIdentificationDirective
 Clients may subclass.	__label__ExtensibleClassIdentificationDirective
 if the programmer desires thread-local variables to have an initial value other than null, ThreadLocal must be subclassed, and this method overridden.	__label__ExtensibleClassIdentificationDirective
 An implementation of this interface should be serializable and should implement {@link Object#equals} to return true when passed an instance that represents the same (functionally equivalent) client socket factory, and false otherwise (and it should also implement {@link Object#hashCode} consistently with its Object.equals implementation).	__label__ExtensibleClassIdentificationDirective
 This class can be subclassed to configure how the coloring of the selected cell.	__label__ExtensibleClassIdentificationDirective
 This class is intended to be subclassed	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 This interface may be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 Clients can implement that interface and its extension interfaces.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 Label providers for table tree viewers must implement either the ITableLabelProvider or the ILabelProvider interface (see TableTreeViewer.setLabelProvider for more details).	__label__ExtensibleClassIdentificationDirective
 An abstract implementation of a linked list which provides numerous points for subclasses to override.  Overridable methods are provided to change the storage node and to change how nodes are added to and removed.	__label__ExtensibleClassIdentificationDirective
 Key-value entries are stored in instances of the LinkEntry class which can be overridden and replaced.	__label__ExtensibleClassIdentificationDirective
 Applications implement subclasses of ClassLoader in order to extend the manner in which the Java virtual machine dynamically loads classes.	__label__ExtensibleClassIdentificationDirective
 Subclasses may extend	__label__MethodOverridingDirective
 Subclasses may extend or reimplement.	__label__MethodOverridingDirective
 Subclasses may extend	__label__MethodOverridingDirective
 Subclasses may extend	__label__MethodOverridingDirective
 Subclasses may override this method	__label__MethodOverridingDirective
 All pages should override this method	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may replace or extend.	__label__MethodOverridingDirective
 close- extend to free other SWT resources	__label__MethodOverridingDirective
 Subclasses may override if they need to add other control hooks	__label__MethodOverridingDirective
 programmers should take note that any class that overrides the Object.equals method must also override the Object.hashCode method in order to satisfy the general contract for the Object.hashCodemethod	__label__MethodOverridingDirective
 Clients may reimplement this method to create a canvas with their desired style bits.	__label__MethodOverridingDirective
 Subclasses may implement the isSorterProperty method; they may reimplement the category method to provide categorization; and they may override the compare methods to provide a totally different way of sorting elements.	__label__MethodOverridingDirective
 Subclasses may reimplement.	__label__MethodOverridingDirective
 Subclasses may reimplement.	__label__MethodOverridingDirective
 setDescription - may be extended	__label__MethodOverridingDirective
 To implement a modifiable map, the programmer must additionally override this class's put method (which otherwise throws an UnsupportedOperationException)	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses wishing to perform validation should override both this method and refreshValidState.	__label__MethodOverridingDirective
 May be extended by subclasses.	__label__MethodOverridingDirective
 An implementation of this interface should be serializable and should implement {@link Object#equals} to return true when passed an instance that represents the same (functionally equivalent) client socket factory, and false otherwise (and it should also implement {@link Object#hashCode} consistently with its Object.equals implementation).	__label__MethodOverridingDirective
 Subclasses may override this method to provide an alternative implementation for the cool bar manager.	__label__MethodOverridingDirective
 Subclasses may override this method to customize the status line manager.	__label__MethodOverridingDirective
 Subclasses should override configureShell if the shell needs to be customized.	__label__MethodOverridingDirective
 Implementators of {@link ColumnViewer} should overwrite this method if their widget supports reordered columns	__label__MethodOverridingDirective
 Subclasses may overwrite to implement their custom logic to edit the next cell	__label__MethodOverridingDirective
 This must be implemented by subclasses of Permission, as they are the only ones that can impose semantics on a Permission object.	__label__MethodOverridingDirective
 Subclasses which handle different rounding modes should override this method.	__label__MethodOverridingDirective
 Subclasses should overwrite the default implementation	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Overriding this method is generally not required; however, if overriding in a subclass, super.setLabelProvider must be invoked.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 An enum type should override this method when a more "programmer-friendly" string form exists.	__label__MethodOverridingDirective
 This method should be overridden by class loader implementations that follow the delegation model for loading classes, and will be invoked by the {@link #loadClass loadClass} method after checking the parent class loader for the requested class.	__label__MethodOverridingDirective
 Clients should override to introduce specific tab ordering.	__label__MethodOverridingDirective
 Subclasses may want to override this behavior to remain consistent with the {@link Comparator#equals(Object)} contract.	__label__MethodOverridingDirective
 Override to validate the objects being added to ensure they match the predicate.	__label__MethodOverridingDirective
 Subclasses can override this to record the change.	__label__MethodOverridingDirective
 Override to transform the value when using setValue.	__label__MethodOverridingDirective
 Subclasses can override this to perform alternate key conversions.	__label__MethodOverridingDirective
 Subclasses could override to handle changes to the map.	__label__MethodOverridingDirective
 Subclasses can override this to return iterators with different properties.	__label__MethodOverridingDirective
 This method must be overridden if a subclass must be setup before put() is used.	__label__MethodOverridingDirective
 A Queue implementation that extends this class must minimally define a method {@link Queue#offer} which does not permit insertion of null elements, along with methods {@link Queue#peek}, {@link Queue#poll}, {@link Collection#size}, and a {@link Collection#iterator} supporting {@link Iterator#remove}.	__label__MethodOverridingDirective
 Many implementations will override this method for efficiency.	__label__MethodOverridingDirective
 This method is not intended to be overridden by subclasses.	__label__MethodOverridingDirective
 Subclasses are not expected to override this method.	__label__MethodOverridingDirective
 Standard customers should not overwrite this method but {@link #getValue(Object)}	__label__MethodOverridingDirective
 This method is not intended to be overridden by subclasses.	__label__MethodOverridingDirective
 Subclasses should call the super implementation	__label__MethodExtensionDirective
 Subclasses should either call the super implementation or, alternatively, {@link #initialize(ColumnViewer, ViewerColumn, boolean)}	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkPropertiesAccess at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 This framework method may be extended (super.close must be called).	__label__MethodExtensionDirective
 By convention, the returned object should be obtained by calling super.clone. If a class and all of its superclasses (except Object) obey this convention, it will be the case that x.clone().getClass() == x.getClass().	__label__MethodExtensionDirective
 Subclasses should call getFieldEditorParent to obtain the parent control for each field editor.	__label__CallContractSubclassingDirective
 If you override this method, then you should make a call to super.checkExec at the point the overridden method would normally throw an exception.	__label__CallContractSubclassingDirective
 This method should normally be invoked within an {@link AccessController#doPrivileged} action to create callables that will, if possible, execute under the selected permission settings holding within that action; or if not possible, throw an associated {@link AccessControlException}.	__label__CallContractSubclassingDirective
 A newly-loaded driver class should call the method registerDriver to make itself known to the DriverManager.	__label__CallContractSubclassingDirective
 Note: As of 3.4, you should only call this method if you want to override the {@link JFacePreferences#CONTENT_ASSIST_FOREGROUND_COLOR}.	__label__CallContractSubclassingDirective
 In other words, this method must allocate a new array	__label__MethodImplementationDirective
 A valid reduction polynomial is either a trinomial (X^m + X^k + 1 with m > k >= 1) or a pentanomial (X^m + X^k3 + X^k2 + X^k1 + 1 with m > k3 > k2 > k1 >= 1), so ks should have length 1 or 3.	__label__MethodImplementationDirective
 If markpos is not -1, then all bytes from positions buf[markpos] through buf[pos-1] must remain in the buffer array	__label__MethodImplementationDirective
 @param classfileBuffer the input byte buffer in class file format - must not be modified	__label__MethodImplementationDirective
 For example, either the positive and negative prefixes or the suffixes must be distinct for DecimalFormat.parse() to be able to distinguish positive from negative values. (If they are identical, then DecimalFormat will behave as if no negative subpattern was specified.) Another example is that the decimal separator and thousands separator should be distinct characters, or parsing will be impossible.	__label__MethodImplementationDirective
 Regardless of whether these additional PKIXCertPathCheckers are set, a PKIX CertPathValidator or CertPathBuilder must perform all of the required PKIX checks on each certificate	__label__MethodImplementationDirective
 According to the {@link Collection#remove(Object)} method, this method should only remove the first occurrence of the given object, not all occurrences.	__label__MethodImplementationDirective
 Two CodeSource objects are considered equal if their locations are of identical value and if their signer certificate chains are of identical value. It is not required that the certificate chains be in the same order.	__label__MethodImplementationDirective
 The hash code of a list is defined to be the result of the following calculation:    int hashCode = 1;   Iterator<E> i = list.iterator();   while (i.hasNext()) {       E obj = i.next();       hashCode = 31*hashCode + (obj==null ? 0 : obj.hashCode());   }    This ensures that list1.equals(list2) implies that list1.hashCode()==list2.hashCode() for any two lists, list1 and list2, as required by the general contract of {@link Object#hashCode}.	__label__MethodImplementationDirective
 Subclasses of this class are encouraged, but not required, to attempt to read as many bytes as possible in the same fashion.	__label__MethodImplementationDirective
 Tray implementions must not set a layout on the parent composite, or assume a particular layout on the parent.	__label__MethodImplementationDirective
 Implementations should use the font of the given drawable to calculate the size of the text to be presented.	__label__MethodImplementationDirective
 Each class name must be for a Handler class which has a default constructor.	__label__MethodImplementationDirective
 If no such object exists, the map should be "wrapped" using the {@link Collections#synchronizedMap Collections.synchronizedMap} method.	__label__MethodImplementationDirective
 The view's { iterator} is a "weakly consistent" iterator that will never throw {@link ConcurrentModificationException}, and guarantees to traverse elements as they existed upon construction of the iterator, and may (but is not guaranteed to) reflect any modifications subsequent to construction.	__label__MethodImplementationDirective
 After this method has been finished, the reconciler is operational. I.e., it works without requesting further client actions until uninstall is called.	__label__MethodImplementationDirective
 This method must be symmetric with a call to {@link #save(IPreferenceStore, String)}.	__label__Non-localConsistencySubclassingDirective
 This method must be symmetric with a call to {@link #load(IPreferenceStore, String)}.	__label__Non-localConsistencySubclassingDirective
 Multiple objects or primitives can be written to the stream. The objects must be read back from the corresponding ObjectInputstream with the same types and in the same order as they were written.	__label__Non-localConsistencySubclassingDirective
 Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.	__label__Non-localConsistencySubclassingDirective
 If two Permission objects are equal according to the equals method, then calling the hashCode method on each of the two Permission objects must produce the same integer result.	__label__Non-localConsistencySubclassingDirective
 This interface is not intended to be implemented by clients other than {@link org.eclipse.jface.text.ITextViewer} implementers.	__label__Non-localConsistencySubclassingDirective
 programmers should take note that any class that overrides the Object.equals method must also override the Object.hashCode method in order to satisfy the general contract for the Object.hashCodemethod	__label__Non-localConsistencySubclassingDirective
 If a reconcile strategy consists of several steps between which model transformation is desired the each step should implement {@link org.eclipse.jface.text.reconciler.IReconcileStep}.	__label__Non-localConsistencySubclassingDirective
 For a given subclass of ObjectOutputStream that overrides this method, the resolveProxyClass method in the corresponding subclass of ObjectInputStream must read any data or objects written by annotateProxyClass	__label__MiscellaneousSubclassingDirective
 The stub class must extend {@link RemoteStub} and must have a public constructor that has one parameter, of type {@link RemoteRef}.	__label__MiscellaneousSubclassingDirective
 Implementations are encouraged to make regular use of Assert.isNotNull to ensure that null parameters are detected as early as possible.	__label__MiscellaneousSubclassingDirective
 A subclass overrides the log method and scans each incoming LogRecord and calls push if a record matches some desired criteria.	__label__MiscellaneousSubclassingDirective
 The group must inform its ActivationMonitor that the object is active (via the monitor's activeObject method) if the group hasn't already done so.	__label__MethodCallSequenceDirective
 This should be called whenever needsInput() returns true indicating that more input data is required	__label__MethodCallSequenceDirective
 The option must be enabled prior to entering the blocking operation to have effect.	__label__MethodCallSequenceDirective
 The caller must validate the character value using {@link #isValidCodePoint(int) isValidCodePoint} if necessary.	__label__MethodCallSequenceDirective
 It must be connected to a piped input stream, either by the receiver or the sender, before being used.	__label__MethodCallSequenceDirective
 All OUT parameters must be registered before a stored procedure is executed.	__label__MethodCallSequenceDirective
 All the data in the returned stream must be read prior to getting the value of any other column.	__label__MethodCallSequenceDirective
 All the data in the returned stream must be read prior to getting the value of any other column.	__label__MethodCallSequenceDirective
 Once engineDigest has been called, the engine should be reset (see {@link #engineReset() engineReset}).	__label__MethodCallSequenceDirective
 A MessageDigest object starts out initialized. The data is processed through it using the {@link #update(byte) update} methods. At any point {@link #reset() reset} can be called to reset the digest. Once all the data to be updated has been updated, one of the {@link #digest() digest} methods should be called to complete the hash computation.	__label__MethodCallSequenceDirective
 Applications that need to process policy qualifiers should explicitly set the policyQualifiersRejected flag to false (by calling the {@link PKIXParameters#setPolicyQualifiersRejected PKIXParameters.setPolicyQualifiersRejected} method) before validating a certification path.	__label__MethodCallSequenceDirective
 @throws IllegalStateException if next() has not yet been called.	__label__MethodCallSequenceDirective
 Once it has downloaded the bytes that make up the class, it should use the method {@link #defineClass defineClass} to create a class instance.	__label__MethodCallSequenceDirective
 This is the name for the ResourceBundle that should be used to localize the message string before formatting it.	__label__MethodCallSequenceDirective
 This method can be called once per call to next().	__label__MethodCallSequenceDirective
 @throws IllegalStateException if next() has not yet been called	__label__MethodCallSequenceDirective
 Constructs a new FilterListIterator that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked.	__label__MethodCallSequenceDirective
 Constructs a new FilterListIterator that will not function until {@link #setListIterator(ListIterator) setListIterator} is invoked.	__label__MethodCallSequenceDirective
 Constructs a new IteratorEnumeration that will not function until {@link #setIterator(Iterator) setIterator} is invoked.	__label__MethodCallSequenceDirective
 Since the time when GC would invoke this method is undetermined, it is strongly recommended that applications invoke the close method as soon they have finished accessing this ZipFile.	__label__MethodCallSequenceDirective
 Note that the dialog will have no visual representation (no widgets) until it is told to open.	__label__MethodCallSequenceDirective
 The output stream can be used again, reusing the already allocated buffer space.	__label__MethodCallSequenceDirective
 Note that depending on the values the human has supplied so far, additional values may become necessary, so it may be necessary to iterate though several calls to the getPropertyInfo method.	__label__MethodCallSequenceDirective
 Once this method returns successfully, it is safe to assume that all changes made in the subtree rooted at this node prior to the method invocation have become permanent.	__label__MethodCallSequenceDirective
 Usually, clients instantiate this class and configure it before using it. The configuration must be consistent: This means the used {@link org.eclipse.jface.text.IInformationControlCreator} must create an information control expecting information in the same format the configured {@link org.eclipse.jface.text.information.IInformationProvider}s use to encode the information they provide.	__label__MethodCallSequenceDirective
 Unlike {@link ISourceViewer#configure(SourceViewerConfiguration)} this method can be called more than once without interleaving calls to {@link ISourceViewer#configure(SourceViewerConfiguration)}.	__label__MethodCallSequenceDirective
 Closing a ByteArrayInputStream has no effect. The methods in this class can be called after the stream has been closed without generating an IOException.	__label__MethodCallSequenceDirective
 Invoking this method after this socket has been bound will have no effect.	__label__MethodCallSequenceDirective
 Invoking this method will result in the creation of the returned node and its ancestors if they do not already exist. If the returned node did not exist prior to this call, this node and any ancestors that were created by this call are not guaranteed to become permanent until the flush method is called on the returned node (or one of its ancestors or descendants).	__label__MethodCallSequenceDirective
 The current thread must own this object's monitor.	__label__NonCall-basedStateDirective
 @return the dialog, after being closed by the user, which the client can only call getReturnCode() or getToggleState()	__label__NonCall-basedStateDirective
 This method should only be called by a thread that is the owner of this object's monitor.	__label__NonCall-basedStateDirective
 Take care when using this list with null values, as null is the value added when growing the list.	__label__NonCall-basedStateDirective
 the composited map does not not permit null keys (optional).	__label__NonCall-basedStateDirective
 @throws ArithmeticException if the specified scaling operation would require rounding.	__label__NonCall-basedStateDirective
 Set the style ranges to be applied on the text label at the column index Note: Requires {@link StyledCellLabelProvider} with owner draw enabled.	__label__NonCall-basedStateDirective
 NOTE: Do not reuse StatusLineLayoutData objects. Every control in the status line must have a unique StatusLineLayoutData instance or null.	__label__NonCall-basedStateDirective
 However, the bulk Collection operations addAll, containsAll, retainAll and removeAll are not necessarily performed atomically unless specified otherwise in an implementation. So it is possible, for example, for addAll(c) to fail (throwing an exception) after adding only some of the elements in c.	__label__NonCall-basedStateDirective
 Resets the stream to the most recent mark, or to the beginning of the string if it has never been marked.	__label__NonCall-basedStateDirective
 Update(SIZE) should be called to adjust the widget.	__label__AlternativeDirective
 Clients should subclass the abstract base class Action to define concrete actions rather than implementing IAction from scratch.	__label__AlternativeDirective
 Instead, an application should register an activation descriptor and export a remote object separately, so that exceptions can be handled properly.	__label__AlternativeDirective
 A subclass should therefore use the object in this field rather than this or a synchronized method.	__label__AlternativeDirective
 Use of this method is discouraged; use {@link java.util.TimeZone#getDisplayName() TimeZone.getDisplayName()} instead	__label__AlternativeDirective
 Denigrated, replaced by {@linkplain #getSubjectX500Principal()}. This method returns the subject as an implementation specific Principal object, which should not be relied upon by portable code.	__label__AlternativeDirective
 Denigrated, replaced by {@linkplain #getIssuerX500Principal()}. This method returns the issuer as an implementation specific Principal object, which should not be relied upon by portable code.	__label__AlternativeDirective
 This constant remains only for compatibility reasons. Developers should use the constant sqlStateSQL instead.	__label__AlternativeDirective
 Not all databases allow for a non-typed Null to be sent to the backend. For maximum portability, the setNull or the setObject(int parameterIndex, Object x, int sqlType) method should be used instead of setObject(int parameterIndex, Object x).	__label__AlternativeDirective
 If a new Short instance is not required, this method should generally be used in preference to the constructor {@link #Short(short)}, as this method is likely to yield significantly better space and time performance by caching frequently requested values.	__label__AlternativeDirective
 If a new Double instance is not required, this method should generally be used in preference to the constructor {@link #Double(double)}, as this method is likely to yield significantly better space and time performance by caching frequently requested values.	__label__AlternativeDirective
 Subclasses should override this method rather than {@link #focusCellChanged(ViewerCell)}	__label__AlternativeDirective
 . The StringBuilder class should generally be used in preference to this one, as it supports all of the same operations but it is faster, as it performs no synchronization.	__label__AlternativeDirective
 The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 Note that FixedSizeSortedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedSortedMap}.	__label__AlternativeDirective
 Note that LinkedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 Note that TransformedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 ArrayList is a good general purpose list implementation. It is faster than TreeList for most operations except inserting and removing in the middle of the list. ArrayList also uses less memory as TreeList uses one object per entry.	__label__AlternativeDirective
 WARNING: This method is binary incompatible with Commons Collections 2.1 and 2.1.1. Use EmptyIterator.INSTANCE for compatability with Commons Collections 2.1.1.	__label__AlternativeDirective
 If you subclass AbstractHashedMap but not HashEntry then you will not be able to access the protected fields. The entryXxx() methods on AbstractHashedMap exist to provide the necessary access.	__label__AlternativeDirective
 The following extension interfaces exist:      {@link org.eclipse.jface.text.source.IVerticalRulerExtension} since version 2.0 introducing setters for font and mouse button activity location.	__label__AlternativeDirective
 The following extension interfaces exist:      {@link org.eclipse.jface.text.IWidgetTokenKeeperExtension} since version 3.0 introducing priorities when requesting a widget token and thus replacing the non-prioritized scheme. It also allows a client to force a widget token keeper to accept focus.	__label__AlternativeDirective
 Instances of StringBuilder are not safe for use by multiple threads. If such synchronization is required then it is recommended that {@link java.lang.StringBuffer} be used.	__label__AlternativeDirective
 If these requirements cannot be met, consider instead subclassing {@link AbstractCollection}.	__label__AlternativeDirective
 In case the client does not explicitly initialize the AlgorithmParameterGenerator (via a call to an engineInit method), each provider must supply (and document) a default initialization.	__label__AlternativeDirective
 In case the client does not explicitly initialize the AlgorithmParameterGenerator (via a call to an init method), each provider must supply (and document) a default initialization.	__label__AlternativeDirective
 Add and remove operations require the use of a pluggable strategy. If no strategy is provided then add and remove are unsupported.	__label__AlternativeDirective
 The required FontMetrics parameter may be created in the following way: GC gc = new GC(control); gc.setFont(control.getFont()); fontMetrics = gc.getFontMetrics(); gc.dispose();	__label__AlternativeDirective
 @deprecated This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.	__label__AlternativeDirective
 Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.	__label__AlternativeDirective
 Clients are encouraged to use the value returned from this method instead of constructing a new instance to reduce allocation and garbage collection overhead when multiple BooleanComparators may be used in the same virtual machine.	__label__AlternativeDirective
 May fail spuriously and does not provide ordering guarantees, so is only rarely an appropriate alternative to { compareAndSet}.	__label__AlternativeDirective
 For comparing Strings exactly once, the compare method provides the best performance. When sorting a list of Strings however, it is generally necessary to compare each String multiple times. In this case, CollationKeys provide better performance.	__label__AlternativeDirective
 It should be set once either in the constructor or using this method.	__label__AlternativeDirective
 For these reasons, environment variables are more likely to have unintended side effects. It is best to use system properties where possible.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of updateNCharacterStream which takes a length parameter.	__label__AlternativeDirective
 Since 3.3, an alternative API is available, see {@link ViewerColumn#setEditingSupport(EditingSupport)} for a more flexible way of editing values in a column viewer.	__label__AlternativeDirective
 When using a capacity-restricted deque, it is generally preferable to use {@link #offerFirst(Object) offerFirst}.	__label__AlternativeDirective
 Note that if both the integer quotient and remainder are needed, this method is faster than using the { divideToIntegralValue} and { remainder} methods separately because the division need only be carried out once.	__label__AlternativeDirective
 Note that this implementation is not synchronized.	__label__SynchronizationDirective
 The cursor enables iteration and list changes to occur in any order without invalidating the iterator (from one thread).	__label__SynchronizationDirective
 Methods are synchronized, then forwarded to the decorated bag. Iterators must be separately synchronized around the loop.	__label__SynchronizationDirective
 You must manually synchronize on the returned buffer's iterator to avoid non-deterministic behavior:   List list = ListUtils.synchronizedList(myList);  synchronized (list) {      Iterator i = list.iterator();      while (i.hasNext()) {          process (i.next());      }  }	__label__SynchronizationDirective
 DEADLOCK WARNING: Calling this method may call undoableEditHappened in all listeners. It is unwise to call this method from one of its listeners.	__label__SynchronizationDirective
 Note that this class is not synchronized. If multiple threads access a ProcessBuilder instance concurrently, and at least one of the threads modifies one of the attributes structurally, it must be synchronized externally.	__label__SynchronizationDirective
 All PolicyNode objects must be immutable and thread-safe.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this interface are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking.	__label__SynchronizationDirective
 Unless otherwise documented by a specific provider, threads that need to access a single CertPathBuilder instance concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating a different CertPathBuilder instance need not synchronize.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 Note that FixedSizeMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 Note that FixedSizeSortedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 Note that MultiKeyMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. This class may throw exceptions when accessed by concurrent threads without synchronization.	__label__SynchronizationDirective
 A multi-threaded application should either allocate multiple unpacker engines, or else serialize use of one engine with a lock.	__label__SynchronizationDirective
 All PolicyQualifierInfo objects must be immutable and thread-safe.	__label__SynchronizationDirective
 Implementations of these methods must be internally thread-safe, and should in general be short and not block.	__label__SynchronizationDirective
 It is recommended that to avoid confusion you never use { Condition} instances in this way, except perhaps within their own implementation.	__label__SynchronizationDirective
 To be portable, however, applications should always provide these values for user-named and REF parameters.	__label__MiscellaneousDirective
 Compiler vendors should document the warning names they support in conjunction with this annotation type.	__label__MiscellaneousDirective
 If a new Boolean instance is not required, this method should generally be used in preference to the constructor {@link #Boolean(boolean)}, as this method is likely to yield significantly better space and time performance.	__label__MiscellaneousDirective
 While this will rarely occur in practice, applications must guard against it by testing for the condition that should have caused the thread to be awakened, and continuing to wait if the condition is not satisfied. In other words, waits should always occur in loops, like this one:       synchronized (obj) {          while (<condition does not hold>)              obj.wait(timeout);          ... // Perform action appropriate to condition      }	__label__MiscellaneousDirective
 This map is designed for performance and can outstrip HashMap. It also has good garbage collection characteristics.      * Optimised for operation at size 3 or less.     * Still works well once size 3 exceeded.     * Gets at size 3 or less are about 0-10% faster than HashMap,     * Puts at size 3 or less are over 4 times faster than HashMap.     * Performance 5% slower than HashMap once size 3 exceeded once.	__label__MiscellaneousDirective
 In general SEVERE messages should describe events that are of considerable importance and which will prevent normal program execution. They should be reasonably intelligible to end users and to system administrators.	__label__MiscellaneousDirective
 Callers should re-check the conditions which caused the thread to park in the first place	__label__MiscellaneousDirective
 Generally speaking, any comparator that violates this condition should clearly indicate this fact.	__label__MiscellaneousDirective
 So the INFO level should only be used for reasonably significant messages that will make sense to end users and system admins.	__label__MiscellaneousDirective
 If a method is annotated with this annotation type but does not override a superclass method, compilers are required to generate an error message.	__label__MiscellaneousDirective
 A method is not required to declare in its throws clause any subclasses of RuntimeException that might be thrown during the execution of the method but not caught.	__label__MiscellaneousDirective
 Beware that, unlike in most collections, this method is NOT a constant-time operation. Because of the asynchronous nature of these maps, determining the current number of elements requires traversing them all to count them.	__label__MiscellaneousDirective
 Note: This method requires a full internal traversal of the hash table, and so is much slower than method containsKey.	__label__MiscellaneousDirective
 This operation will probably require time linear in the map size for most implementations of the Map interface.	__label__MiscellaneousDirective
 It is strongly recommended that a cancel option be provided, so that the user has the option of making the decision at a later point in time.	__label__MiscellaneousDirective
 Implementation note: Java platform implementers are encouraged to document their implementation's behavior with respect to the stackSize parameter.	__label__MiscellaneousDirective
constant variation selector supplement unicode character block	__label__nonDir
using method populate efficient using version execute method take parameter doe open new connection re-execute cachedrowset object command	__label__nonDir
return immutabledescriptor whose content union given descriptor	__label__nonDir
constant yi syllable unicode character block	__label__nonDir
constant japanese-hiragana function key	__label__nonDir
object used dii dsi describe argument return value	__label__nonDir
helper identifier	__label__nonDir
contains user apis rmi-iiop	__label__nonDir
enumeration parameter mode parameter	__label__nonDir
class represents heterogeneous collection permission	__label__nonDir
cast class object represent subclass class represented specified class object	__label__nonDir
return ubounding box drop line	__label__nonDir
update canvas	__label__nonDir
menu object pull-down menu component deployed menu bar	__label__nonDir
contains minor code give detailed information caused exception completion status	__label__nonDir
specifies content uri watch change	__label__nonDir
contains portability apis rmi-iiop	__label__nonDir
cause cachedrowset implementation fetch previous page-size row populate rowset	__label__nonDir
annotatedtype represents potentially annotated use type program currently running vm	__label__nonDir
framework also provides service provider interface spi structured access diagnostics diagnosticlistener well file abstraction overriding file access javafilemanager javafileobject	__label__nonDir
default srgb space	__label__nonDir
visit program element passing element accept method passing null additional parameter	__label__nonDir
class capable formatting date number message parsing searching sorting string iterating character word sentence line break	__label__nonDir
visit long primitive type calling defaultaction	__label__nonDir
proxy provides static method creating dynamic proxy class instance also superclass dynamic proxy class created method	__label__nonDir
digital signature	__label__nonDir
mixin interface element ha type parameter	__label__nonDir
see awtevent description awt event model	__label__nonDir
see section minor code meaning see minor code exception	__label__nonDir
font descriptor	__label__nonDir
since modal dialog application call show method display dialog block rest application user ha chosen file	__label__nonDir
org/omg/portableinterceptor/iorinterceptor_3_0holder.java	__label__nonDir
contains activity service related exception thrown orb machinery unmarshalling	__label__nonDir
set designated parameter given double java programming language	__label__nonDir
management interface runtime system java virtual machine	__label__nonDir
example context jar http www.foo.com/bar/jar.jar spec baz/entry.txt url jar http www.foo.com/bar/jar.jar baz/entry.txt context jar http www.foo.com/bar/jar.jar baz spec entry.txt url jar http www.foo.com/bar/jar.jar baz/entry.txt context jar http www.foo.com/bar/jar.jar baz spec entry.txt url jar http www.foo.com/bar/jar.jar entry.txt	__label__nonDir
allows mbean perform operation need registered mbean server	__label__nonDir
add vetoablechangelistener listener list	__label__nonDir
provides support rmi object activation	__label__nonDir
default srgb space	__label__nonDir
return new rowset object backed data cachedrowset object	__label__nonDir
shape interface provides definition object represent form geometric shape	__label__nonDir
return size pixel space tray icon occupies system tray	__label__nonDir
nesting kind type element	__label__nonDir
return array containing element collection runtime type returned array specified array	__label__nonDir
overridden increase invalid area	__label__nonDir
helper valuemember	__label__nonDir
return jtree specified treenode root display root node	__label__nonDir
key specification transparent representation key material constitutes key	__label__nonDir
class serf parameter block instrumentation.redefineclasses method	__label__nonDir
constant kanbun unicode character block	__label__nonDir
visit parameter variable element calling defaultaction	__label__nonDir
provides interface class i/o sequencing synthesis midi musical instrument digital interface data	__label__nonDir
set new cursor window cursor use	__label__nonDir
return group activation system	__label__nonDir
executor interface	__label__nonDir
visit package pseudo-type calling defaultaction	__label__nonDir
set designated parameter given java boolean value	__label__nonDir
package specification jaxb specification related documentation overview tutorial example guide tool documentation please see jaxb website	__label__nonDir
update expandedstate	__label__nonDir
visit unknown kind element	__label__nonDir
object containing information necessary invoking method	__label__nonDir
int member make possible use switch statement	__label__nonDir
helper fieldname	__label__nonDir
multiplexing ui used combine listuis	__label__nonDir
possible vaues param_in represents parameter	__label__nonDir
move cursor relative amount forward backward current position	__label__nonDir
policy specifies whether created poa retains active servant active object map	__label__nonDir
return field object reflects specified declared field class interface represented class object	__label__nonDir
constant identifying grouping separator field	__label__nonDir
construct statementevent specified pooledconnection preparedstatement	__label__nonDir
key indicating shape stroked wide stroke	__label__nonDir
attribute key used provide font use render text	__label__nonDir
double pixel solid low underline	__label__nonDir
portableserver current interface derived corba current provides method implementation access identity object method wa invoked	__label__nonDir
class interface package superseded class java.security package	__label__nonDir
creates new strategy multi-buffering component required buffer capability	__label__nonDir
poa ha retain policy us servant manager servantactivators	__label__nonDir
following hint supported angled line drawn connecting child parent	__label__nonDir
atomically add given value current value field given object managed updater	__label__nonDir
get current value held field given object managed updater	__label__nonDir
algorithm parameter specification transparent representation set parameter used algorithm	__label__nonDir
please refer omg specification detail	__label__nonDir
describes management interface exposed mbean set attribute operation available management operation	__label__nonDir
messaged tree renderer ha changed	__label__nonDir
return new temporal object based specified one value field changed	__label__nonDir
add specified mouse listener receive mouse event component	__label__nonDir
add listener treeexpansion event	__label__nonDir
default value returned defaultaction return value unless method overridden	__label__nonDir
creates peer component container	__label__nonDir
constant numeric keypad arrow key	__label__nonDir
return steel	__label__nonDir
information holder file see generated file holder file	__label__nonDir
visit array value annotation	__label__nonDir
useful client utility class	__label__nonDir
duration represents directed distance two point time-line	__label__nonDir
constant identifying fraction field	__label__nonDir
construct new canvas given graphicsconfiguration object	__label__nonDir
typically contains class detail message cause	__label__nonDir
construct activationexception specified detail message cause	__label__nonDir
provides class interface deal editable noneditable text component	__label__nonDir
framework permit much greater flexibility use lock condition expense awkward syntax	__label__nonDir
utility assist processing program element type	__label__nonDir
org/omg/portableinterceptor/user_exception.java	__label__nonDir
set designated parameter given clob object java programming language	__label__nonDir
tablestringconverter used convert object model string	__label__nonDir
signal error occurred attempting connect socket remote address port	__label__nonDir
passed orbinitializer allowing register interceptor perform duty orb initializing	__label__nonDir
see rmisocketfactory information	__label__nonDir
helper definitionkind	__label__nonDir
contains minor code give detailed information caused exception completion status	__label__nonDir
construct mouseevent object specified source component type modifier coordinate click count popuptrigger flag	__label__nonDir
helper completionstatus	__label__nonDir
return command name action event fired button	__label__nonDir
provides class interface general printing api	__label__nonDir
applet small program intended run rather embedded inside another application	__label__nonDir
minimal extension layoutmanager intended tool provider wish creation constraint-based layout	__label__nonDir
return map backing view	__label__nonDir
facilitates interceptor registration orb initialization	__label__nonDir
org/omg/corba/octetseqhelper.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00 class definition ha modified conform following omg specification orb core defined corba formal/99-10-07 idl/java language mapping defined ptc/00-01-08	__label__nonDir
return instance jtooltip used display tooltip	__label__nonDir
lifespanpolicyvalue following value	__label__nonDir
set action actionevent source	__label__nonDir
represents package program element	__label__nonDir
color white	__label__nonDir
mixin interface element ha qualified name	__label__nonDir
class used create multiple-exclusion scope set button	__label__nonDir
return height framing rectangle double precision	__label__nonDir
inputmap provides binding input event currently keystroke used object	__label__nonDir
description security service	__label__nonDir
visit class type element calling defaultaction	__label__nonDir
constant identifying exponent sign field	__label__nonDir
information helper file see generated file helper file	__label__nonDir
equivalent nanoseconds.convert duration	__label__nonDir
interface class providing framework locking waiting condition distinct built-in synchronization monitor	__label__nonDir
manifest signature specification manifest format specification	__label__nonDir
class defines service provider interface spi keyagreement class	__label__nonDir
class specifies parameter used rc5 algorithm	__label__nonDir
policy specifies whether created poa retains active servant active object map	__label__nonDir
object reference template	__label__nonDir
parameter list mimetype defined rfc	__label__nonDir
path list separated one space	__label__nonDir
read next byte data input stream	__label__nonDir
return control disabled color current theme	__label__nonDir
contains class interface supporting sasl	__label__nonDir
atomically set element position given value return old value	__label__nonDir
creates toolkit implementation textfield using specified peer interface	__label__nonDir
attribute key control tracking	__label__nonDir
constant oriya unicode character block	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
set designated parameter given reader object	__label__nonDir
object reference template	__label__nonDir
annotatedwildcardtype represents potentially annotated use wildcard type argument whose upper lower bound may represent annotated us type	__label__nonDir
provides definition timer mbean	__label__nonDir
exception indicates even though operation wa invoked exists ha idl definition implementation operation exists	__label__nonDir
description copied class componentui	__label__nonDir
text representation constant unicodeblock identifier	__label__nonDir
iduniquenesspolicy specifies whether servant activated created poa must unique object identity	__label__nonDir
usually used store inout parameter idl method	__label__nonDir
constructor create activationgroupdesc null group class name indicates system default activationgroup implementation	__label__nonDir
logrecord passed logging framework logically belongs framework longer used updated client application	__label__nonDir
add specified hierarchy bound listener receive hierarchy bound event component hierarchy container belongs change	__label__nonDir
glyph definition	__label__nonDir
interface used model java programming language type	__label__nonDir
facility declaring annotation processor allowing annotation processor communicate annotation processing tool environment	__label__nonDir
package specification precise list supported section official specification java tm platform standard edition orb complies see official specification corba support java tm se	__label__nonDir
return child component window ha focus window focused return null otherwise	__label__nonDir
method public implementation side effect	__label__nonDir
cardlayout defines set method allow application flip card sequentially show specified card	__label__nonDir
standard bold weight	__label__nonDir
protected do-nothing constructor use subclass	__label__nonDir
register observer called change happen content cursor data set example data set changed via requery deactivate close	__label__nonDir
information see swing threading policy	__label__nonDir
swap foreground background	__label__nonDir
attempt establish physical database connection used distributed transaction	__label__nonDir
add specified input method listener receive input method event component	__label__nonDir
atomically set element position given value return old value	__label__nonDir
interface inherits characterdata represents content comment i.e character starting ending	__label__nonDir
provides reference-object class support limited degree interaction garbage collector	__label__nonDir
constant f13 function key	__label__nonDir
constant numeric keypad left arrow key	__label__nonDir
interface must implemented modelmbeans	__label__nonDir
class interface represented class object member another class return class object representing class wa declared	__label__nonDir
represents array type	__label__nonDir
constant playing card unicode character block	__label__nonDir
poa ha retain policy us servant manager servantactivators	__label__nonDir
return new collator instance specified locale	__label__nonDir
may result processing error missing class file erroneous source code	__label__nonDir
set designated parameter given java.lang.bigdecimal value	__label__nonDir
constant key	__label__nonDir
cause combo box close popup window	__label__nonDir
package contains algorithm parameter specification parameter used dsa algorithm	__label__nonDir
org/omg/portableserver/thread_policy_id.java	__label__nonDir
button configured degree controlled action	__label__nonDir
invoked mouse button ha clicked pressed released component	__label__nonDir
holder octetseq	__label__nonDir
helper namevaluepair	__label__nonDir
class cornerstone orb dynamic invocation interface dii allows dynamic creation invocation request	__label__nonDir
array tagged component forming multiple component profile	__label__nonDir
return currentcellrenderer either tree renderer defaultcellrenderer ever wa n't null	__label__nonDir
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param entry the entry to copy, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param commandManager The command manager which will provide the callback; must not be null.	__label__NotNullDirective
 @exception IllegalArgumentException if listener is null	__label__NotNullDirective
 @throws IllegalArgumentException if list or factory is null	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map is null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @param entry the entry to copy, must not be null	__label__NotNullDirective
 @throws NullPointerException if the map is null	__label__NotNullDirective
 @throws NullPointerException if either parameter is null	__label__NotNullDirective
 @throws NullPointerException if the collection is null	__label__NotNullDirective
 throws NullPointerException if either list is null	__label__NotNullDirective
 @throws IllegalArgumentException if the predicates array is null	__label__NotNullDirective
 @throws IllegalArgumentException if the List or Predicate is null	__label__NotNullDirective
 @param a the first (sub?) collection, must not be null	__label__NotNullDirective
 Attempting to add a null key or value to the map will raise a NullPointerException.	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param lock the lock to use, must not be null	__label__NotNullDirective
 @param map the map to make lazy, must not be null	__label__NotNullDirective
 @param transformerFactory the factory for creating new objects, must not be null	__label__NotNullDirective
 @param predicate the predicate for the bag, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param entry the entry to query, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param bag the bag whose unmodifiable view is to be returned, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param transformers matching array of transformers, not cloned, no nulls	__label__NotNullDirective
 @param closures the closures to chain, not copied, no nulls	__label__NotNullDirective
 Puts the key and value into the map, where the key must be a non-null MultiKey object.	__label__NotNullDirective
 @throws IllegalArgumentException if the buffer is null	__label__NotNullDirective
 @param listener The listener to be removed; must not be null.	__label__NotNullDirective
 @param platform The new platform; must not be null.	__label__NotNullDirective
 @param predicate2 the second predicate, may not be null	__label__NotNullDirective
 @param text String The label to set. This value should not be null.	__label__NotNullDirective
 @throws NullPointerException If the specified address is null.	__label__NotNullDirective
 The scanner may not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @param message the raw message string (may be null)	__label__NullSemanticsDirective
 If this parameter is null, then only a specified keyStroke will invoke content proposal.	__label__NullSemanticsDirective
 @param store the IPreference store in which the user's preference should be persisted; null if you don't want it persisted automatically.	__label__NullSemanticsDirective
 @param transformer the transformer to use, may be null	__label__NullSemanticsDirective
 @param keyTransformer the transformer to use for key conversion, null means no transformation	__label__NullSemanticsDirective
 @param keyTransformer the transformer to use for key conversion, null means no transformation	__label__NullSemanticsDirective
 @param keyTransformer the predicate to validate the keys, null means no transformation	__label__NullSemanticsDirective
 @param comparator the comparator used to order the elements, null means use natural order	__label__NullSemanticsDirective
 @param comparator the comparator used to order the elements, null means use natural order	__label__NullSemanticsDirective
 If the input object is null, null is returned.	__label__NullSemanticsDirective
 @param extensions a list of file extension, or null to set the filter to the system's default value	__label__NullSemanticsDirective
 the actions String is currently unused and should be null	__label__NullSemanticsDirective
 If the number of formal parameters required by the underlying method is 0, the supplied args array may be of length 0 or null.	__label__NullSemanticsDirective
 @param coll the collection to check, may be null	__label__NullSemanticsDirective
 Specify null to omit the parameter.	__label__NullSemanticsDirective
 If the Guard object is null, then no restrictions will be placed on who can access the object.	__label__NullSemanticsDirective
 @param array The array to convert; may be null	__label__NullSemanticsDirective
 @param output an OutputStream, may be null	__label__NullSemanticsDirective
 The port must be non-zero.	__label__NumberRangeDirective
 so this argument must not be negative, but is otherwise ignored	__label__NumberRangeDirective
 Hours must be between 0 and 23, and Minutes must be between 00 and 59. The format is locale independent and digits must be taken from the Basic Latin block of the Unicode standard.	__label__NumberRangeDirective
 @param scale the desired number of digits to the right of the decimal point. It must be greater than or equal to zero.	__label__NumberRangeDirective
 The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case 0 is placed in all elements of the copy whose index is greater than or equal to original.length - from.	__label__NumberRangeDirective
 A valid reduction polynomial is either a trinomial (X^m + X^k + 1 with m > k >= 1) or a pentanomial (X^m + X^k3 + X^k2 + X^k1 + 1 with m > k3 > k2 > k1 >= 1), so ks should have length 1 or 3.	__label__NumberRangeDirective
 @param valueType the type of reference to use for values; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param valueType the type of reference to use for values; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param keyType the type of reference to use for keys; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 The count must be at least 1	__label__NumberRangeDirective
 @throws IllegalArgumentException { numBits} is negative.	__label__NumberRangeDirective
 @param kind the kind of dialog to open, one of {@link #ERROR}, {@link #INFORMATION}, {@link #QUESTION}, {@link #WARNING}, {@link #CONFIRM}, or {@link #QUESTION_WITH_CANCEL}.	__label__NumberRangeDirective
 Sets the cycling mode to either of CYCLING_ALWAYS, CYCLING_NEVER, or CYCLING_WHEN_NO_PARENT, which is the default.	__label__NumberRangeDirective
 A valid port value is between 0 and 65535.	__label__NumberRangeDirective
 @param month the month value between 0-11	__label__NumberRangeDirective
 The named program must be able to accept multiple -Dpropname=value options (as documented for the "java" tool)	__label__StringFormatDirective
 The characters in the string must all be decimal digits, except that the first character may be an ASCII minus sign '-' ('\u002D') to indicate a negative value	__label__StringFormatDirective
 @param name the name of this SQLPermission object, which must be setLog	__label__StringFormatDirective
 In this class octal escapes must always begin with a zero.	__label__StringFormatDirective
 This sequence of characters must represent a positive value	__label__StringFormatDirective
 If a scheme is given then the path, if also given, must either be empty or begin with a slash character ('/').	__label__StringFormatDirective
 The characters in the string must all be decimal digits, except that the first character may be an ASCII minus sign '-' ('\u002D') to indicate a negative value.	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 @param name A name for the logger. This should be a dot-separated name and should normally be based on the package name or class name of the subsystem, such as java.net or javax.swing.	__label__StringFormatDirective
 Note that a comment line cannot be extended in this manner; every natural line that is a comment must have its own comment indicator, as described below.	__label__StringFormatDirective
 The rest of s should constitute a FloatValue as described by the lexical syntax rules: FloatValue: Signopt NaN Signopt Infinity Signopt FloatingPointLiteral Signopt HexFloatingPointLiteral SignedInteger HexFloatingPointLiteral: HexSignificand BinaryExponent FloatTypeSuffixopt HexSignificand: HexNumeral HexNumeral . 0x HexDigitsopt . HexDigits 0X HexDigitsopt . HexDigits BinaryExponent: BinaryExponentIndicator SignedInteger BinaryExponentIndicator: p P where Sign, FloatingPointLiteral, HexNumeral, HexDigits, SignedInteger and FloatTypeSuffix are as defined in the lexical structure sections of the of the Java Language Specification.	__label__StringFormatDirective
 The behavior of aforementioned conversion process can be adjusted by various flags:      If the ALLOW_UNASSIGNED flag is used, the domain name string to be converted can contain code points that are unassigned in Unicode 3.2, which is the Unicode version on which IDN conversion is based. If the flag is not used, the presence of such unassigned code points is treated as an error.     If the USE_STD3_ASCII_RULES flag is used, ASCII strings are checked against RFC 1122 and RFC 1123. It is an error if they don't meet the requirements.	__label__StringFormatDirective
 @param encodedKey the key, which is assumed to be encoded according to the PKCS #8 standard.	__label__StringFormatDirective
 @param currencyCode the ISO 4217 currency code, which consists of three upper-case letters between 'A' (U+0041) and 'Z' (U+005A)	__label__StringFormatDirective
 @param obj the server object for which a stub is required. must either be a subclass of PortableRemoteObject	__label__MethodParameterTypeDirective
 The CertPath specified must be of a type that is supported by the validation algorithm, otherwise an InvalidAlgorithmParameterException will be thrown.	__label__MethodParameterTypeDirective
 All elements in the collection must be mutually comparable by the specified comparator (that is, comp.compare(e1, e2) must not throw a ClassCastException for any elements e1 and e2 in the collection).	__label__MethodParameterTypeDirective
 All elements in the list must be mutually comparable using the specified comparator (that is, c.compare(e1, e2) must not throw a ClassCastException for any elements e1 and e2 in the list).	__label__MethodParameterTypeDirective
 @param node the node to add, which must implement IPreferenceNode	__label__MethodParameterTypeDirective
 All of the keys in an enum map must come from a single enum type that is specified, explicitly or implicitly, when the map is created.	__label__MethodParameterTypeDirective
 The key must implement Comparable.	__label__MethodParameterTypeDirective
 @throws IllegalArgumentException if the constructor doesn't exist	__label__MethodParameterTypeDirective
 The class is loaded using the default system class loader and must define a public constructor that takes a single parameter of type ClassLoader which is used as the delegation parent.	__label__MethodParameterTypeDirective
 The second argument must be an object type; for integral values, the java.lang equivalent objects should be used	__label__MethodParameterTypeDirective
 Any attempt to insert an element of the wrong type will result in an immediate ClassCastException.	__label__MethodParameterTypeDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__MethodParameterCorrelationDirective
 @param types a list of table types, which must be from the list of table types returned from {@link #getTableTypes}	__label__MethodParameterCorrelationDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__MethodParameterCorrelationDirective
 The inputstream must contain the number of characters specified by length, otherwise a SQLException will be generated when the CallableStatement is executed.	__label__MethodParameterCorrelationDirective
 The reader must contain the number of characters specified by length otherwise a SQLException will be generated when the CallableStatement is executed.	__label__MethodParameterCorrelationDirective
 Once an AlgorithmParameters object is obtained, it must be initialized via a call to init, using an appropriate parameter specification or parameter encoding.	__label__Post-CallDirective
 The return value should always be checked to make sure that the rename operation was successful.	__label__Post-CallDirective
 If getKey() or getValue() returns null, it means the mapping is stale and should be removed.	__label__Post-CallDirective
 After the use of the context, clients are required to call its dispose method.	__label__Post-CallDirective
 @return the corresponding widget, or null if none	__label__Post-CallDirective
 The atomic classes also support method weakCompareAndSet, which has limited applicability. On some platforms, the weak version may be more efficient than compareAndSet in the normal case, but differs in that any given invocation of the weakCompareAndSet method may return false spuriously (that is, for no apparent reason). A false return means only that the operation may be retried if desired, relying on the guarantee that repeated invocation when the variable holds expectedValue and no other thread is also attempting to set the variable will eventually succeed.	__label__ReturnValueDirective
 @return a ResultSet object that contains the data produced by the given query; never null	__label__ReturnValueDirective
 @return Read-only {@link Map} of the current conflicts. If no conflicts, then return an empty map. Never null	__label__ReturnValueDirective
 @return The array of active triggers (TriggerSequence) for a particular command identifier. This value is guaranteed to never be null, but it may be empty.	__label__ReturnValueDirective
 Returns an array of all locales for which the getInstance methods of this class can return localized instances. It must contain at least a Locale instance equal to {@link java.util.Locale#US Locale.US}.	__label__ReturnValueDirective
 This value may be null if there is no extra information.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. If one parameter is held constant, the results must be semi-monotonic in the other parameter.	__label__ReturnValueDirective
 The computed result must be within 2.5 ulps of the exact result.	__label__ReturnValueDirective
 Note that there must be at least one nonzero digit in a subnormal significand.	__label__ReturnValueDirective
 The certificates supplied must be of a type supported by the CertificateFactory.	__label__ReturnValueDirective
 The driver should return "null" if it realizes it is the wrong kind of driver to connect to the given URL.	__label__ReturnValueDirective
 Subclasses that hook their own focus listener should override this method and return false.	__label__ReturnValueDirective
 The last element of the list must be a {@linkplain Locale#ROOT root locale} if it is desired to have the base bundle as the terminal of the parent chain.	__label__ReturnValueDirective
 Under these circumstances, however, all subsequent invocations of flush() and sync should return false, as returning true would imply that all previous operations had successfully been made permanent.	__label__ReturnValueDirective
 The implementer must ensure that the returned node has not been removed.	__label__ReturnValueDirective
 @return never	__label__ReturnValueDirective
 @return true if the range of characters requires bidi analysis	__label__ReturnValueDirective
 Gets the key from the entry. This method dereferences weak and soft keys and thus may return null. @return the key, which may be null if it was garbage collected	__label__ReturnValueDirective
 If the implementation distinguishes between user mode time and system mode time, the returned CPU time is the amount of time that the current thread has executed in user mode or system mode.	__label__ReturnValueDirective
 This field should not be referenced by subclasses.	__label__MethodCallVisibilityDirective
 Constructor only used in deserialization, do not use otherwise.	__label__MethodCallVisibilityDirective
 Constructor only used in deserialization,	__label__MethodCallVisibilityDirective
 Constructor only used in deserialization, do not use otherwise.	__label__MethodCallVisibilityDirective
 Application developers should only take notice of the methods defined in this MessageDigest class; all the methods in the superclass are intended for cryptographic service providers who wish to supply their own implementations of message digest algorithms	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL TIME values do not have a year component.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL TIME values do not have a date component.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL Date values do not have a time component.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 Do neither call nor override.	__label__MethodCallVisibilityDirective
 After close has been called this Handler should no longer be used.	__label__MethodCallVisibilityDirective
 If {@link ICompletionProposalExtension5} is implemented, this method should not be called any longer.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: ConcurrentModificationException should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 @exception IOException if an I/O error occurs when binding this socket.	__label__ExceptionRaisingDirective
 @exception SQLException if a database access error occurs	__label__ExceptionRaisingDirective
 @exception SocketException if there is an error in the underlying protocol, such as an UDP error.	__label__ExceptionRaisingDirective
 @exception SecurityException If a security manager, s, is present and any of the following conditions is met:      invocation of {@link SecurityManager#checkMemberAccess s.checkMemberAccess(this, Member.PUBLIC)} denies access to the constructors within this class     the caller's class loader is not the same as or an ancestor of the class loader for the current class and invocation of {@link SecurityManager#checkPackageAccess s.checkPackageAccess()} denies access to the package of this class	__label__ExceptionRaisingDirective
 @throws IllegalArgumentException if end is before start @throws NullPointerException if array is null	__label__ExceptionRaisingDirective
 @throws SecurityException If a required system property value cannot be accessed.	__label__ExceptionRaisingDirective
 . @exception IOException if an I/O error occurs.	__label__ExceptionRaisingDirective
 @exception SQLException if the columnIndex is not valid; if a database access error occurs; the result set concurrency is CONCUR_READ_ONLY or this method is called on a closed result set @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @exception InvocationTargetException if the run method must propagate a checked exception, it should wrap it inside an InvocationTargetException; runtime exceptions and errors are automatically wrapped in an InvocationTargetException by this method @exception InterruptedException if the operation detects a request to cancel, using IProgressMonitor.isCanceled(), it should exit by throwing InterruptedException; this method propagates the exception	__label__ExceptionRaisingDirective
 @exception SQLException if a database access error occurs, this method is called on a closed Statement or the condition seconds >= 0 is not satisfied	__label__ExceptionRaisingDirective
 This exception must be thrown in a consistent fashion for synchronization to work correctly.	__label__ExceptionRaisingDirective
 @throws org.eclipse.swt.SWTException in these cases:      * {@link org.eclipse.swt.SWT#ERROR_WIDGET_DISPOSED} - if the receiver has been disposed     * {@link org.eclipse.swt.SWT#ERROR_THREAD_INVALID_ACCESS} - if not called from the thread that created the receiver	__label__ExceptionRaisingDirective
 @throws org.eclipse.swt.SWTException in these cases:      * {@link org.eclipse.swt.SWT#ERROR_WIDGET_DISPOSED} - if the receiver has been disposed     * {@link org.eclipse.swt.SWT#ERROR_THREAD_INVALID_ACCESS} - if not called from the thread that created the receiver	__label__ExceptionRaisingDirective
 @exception IOException if there is an I/O or format problem with the keystore data, if a password is required but not given, or if the given password was incorrect. If the error is due to a wrong password, the {@link Throwable#getCause cause} of the IOException should be an UnrecoverableKeyException	__label__ExceptionRaisingDirective
 @throws FunctorException always	__label__ExceptionRaisingDirective
 @throws IllegalStateException implementations may, but are not required to, throw this exception if the entry has been removed from the backing map.	__label__ExceptionRaisingDirective
 @throws IllegalStateException if not all the elements can be added at this time due to insertion restrictions	__label__ExceptionRaisingDirective
 @exception SQLException if the columnIndex is not valid; if a database access error occurs; the result set concurrency is CONCUR_READ_ONLY or this method is called on a closed result set @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @throws NullPointerException if toKey is null and this map does not permit null keys @throws IllegalArgumentException if this map itself has a restricted range, and toKey lies outside the bounds of the range	__label__ExceptionRaisingDirective
 A client must use the VMID the garbage collector uses in order to make corresponding clean calls when the client drops remote object references	__label__MiscellaneousMethodCallDirective
 If subjectDN is not null, it should contain a single DER encoded distinguished name, as defined in X.501.	__label__MiscellaneousMethodCallDirective
 The range must be sorted into ascending order according to the {@linkplain Comparable natural ordering} of its elements (as by the {@link #sort(Object[], int, int)} method) prior to making this call	__label__MiscellaneousMethodCallDirective
 @param schemaPattern a schema name pattern; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param collectionFactory the collection factory which must return a Collection instance	__label__MiscellaneousMethodCallDirective
 @throws IllegalArgumentException if sub-array or entry matching used and an entry is invalid	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param schema a schema name; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param columnNamePattern a column name pattern; must match the column name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param chain an array of Certificates representing the certificate chain. The chain must be ordered and contain a Certificate at index 0 corresponding to the private key.	__label__MiscellaneousMethodCallDirective
 @param typeNamePattern a type name pattern; must match the type name as it is stored in the database; may be a fully qualified name	__label__MiscellaneousMethodCallDirective
 @param limits contains the top value that you want parsed with that format,and should be in ascending sorted order.	__label__MiscellaneousMethodCallDirective
 If the token's data is not null and a string it is assumed that it is the encoded content type.	__label__MiscellaneousMethodCallDirective
 Otherwise, if any of the following is true, an ArrayStoreException is thrown and the destination is not modified:      The src argument refers to an object that is not an array.     The dest argument refers to an object that is not an array.     The src argument and dest argument refer to arrays whose component types are different primitive types.     The src argument refers to an array with a primitive component type and the dest argument refers to an array with a reference component type.     The src argument refers to an array with a reference component type and the dest argument refers to an array with a primitive component type.   Otherwise, if any of the following is true, an IndexOutOfBoundsException is thrown and the destination is not modified:      The srcPos argument is negative.     The destPos argument is negative.     The length argument is negative.     srcPos+length is greater than src.length, the length of the source array.     destPos+length is greater than dest.length, the length of the destination array.   Because of the restrictions already itemized, this paragraph effectively applies only to the situation where both arrays have component types that are reference types.	__label__MiscellaneousMethodCallDirective
 The parent composite is assumed to use GridLayout as its layout manager, since the parent is typically the composite created in {@link Dialog#createDialogArea}.	__label__MiscellaneousMethodCallDirective
 If the token's data is not null and a text attribute it is assumed that it is the encoded text attribute.	__label__MiscellaneousMethodCallDirective
 Clients are not permitted to extend this class.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface, but must not extend.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be called or extended by any external clients.	__label__ExtensibleClassIdentificationDirective
 it is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This interface is not intended to be extended by clients.	__label__ExtensibleClassIdentificationDirective
 Implementors can extend	__label__ExtensibleClassIdentificationDirective
 Clients can subclass to provide additional proposals in case they are supported by their own find/replace mechanism.	__label__ExtensibleClassIdentificationDirective
 Clients should subclass	__label__ExtensibleClassIdentificationDirective
 Clients are encouraged to subclass {@link AbstractInformationControl}, which does this for free.	__label__ExtensibleClassIdentificationDirective
 This interface may be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 Clients are expected to implement this interface in order to create a particular kind of control for decoration.	__label__ExtensibleClassIdentificationDirective
 The other way to create a thread is to declare a class that implements the Runnable interface. That class then implements the run method. An instance of the class can then be allocated, passed as an argument when creating Thread, and started.	__label__ExtensibleClassIdentificationDirective
 The interface can be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 Implement this method to draw a graphical representation of this annotation within the given bounds.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 Content providers for table tree viewers must implement the ITreeContentProvider interface.	__label__ExtensibleClassIdentificationDirective
 Subclasses may implement actions on top of BasicPermission, if desired.	__label__ExtensibleClassIdentificationDirective
 Subclasses may extend or override.	__label__MethodOverridingDirective
 Subclasses may extend or reimplement.	__label__MethodOverridingDirective
 Subclasses may override to handle other buttons	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 handleFontChange- reimplement to respond to font changes	__label__MethodOverridingDirective
 handleShellCloseEvent- extend or reimplement to handle shell closings	__label__MethodOverridingDirective
 Subclasses may replace or extend.	__label__MethodOverridingDirective
 Subclasses may reimplement or extend.	__label__MethodOverridingDirective
 Clients may reimplement this method.	__label__MethodOverridingDirective
 Subclasses may reimplement.	__label__MethodOverridingDirective
 An applet should override this method to return an array of Strings describing these parameters.	__label__MethodOverridingDirective
 if the programmer desires thread-local variables to have an initial value other than null, ThreadLocal must be subclassed, and this method overridden.	__label__MethodOverridingDirective
 Subclasses may override if required.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses should override.	__label__MethodOverridingDirective
 Subclasses may override this method.	__label__MethodOverridingDirective
 Subclasses should override this method when an alternate default location is desired, rather than overriding {@link #getInitialLocation(Point)}	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses should override to take some action in response to a help request.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses must implement this method.	__label__MethodOverridingDirective
 Subclasses should override this method if they want to change the font of the SWT control to a value different than the standard dialog font.	__label__MethodOverridingDirective
 Subclasses wishing to perform validation should override both this method and isValid.	__label__MethodOverridingDirective
 May be overridden by subclasses.	__label__MethodOverridingDirective
 Subclasses that intend to support efficient single-character output should override this method.	__label__MethodOverridingDirective
 Subclasses may override this method to customize the tool bar manager.	__label__MethodOverridingDirective
 Subclasses may override this method to customize the cool bar manager.	__label__MethodOverridingDirective
 Subclasses may override this method to customize the menu manager.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 For providing the label's styles, create a subclass and overwrite {@link StyledCellLabelProvider#update(ViewerCell)} to return set all information needed to render a element.	__label__MethodOverridingDirective
 Subclasses that support fields should override this and create an AttributedCharacterIterator with meaningful attributes.	__label__MethodOverridingDirective
 Knowledgeable providers should override this method.	__label__MethodOverridingDirective
 Subclasses should override this method with a correct implementation.	__label__MethodOverridingDirective
 Subclasses must implement the select method and may implement the isFilterProperty method.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses that hook their own focus listener should override this method and return false.	__label__MethodOverridingDirective
 Sublcasses may override.	__label__MethodOverridingDirective
 If the list is variable-size the programmer must additionally override the {@link #add(int, Object) add(int, E)} and {@link #remove(int)} methods.	__label__MethodOverridingDirective
 Subclasses may want to override this behavior to remain consistent with the {@link Comparator#equals(Object) equals} contract.	__label__MethodOverridingDirective
 Subclasses can override this to create a different class.	__label__MethodOverridingDirective
 Override to validate an object set into the map via setValue.	__label__MethodOverridingDirective
 Subclasses can override this to return iterators with different properties.	__label__MethodOverridingDirective
 Classes for that connection type can override this method and short-circuit the parsing.	__label__MethodOverridingDirective
 Applications can override this method in subclasses of ThreadGroup to provide alternative handling of uncaught exceptions.	__label__MethodOverridingDirective
 This method may be overridden, though it typically isn't necessary or desirable.	__label__MethodOverridingDirective
 This method is not intended to be overridden by subclasses.	__label__MethodOverridingDirective
 This method is internal to the framework; it should not be implemented outside the framework.	__label__MethodOverridingDirective
 Subclasses should call the super implementation (which at this time is empty but may be changed in the future)	__label__MethodExtensionDirective
 Code overriding this method should call super.removeNotify as the first line of the overriding method.	__label__MethodExtensionDirective
 Subclasses of Component that override this method should either call super.update(g), or call paint(g) directly from their update method.	__label__MethodExtensionDirective
 They should also extend {@link #computeTrim()} if they create a content area with additional trim (e.g. scrollbars)	__label__MethodExtensionDirective
 overriding methods must invoke super.handleDispose	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkAwtEventQueueAccess at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkRead at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkWrite at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 Subclasses typically need not override this method, but may extend it (calling super.saveDialogBounds if additional bounds information should be stored.	__label__MethodExtensionDirective
 To preserve functionality, any further overrides of these methods in subclasses must invoke superclass versions, which effectively disables additional task customization.	__label__MethodExtensionDirective
 The field is initialized to false, but may be set to true by a subclass constructor (and should not be modified thereafter)	__label__CallContractSubclassingDirective
 The message, image and title should be updated by the subclass, if desired	__label__CallContractSubclassingDirective
 Subclasses are required to call {@link #create()} at the end of their constructor.	__label__CallContractSubclassingDirective
 Subclasses are required to call {@link #create()} at the end of their constructor.	__label__CallContractSubclassingDirective
 If you override this method, then you should make a call to super.checkRead at the point the overridden method would normally throw an exception.	__label__CallContractSubclassingDirective
 Likewise, {@link IInformationControl#addFocusListener(org.eclipse.swt.events.FocusListener)} should install listeners for {@link SWT#Activate} and {@link SWT#Deactivate} on the shell and forward events to the focus listeners.	__label__CallContractSubclassingDirective
 Note that it is the responsibility of the implementor to dispose of SWT menus it creates.	__label__CallContractSubclassingDirective
 This method must not modify the parent's layout.	__label__MethodImplementationDirective
 In other words, this method must allocate a new array	__label__MethodImplementationDirective
 Finally, the implementor must ensure that compare(x, y)==0 implies that sgn(compare(x, z))==sgn(compare(y, z)) for all z.	__label__MethodImplementationDirective
 Implementations are encouraged to make regular use of Assert.isNotNull to ensure that null parameters are detected as early as possible.	__label__MethodImplementationDirective
 A certificate/CRL-using system (an application validating a certificate/CRL) must reject the certificate/CRL if it encounters a critical extension it does not recognize. A non-critical extension may be ignored if it is not recognized.	__label__MethodImplementationDirective
 The agent should take care to ensure that the JAR does not contain any classes or resources other than those to be defined by the system class loader for the purpose of instrumentation. Failure to observe this warning could result in unexpected behaviour that is difficult to diagnose (see {@link #appendToBootstrapClassLoaderSearch appendToBootstrapClassLoaderSearch}.	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if fromElement cannot be compared to elements currently in the set. @throws NullPointerException if fromElement is null and this set does not permit null elements	__label__MethodImplementationDirective
 All general-purpose sorted set implementation classes should provide four "standard" constructors:	__label__MethodImplementationDirective
 The only requirement enforced by this facility is that provider classes must have a zero-argument constructor so that they can be instantiated during loading.	__label__MethodImplementationDirective
 Further, those subclasses that might likely have a cause associated with them should have two more constructors, one that takes a Throwable (the cause), and one that takes a String (the detail message) and a Throwable (the cause).	__label__MethodImplementationDirective
 If no such object exists, the map should be "wrapped" using the {@link Collections#synchronizedMap Collections.synchronizedMap} method.	__label__MethodImplementationDirective
 This method should query if the state of the object permits it to be acquired in the shared mode, and if so to acquire it.	__label__MethodImplementationDirective
 Subclasses that change the layout type by overriding this method should also override createContents.	__label__Non-localConsistencySubclassingDirective
 By convention, classes that implement this interface should override Object.clone (which is protected) with a public method.	__label__Non-localConsistencySubclassingDirective
 As of 3.4, you should only call this method if you want to override the {@link JFacePreferences#CONTENT_ASSIST_BACKGROUND_COLOR}.	__label__Non-localConsistencySubclassingDirective
 As specified in {@link Object#equals(Object)} clients will most likely also have to implement {@link Object#hashCode()}.	__label__Non-localConsistencySubclassingDirective
 Enriching this information control only works properly if {@link IInformationControl#isFocusControl()} is implemented like this (fShell is the control's shell): return fShell.getDisplay().getActiveShell() == fShell	__label__Non-localConsistencySubclassingDirective
 All ReadWriteLock implementations must guarantee that the memory synchronization effects of writeLock operations (as specified in the {@link Lock} interface) also hold with respect to the associated readLock.	__label__Non-localConsistencySubclassingDirective
 Note that the ordering maintained by a set (whether or not an explicit comparator is provided) must be consistent with equals if it is to correctly implement the { Set} interface.	__label__Non-localConsistencySubclassingDirective
 @exception SQLException if the columnLabel is not valid; if a database access error occurs or this method is called on a closed result set @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__Non-localConsistencySubclassingDirective
 Subclasses should initialize this to a calendar appropriate for the locale associated with this DateFormat.	__label__MiscellaneousSubclassingDirective
 Subclasses should initialize this to a number format appropriate for the locale associated with this DateFormat.	__label__MiscellaneousSubclassingDirective
 Subclasses should not provide methods that can change the state of a permission once it has been created.	__label__MiscellaneousSubclassingDirective
 IPv4 address byte array must be 4 bytes long and IPv6 byte array must be 16 bytes long	__label__MiscellaneousSubclassingDirective
 After removing the object from the RMI runtime, the group must inform its ActivationMonitor (via the monitor's inactiveObject method) that the remote object is not currently active so that the remote object will be re-activated by the activator upon a subsequent activation request.	__label__MethodCallSequenceDirective
 This method must be called to release any resources associated with the stream.	__label__MethodCallSequenceDirective
 This method may only be called after initializeDialogUnits has been called.	__label__MethodCallSequenceDirective
 This method must be called before the thread is started.	__label__MethodCallSequenceDirective
 The execute method executes an SQL statement and indicates the form of the first result. You must then use the methods getResultSet or getUpdateCount to retrieve the result, and getMoreResults to move to any subsequent result(s).	__label__MethodCallSequenceDirective
 Before a keystore can be accessed, it must be {@link #load(java.io.InputStream, char[]) loaded}.	__label__MethodCallSequenceDirective
 This method can only be called after at least one {@link #next} method call.	__label__MethodCallSequenceDirective
 This is the ResourceBundle that should be used to localize the message string before formatting it.	__label__MethodCallSequenceDirective
 @throws IllegalStateException if next() has not yet been called	__label__MethodCallSequenceDirective
 However, you can't call this method on the same iterator more than once without calling next() or previous().	__label__MethodCallSequenceDirective
 @throws IllegalStateException if the next method has not yet been called, or the remove method has already been called after the last call to the next method.	__label__MethodCallSequenceDirective
 The context must be a security context returned by a previous call to getSecurityContext and the access control decision is based upon the configured security policy for that security context.	__label__MethodCallSequenceDirective
 If the matcher is to be used in further matching operations then it should first be reset.	__label__MethodCallSequenceDirective
 The recommended usage is to use {@link java.net.URI} to identify resources, then convert it into a {@link java.net.URL} when it is time to access the resource. From that URL, you can either get the {@link java.net.URLConnection} for fine control, or get directly the InputStream.  Here is an example:  URI uri = new URI("http://java.sun.com/"); URL url = uri.toURL(); InputStream in = url.openStream();	__label__MethodCallSequenceDirective
 It is strongly recommended that an application explicitly commits or rolls back an active transaction prior to calling the close method.	__label__MethodCallSequenceDirective
 Note: the node is not visually expanded! You may have to call parent.setExpanded(true).	__label__MethodCallSequenceDirective
 This signature object is reset to its initial state (the state it was in after a call to one of the initSign methods) and can be reused to generate further signatures with the same private key.	__label__MethodCallSequenceDirective
 This method should only be called from the UI thread. If you are not on the UI thread then wrap the call with a PlatformUI.getWorkbench().getDisplay().synchExec() in order to guarantee the correct result.	__label__MethodCallSequenceDirective
 Adjust the bounds of the popup as necessary prior to opening the dialog.	__label__MethodCallSequenceDirective
 If this rules relies on a text pattern comprising a opening and a closing character sequence this method can also be called when the scanner is positioned already between the opening and the closing sequence. In this case, resume must be set to true.	__label__MethodCallSequenceDirective
 Once a socket has been closed, it is not available for further networking use (i.e. can't be reconnected or rebound). A new socket needs to be created.	__label__MethodCallSequenceDirective
 It is important not to use the original set after invoking this method, as it is a backdoor for adding untransformed objects.	__label__MethodCallSequenceDirective
 Usually, clients instantiate this class and configure it before using it.	__label__MethodCallSequenceDirective
 After free has been called, any attempt to invoke a method other than free will result in a SQLException being thrown.	__label__MethodCallSequenceDirective
 The first class defined in a package determines the exact set of certificates that all subsequent classes defined in that package must contain. The set of certificates for a class is obtained from the {@link java.security.CodeSource CodeSource} within the ProtectionDomain of the class. Any classes added to that package must contain the same set of certificates or a SecurityException will be thrown.	__label__NonCall-basedStateDirective
 For each certificate cert in a certification path certPath, cert.getType().equals(certPath.getType()) must be true.	__label__NonCall-basedStateDirective
 The keys should be immutable If they are not then they must not be changed after adding to the MultiKey. @	__label__NonCall-basedStateDirective
 This method should be used only when auto-commit mode has been disabled.	__label__NonCall-basedStateDirective
 This method should be used only when auto-commit has been disabled.	__label__NonCall-basedStateDirective
 This method should only be called by a thread that is the owner of this object's monitor.	__label__NonCall-basedStateDirective
 @return the dialog, after being closed by the user, which the client can only call getReturnCode() or getToggleState()	__label__NonCall-basedStateDirective
 If there is a security manager, then the calling context must have permission to connect to all of the URLs in the codebase URL path; otherwise, the current thread's context class loader will be used instead of the codebase loader.	__label__NonCall-basedStateDirective
 @param object the object to evaluate, should not be changed	__label__NonCall-basedStateDirective
 With strict parsing, inputs must match this object's format.	__label__NonCall-basedStateDirective
 @param key the key to set, must be the key of the map	__label__NonCall-basedStateDirective
 This requires LoggingPermission("control").	__label__NonCall-basedStateDirective
 The provider must be accessible from the same class loader that was initially queried to locate the configuration file; note that this is not necessarily the class loader from which the file was actually loaded.	__label__NonCall-basedStateDirective
 @exception SecurityException if a security manager exists and if the caller does not have LoggingPermission("control").	__label__NonCall-basedStateDirective
 The map will be empty after this call returns.	__label__NonCall-basedStateDirective
 Subclasses should override this method when an alternate default size is desired, rather than overriding {@link #getInitialSize()}.	__label__AlternativeDirective
 Because SO_RCVBUF is a hint, applications that want to verify what size the buffers were set to should call {@link #getReceiveBufferSize()}.	__label__AlternativeDirective
 Because SO_RCVBUF is a hint, applications that want to verify what size the buffers were set to should call {@link #getReceiveBufferSize()}.	__label__AlternativeDirective
 The {@link java.nio.charset.CharsetDecoder} class should be used when more control over the decoding process is required.	__label__AlternativeDirective
 Security note: If an application needs to read a password or other secure data, it should use {@link #readPassword()} or {@link #readPassword(String, Object...)} and manually zero the returned character array after processing to minimize the lifetime of sensitive data in memory.	__label__AlternativeDirective
 Subclassers should call setShellStyle to change this value, rather than overriding this method.	__label__AlternativeDirective
 Standard customers should not overwrite this method but {@link #getValue(Object)}	__label__AlternativeDirective
 Denigrated, use {@linkplain #setSubject(X500Principal)} or {@linkplain #setSubject(byte[])} instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.	__label__AlternativeDirective
 Denigrated, use {@linkplain #getSubject()} or {@linkplain #getSubjectAsBytes()} instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.	__label__AlternativeDirective
 If a new Character instance is not required, this method should generally be used in preference to the constructor {@link #Character(char)}, as this method is likely to yield significantly better space and time performance by caching frequently requested values.	__label__AlternativeDirective
 An application might use the activeCount method to get an estimate of how big the array should be,	__label__AlternativeDirective
 An application might use the activeCount method to get an estimate of how big the array should be	__label__AlternativeDirective
 The {@link java.nio.charset.CharsetDecoder} class should be used when more control over the decoding process is required.	__label__AlternativeDirective
 The {@link org.apache.commons.collections.set.ListOrderedSet ListOrderedSet} class provides an alternative approach, by wrapping an existing Set and retaining insertion order in the iterator.	__label__AlternativeDirective
 Note that CaseInsensitiveMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 Under many circumstances, linking Iterators together in this manner is more efficient (and convenient) than using nested for loops to extract a list.	__label__AlternativeDirective
 A map iterator is an efficient way of iterating over maps. There is no need to access the entry set or use Map Entry objects.	__label__AlternativeDirective
 In previous versions of this class, it was mandatory to close all cursor objects to avoid memory leaks. It is no longer necessary to call this close method; an instance of this class can now be treated exactly like a normal iterator.	__label__AlternativeDirective
 The following extension interfaces exist:      {@link org.eclipse.jface.text.IWidgetTokenOwnerExtension} since version 3.0 introducing priorities when requesting a widget token and thus replacing the non-prioritized scheme.	__label__AlternativeDirective
 Should be accessed through {@link #getLastNodeReturned()} to enforce this behaviour.	__label__AlternativeDirective
 If the object is of a class implementing the interface SQLData, the JDBC driver should call the method SQLData.writeSQL to write it to the SQL data stream. If, on the other hand, the object is of a class implementing Ref, Blob, Clob, NClob, Struct, java.net.URL, or Array, the driver should pass it to the database as a value of the corresponding SQL type.	__label__AlternativeDirective
 Standard implementations of common predicates are provided by {@link PredicateUtils}. These include true, false, instanceof, equals, and, or, not, method invokation and null testing.	__label__AlternativeDirective
 If no such object exists, the list should be "wrapped" using the {@link Collections#synchronizedList Collections.synchronizedList} method.	__label__AlternativeDirective
 Events are not generated when indirect descendants of this node are added or removed; a caller desiring such events must register with each descendant.	__label__AlternativeDirective
 Any color allocated in this manner must be disposed by calling {@link #destroyColor(RGB)}, or by an eventual call to {@link #dispose()}. {@link Color#dispose()} must never been called directly on the returned color.	__label__AlternativeDirective
 Clients should handle labelProviderChangedEvents for the given element to get the complete decoration.	__label__AlternativeDirective
 It is recommended that clients do not implement this interface but instead use the standard implementation of this interface, {@link TreeSelection}.	__label__AlternativeDirective
 This method is provided for backwards compatibility. It is recommended that getDefaultFontDataArray is used instead.	__label__AlternativeDirective
 The hash code of an array member-value is computed by calling the appropriate overloading of {@link java.util.Arrays#hashCode(long[]) Arrays.hashCode} on the value. (There is one overloading for each primitive type, and one for object reference types.)	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of setCharacterStream which takes a length parameter.	__label__AlternativeDirective
 Note that there is another method for efficiently processing the simultaneous addition of multiple elements.	__label__AlternativeDirective
 Note that the preferred way of re-initializing a preference to its default value is to call setToDefault.	__label__AlternativeDirective
 Typically you shouldn't use DateFormatSymbols directly. Rather, you are encouraged to create a date-time formatter with the DateFormat class's factory methods: getTimeInstance, getDateInstance, or getDateTimeInstance.	__label__AlternativeDirective
 If multiple threads access a map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally. (A structural modification is any operation that adds or deletes one or more mappings; merely changing the value associated with an existing key is not a structural modification.) This is typically accomplished by synchronizing on some object that naturally encapsulates the map. If no such object exists, the map should be "wrapped" using the {@link Collections#synchronizedSortedMap Collections.synchronizedSortedMap} method. This is best done at creation time, to prevent accidental unsynchronized access to the map:     SortedMap m = Collections.synchronizedSortedMap(new TreeMap(...));	__label__AlternativeDirective
 Note that there is another method for efficiently processing the simultaneous addition of multiple elements.	__label__AlternativeDirective
 If the old behavior is desired by subclasses, get the returned composite's layout data and set grabExcessVerticalSpace to true.	__label__AlternativeDirective
 The default CertPathBuilder type can be changed by setting the value of the "certpathbuilder.type" security property (in the Java security properties file) to the desired type.	__label__AlternativeDirective
 By default it looks in sun.net.www.content, but users can define a vertical-bar delimited set of class prefixes to search through in addition by defining the java.content.handler.pkgs property.	__label__AlternativeDirective
 When using a capacity-restricted queue, this method is generally preferable to {@link #add}, which can fail to insert an element only by throwing an exception.	__label__AlternativeDirective
 Note that this method is not synchronized!	__label__SynchronizationDirective
 This implementation is not synchronized. You can use {@link java.util.Collections#synchronizedMap} to provide synchronized access to a ReferenceMap. Remember that synchronization will not stop the garbage collecter removing entries.	__label__SynchronizationDirective
 @return a negative value on failure; zero if acquisition in shared mode succeeded but no subsequent shared-mode acquire can succeed; and a positive value if acquisition in shared mode succeeded and subsequent shared-mode acquires might also succeed, in which case a subsequent waiting thread must check availability.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking.	__label__SynchronizationDirective
 Subclass implementations of PermissionCollection should assume that they may be called simultaneously from multiple threads, and therefore should be synchronized properly.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize	__label__SynchronizationDirective
 Unless otherwise documented by a specific provider, threads that need to access a single CertPathValidator instance concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating a different CertPathValidator instance need not synchronize.	__label__SynchronizationDirective
 The iterators returned by the collection views of this class are not fail-fast. They will never raise a {@link java.util.ConcurrentModificationException}.	__label__SynchronizationDirective
 Note that CaseInsensitiveMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 Note that LinkedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 Note that LRUMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 Note that TransformedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 If multiple threads access a linked list concurrently, and at least one of the threads modifies the list structurally, it must be synchronized externally.	__label__SynchronizationDirective
 Shutdown hooks run at a delicate time in the life cycle of a virtual machine and should therefore be coded defensively. They should, in particular, be written to be thread-safe and to avoid deadlocks insofar as possible. They should also not rely blindly upon services that may have registered their own shutdown hooks and therefore may themselves in the process of shutting down. Attempts to use other thread-based services such as the AWT event-dispatch thread, for example, may lead to deadlocks.	__label__SynchronizationDirective
 This method should only be called from the UI thread. If you are not on the UI thread then wrap the call with a PlatformUI.getWorkbench().getDisplay().synchExec() in order to guarantee the correct result.	__label__SynchronizationDirective
 Note that if your application creates its own custom activation group, a security manager must be set for that group	__label__MiscellaneousDirective
 Mailcap files must conform to the mailcap file specification	__label__MiscellaneousDirective
 The circumstances and the exception type must be documented by that { Lock} implementation.	__label__MiscellaneousDirective
 Typically, an exception will be thrown (such as {@link IllegalMonitorStateException}) and the implementation must document that fact.	__label__MiscellaneousDirective
 Users should cast the generic URLConnection to a JarURLConnection when they know that the URL they created is a JAR URL, and they need JAR-specific functionality. For example:   URL url = new URL("jar:file:/home/duke/duke.jar!/");  JarURLConnection jarConnection = (JarURLConnection)url.openConnection();  Manifest manifest = jarConnection.getManifest();	__label__MiscellaneousDirective
 @return the object fetched. The instanceof operator should be used to determine the specific kind of object returned.	__label__MiscellaneousDirective
 @serialData Overriding methods should use this tag to describe the data layout of this Externalizable object.	__label__MiscellaneousDirective
 A provider should document all the key specifications supported by its key factory	__label__MiscellaneousDirective
 Note that the default implementation is not very efficient and should be overridden if this class is implemented.	__label__MiscellaneousDirective
 Individual set implementations should clearly document any restrictions on the elements that they may contain.	__label__MiscellaneousDirective
 he number of buckets is inversely proportional to the chances for thread contention. The fewer buckets, the more chances for thread contention. The more buckets the fewer chances for thread contention.	__label__MiscellaneousDirective
 Valuable data should not be stored at this node as it is shared by all programs that use it.	__label__MiscellaneousDirective
 The add methods are affected by this class. Thus objects must be removed or searched for using their transformed form. For example, if the transformation converts Strings to Integers, you must use the Integer form to remove objects.	__label__MiscellaneousDirective
 To be portable, however, applications should always provide these values for user-defined and REF parameters.	__label__MiscellaneousDirective
 IDialogConstants is the interface for common dialog strings and ids used throughout JFace. It is recommended that you use these labels and ids whereever for consistency with the JFace dialogs.	__label__MiscellaneousDirective
 Due to the inherently imprecise nature of the result, it is recommended that this method only be used for informational purposes.	__label__MiscellaneousDirective
accessibleobject class base class field method constructor object	__label__nonDir
set password used create database connection rowset object given string object	__label__nonDir
return set field element	__label__nonDir
package implemented mime-based package processor enables interpretation creation optimized binary data within mime-based package format	__label__nonDir
parameter c collection collection checked containment collection return boolean true collection contains element specified collection	__label__nonDir
org/omg/corba/currentholder.java generated idl-to-java compiler portable version src/share/classes/org/omg/portableserver/corba.idl saturday july pdt	__label__nonDir
proc	__label__nonDir
return boolean true queue contains element	__label__nonDir
left-to-right run direction	__label__nonDir
return effectively unlimited stream pseudorandom long value	__label__nonDir
get singleton instance system clipboard interface clipboard facility provided native platform	__label__nonDir
information helper file see generated file helper file	__label__nonDir
creates image specified image producer	__label__nonDir
visit intersectiontype element calling visitunknown	__label__nonDir
activate object id	__label__nonDir
holder float	__label__nonDir
given fully qualified name class interface format returned getname method attempt locate load link class interface	__label__nonDir
example xml schema definition x schema x complextype name pea x choice maxoccurs unbounded x element name foo type x string x element name bar type x string x choice x complextype x element name foo type x int x schema	__label__nonDir
allpermission permission implies permission	__label__nonDir
class used explicitly specify value encoding input p oaep padding	__label__nonDir
condition interface describes condition variable may associated lock	__label__nonDir
related documentation overview tutorial example guide tool documentation please see writing event listener section java tutorial	__label__nonDir
information helper file see generated file helper file	__label__nonDir
method apply local object throw org.omg.corba.no_implement exception message locally contrained object	__label__nonDir
gridbaglayoutinfo utility class gridbaglayout layout manager	__label__nonDir
member interface reflects identifying information single member field method constructor	__label__nonDir
rmi remote method invocation	__label__nonDir
horizontal metric	__label__nonDir
provides interface diffie-hellman key defined rsa laboratory pkcs	__label__nonDir
set value designated parameter given object	__label__nonDir
signal error sort ha occurred reading writing jar file	__label__nonDir
return integer type affine transform fontrendercontext specified affinetransform.gettype	__label__nonDir
description copied class abstractborder	__label__nonDir
paintcontext maintains state particular paint operation	__label__nonDir
short ip address subnet mask broadcast address address ipv4 one	__label__nonDir
multiplexing ui used combine tableheaderuis	__label__nonDir
visit instance_init executable element calling defaultaction	__label__nonDir
check cast valid throw classcastexception	__label__nonDir
org/omg/corba/policylistholder.java generated idl-to-java compiler portable version src/share/classes/org/omg/portableserver/corba.idl saturday july pdt	__label__nonDir
return tool bar current ui	__label__nonDir
may also contain string describing exception	__label__nonDir
indicates whether object equal one	__label__nonDir
creates initially unselected toggle button specified image text	__label__nonDir
remove specified window state listener longer receives window event window	__label__nonDir
passed orbinitializer allowing register interceptor perform duty orb initializing	__label__nonDir
may also contain string describing exception	__label__nonDir
creates toolkit implementation menubar using specified peer interface	__label__nonDir
org/omg/corba/unknownuserexceptionholder.java generated idl-to-java compiler portable version corba.idl thursday august pm pdt	__label__nonDir
compatibility decomposition	__label__nonDir
defines api obtain dom document instance xml document	__label__nonDir
return raw glyph type code	__label__nonDir
visit float primitive type calling defaultaction	__label__nonDir
creates new instance multiple master font based detailed metric information	__label__nonDir
acquires exclusive mode aborting interrupted	__label__nonDir
return thickness strike-through line	__label__nonDir
management interface buffer pool example pool direct mapped buffer	__label__nonDir
notifies listener registered rowset object entire content changed	__label__nonDir
focus traversal done response component focus traversal key using container focustraversalpolicy	__label__nonDir
much depth offset properly calculate x location	__label__nonDir
atomically increment one current value field given object managed updater	__label__nonDir
thrown indicate http request need retried retried automatically due streaming mode enabled	__label__nonDir
description copied class component	__label__nonDir
link setlistener listener link getlistener	__label__nonDir
configuration data specifies keystores keystore domain	__label__nonDir
indicates whether designated column current row cachedrowset object ha updated	__label__nonDir
creates trayicon specified image	__label__nonDir
bound property name toggleclickcount	__label__nonDir
set current font	__label__nonDir
return array window state listener registered window	__label__nonDir
interface corresponds applet environment document containing applet applet document	__label__nonDir
class specifies set parameter used generating diffie-hellman system parameter use diffie-hellman key agreement	__label__nonDir
return column index dropped item placed table	__label__nonDir
interface supplied orb servant invocation time allows servant later retrieve outputstream returning invocation result	__label__nonDir
creates new instance jdbcrowset	__label__nonDir
parameter class xml digital signature	__label__nonDir
return editor used paint edit selected item jcombobox field	__label__nonDir
package generated iop codec idl interface definition	__label__nonDir
return window background color current theme	__label__nonDir
return renderer used display selected item jcombobox field	__label__nonDir
path searched bootstrap class loader platform specific mechanism locating class failed	__label__nonDir
alias iso_c2	__label__nonDir
return extended key code event	__label__nonDir
visit type element dispatching visit method specific kind type annotation_type class enum interface	__label__nonDir
return index specified component	__label__nonDir
default srgb space	__label__nonDir
return boolean whether text fractional metric mode used fontrendercontext	__label__nonDir
return menu foreground color current theme	__label__nonDir
name action send notification content field accepted	__label__nonDir
type common superinterface type java programming language	__label__nonDir
abstract class implementing imageinputstream interface	__label__nonDir
return shape whose interior corresponds visual representation glyphvector	__label__nonDir
implement characteriterator.first string	__label__nonDir
generated annotation used mark source code ha generated	__label__nonDir
alias iso_c5	__label__nonDir
exception indicates persistent storage failure example failure establish database connection corruption database	__label__nonDir
construct mousewheelevent object specified source component type modifier coordinate scroll type scroll amount wheel rotation	__label__nonDir
protected field implementation specific	__label__nonDir
encapsulates reason policy may invalid	__label__nonDir
mutablecallsite callsite whose target variable behaves like ordinary field	__label__nonDir
provides api server side data source access processing javatm programming language	__label__nonDir
insert specified element end deque	__label__nonDir
org/omg/corba/longseqhelper.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00 class definition ha modified conform following omg specification orb core defined corba formal/99-10-07 idl/java language mapping defined ptc/00-01-08	__label__nonDir
query specified temporal object	__label__nonDir
set designated parameter given short java programming language	__label__nonDir
provides user-defined exception badkind bound thrown method class typecode	__label__nonDir
description copied interface annotatedelement	__label__nonDir
table abbreviated stream often specified first writing abbreviated stream containing table application table fixed ahead time	__label__nonDir
information holder file see generated file holder file	__label__nonDir
return estimate number byte read skipped current underlying input stream without blocking next invocation method current underlying input stream	__label__nonDir
construct group descriptor us system default group implementation code location	__label__nonDir
constructor concrete subclass call us argument default value	__label__nonDir
first number range id used window event	__label__nonDir
description copied class abstractborder	__label__nonDir
helper wrongtransaction	__label__nonDir
grouplayout.sequentialgroup hgroup layout.createsequentialgroup sequential group turn contains two parallel group	__label__nonDir
org/omg/portableinterceptor/unknown.java	__label__nonDir
indicates filer detected attempt open file would violate guarantee provided filer	__label__nonDir
helper identifier	__label__nonDir
info.add_client_request_interceptor interceptor void post_init orbinitinfo info service doe need two init point	__label__nonDir
class also provide number method converting among primitive value well supporting standard method equal hashcode	__label__nonDir
set maximum number row jcombobox display	__label__nonDir
set designated parameter reader object	__label__nonDir
see typeelement distinction	__label__nonDir
visit constructor executable element calling defaultaction	__label__nonDir
multiplexing ui used combine colorchooseruis	__label__nonDir
creates new atomicreferencearray length element copied given array	__label__nonDir
return maximum number color toolkit support custom cursor palette	__label__nonDir
org/omg/iop/codecfactorypackage/unknownencoding.java	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
provides class interface general printing api	__label__nonDir
multiplexing ui used combine labeluis	__label__nonDir
org/omg/cosnaming/namingcontextpackage/notemptyhelper.java	__label__nonDir
cancel deletion current row notifies listener row ha changed	__label__nonDir
however indefinite amount time may elapse time-out detected thread actually executing time-out	__label__nonDir
multi-buffering useful rendering performance	__label__nonDir
constant sundanese unicode character block	__label__nonDir
class defines service provider interface spi messagedigest class provides functionality message digest algorithm md5 sha	__label__nonDir
optional interface may provided service provider object registered serviceregistry	__label__nonDir
jdk version replaced font method getlinemetrics	__label__nonDir
constant phonetic extension supplement unicode character block	__label__nonDir
mapping corba enum tagging set_override add_override indicate whether policy replace existing policy object added	__label__nonDir
class add ability set jpeg quantization huffman table using built-in jpeg reader plug-in	__label__nonDir
constant lepcha unicode character block	__label__nonDir
implementation visit intersectiontype calling defaultaction	__label__nonDir
eventually set given value	__label__nonDir
handler buffer request circular buffer memory	__label__nonDir
override parent method nothing	__label__nonDir
argument memory-management hint orb doe imply actual length list	__label__nonDir
description copied class basicradiobuttonui	__label__nonDir
mouse dragged event	__label__nonDir
implementation	__label__nonDir
update linebreakmeasurer single character inserted text set current position beginning paragraph	__label__nonDir
retrieves syncprovider implementation cachedrowset object	__label__nonDir
constant latin-1 supplement unicode character block	__label__nonDir
class implement menu dynamically popped specified position within component	__label__nonDir
password-based implementation protectionparameter	__label__nonDir
creates new togglebutton model	__label__nonDir
weight glyph	__label__nonDir
set pressed state toggle button	__label__nonDir
scanning visitor program element default behavior appropriate release_7 source version	__label__nonDir
store x origin component return value rv return rv	__label__nonDir
cancel current editing session	__label__nonDir
creates opaque srgb color specified red green blue value range	__label__nonDir
aligns origin graphic hanging baseline line	__label__nonDir
request information accessible client-side request interceptor	__label__nonDir
multiplexing ui used combine scrollbaruis	__label__nonDir
return shape represents region graphicattribute render	__label__nonDir
retrieves remove head queue represented deque word first element deque	__label__nonDir
support reporting bound property change integer property	__label__nonDir
offsettime store time offset utc without date	__label__nonDir
set designated parameter given java float value	__label__nonDir
constant identifying exponent symbol field	__label__nonDir
modifiable list containing namedvalue object	__label__nonDir
creates new map mapping given map	__label__nonDir
last number range id used window event	__label__nonDir
class provides functionality key agreement key exchange protocol	__label__nonDir
helper definitionkind	__label__nonDir
constructor concrete subclass call	__label__nonDir
creates return updater object given field	__label__nonDir
set given number maximum number second driver wait query execute	__label__nonDir
class defines service provider interface spi keygenerator class	__label__nonDir
creates return paintcontext used generate tiled image pattern	__label__nonDir
support encryption includes symmetric asymmetric block stream cipher	__label__nonDir
cell used draw node	__label__nonDir
package specification agent deployed jar file	__label__nonDir
add specified popup menu component	__label__nonDir
desktop class allows java application launch associated application registered native desktop handle uri file	__label__nonDir
remove last occurrence specified element deque	__label__nonDir
helper idltype	__label__nonDir
property remember whether directory currently selected ui	__label__nonDir
url xml schema definition file defines xml tag valid value webrowset implementation	__label__nonDir
control whether field javabean property serialized default	__label__nonDir
return contextual shaper provided unicode range	__label__nonDir
helper repositoryid	__label__nonDir
see component detailed description property awt component share	__label__nonDir
creates new card layout gap size zero	__label__nonDir
contains rmi-iiop stub remote type occur java.rmi package	__label__nonDir
description copied class abstractborder	__label__nonDir
constant f2 function key	__label__nonDir
constant lycian unicode character block	__label__nonDir
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param pair the pair to copy, must not be null	__label__NotNullDirective
 @exception IllegalArgumentException if listener is null	__label__NotNullDirective
 @throws IllegalArgumentException if bag is null	__label__NotNullDirective
 @param lock the lock object to use, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the buffer is null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @param lock the lock object to use, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if bag is null	__label__NotNullDirective
 @throws IllegalArgumentException if list is null	__label__NotNullDirective
 @throws IllegalArgumentException if list is null	__label__NotNullDirective
 @param iterator the iterator to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map is null	__label__NotNullDirective
 @throws NullPointerException if the entry is null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @throws NullPointerException If str is null	__label__NotNullDirective
 @param predicate the predicate to use as a filter, not null	__label__NotNullDirective
 @throws IllegalArgumentException if any predicate in the array is null	__label__NotNullDirective
 If s is null, then a NullPointerException is thrown.	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param buffer the buffer to make unmodifiable, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param collection the collection to add to, must not be null	__label__NotNullDirective
 @param predicate the predicate used to evaluate when the loop terminates, not null	__label__NotNullDirective
 @param closure the closure the execute, not null	__label__NotNullDirective
 @throws NullPointerException if either parameter is null	__label__NotNullDirective
 @throws NullPointerException (optional) if the map limits the values to non-null and null was specified	__label__NotNullDirective
 @throws NullPointerException if the key or value is null and null is invalid	__label__NotNullDirective
 @throws NullPointerException if the enumeration parameter is null.	__label__NotNullDirective
 @param bag the bag to synchronize, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if bag is null	__label__NotNullDirective
 @throws IllegalArgumentException if buffer is null	__label__NotNullDirective
 @throws IllegalArgumentException if the map is null	__label__NotNullDirective
 @throws IllegalArgumentException if the Map or Transformer is null	__label__NotNullDirective
 @param map the map to make lazy, must not be null	__label__NotNullDirective
 @param bag the sorted bag to predicate, must not be null	__label__NotNullDirective
 @param set the set to predicate, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param map the map to make unmodifiable, must not be null	__label__NotNullDirective
 @param set the set to synchronize, must not be null	__label__NotNullDirective
 @param buffer the buffer to make bounded, must not be null	__label__NotNullDirective
 @param map the map to predicate, must not be null	__label__NotNullDirective
 @param map the map to predicate, must not be null	__label__NotNullDirective
 @param closures matching array of closures, not cloned, no nulls	__label__NotNullDirective
 Copies all of the keys and values from the specified map to this map. Each key must be non-null and a MultiKey object.	__label__NotNullDirective
 @throws NullPointerException if array is null	__label__NotNullDirective
 @throws NullPointerException if name is null.	__label__NotNullDirective
 @throws NullPointerException if the key is null and this map does not not permit null keys (optional).	__label__NotNullDirective
 This method requires that none of its arguments is null.	__label__NotNullDirective
 @throws NullPointerException If the format is null	__label__NotNullDirective
 @param readMethodName May be null if the property is write-only	__label__NullSemanticsDirective
 the IContentProposalProvider used to obtain content proposals for this control, or null if no content proposal is available	__label__NullSemanticsDirective
 null means drop catalog name from the selection criteria	__label__NullSemanticsDirective
 If the list is null, all available attribute information should be made accessible.	__label__NullSemanticsDirective
 @param dir the working directory of the subprocess, or null if the subprocess should inherit the working directory of the current process.	__label__NullSemanticsDirective
 @param encoding The name of a supported character encoding. May be null, to indicate the default platform encoding.	__label__NullSemanticsDirective
 @param root the root object, null will result in an empty iterator	__label__NullSemanticsDirective
 @param args the arguments to pass to the constructor, can be null	__label__NullSemanticsDirective
 A null value indicates that the elements' {@linkplain Comparable natural ordering} should be used.	__label__NullSemanticsDirective
 @param coll the collection to check, may be null	__label__NullSemanticsDirective
 This parameter may be null if there are no inherited ProtectionDomains.	__label__NullSemanticsDirective
 @param initialCapacity the initial capacity, must be a power of two @param loadFactor the load factor, must be > 0.0f and generally < 1.0f	__label__NumberRangeDirective
 The parameter { n} must be in the range 0 through 999999999, inclusive.	__label__NumberRangeDirective
 The backlog argument must be a positive value greater than 0.	__label__NumberRangeDirective
 The tc must be in the range 0 <= tc <= 255 or an IllegalArgumentException will be thrown.	__label__NumberRangeDirective
 (as of 3.6 a negative argument will be set to 0)	__label__NumberRangeDirective
 @param size the size to which to set the send buffer size. This value must be greater than 0.	__label__NumberRangeDirective
 This value should always be nonnegative and not larger than the value of count.	__label__NumberRangeDirective
 @param autoGeneratedKeys a flag indicating whether auto-generated keys should be returned; one of Statement.RETURN_GENERATED_KEYS or Statement.NO_GENERATED_KEYS	__label__NumberRangeDirective
 To specify BC year numbers, 1 - year number must be given.	__label__NumberRangeDirective
 @param current one of the following Statement constants indicating what should happen to current ResultSet objects obtained using the method getResultSet: Statement.CLOSE_CURRENT_RESULT, Statement.KEEP_CURRENT_RESULT, or Statement.CLOSE_ALL_RESULTS	__label__NumberRangeDirective
 @param scale the desired number of digits to the right of the decimal point. It must be greater than or equal to zero	__label__NumberRangeDirective
 @param keyType the type of reference to use for keys; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param valueType the type of reference to use for values; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param index the index of the color, must be >= 0	__label__NumberRangeDirective
 @param filterStyle a constant indicating how keystrokes received in the proposal popup affect filtering of the proposals shown. FILTER_NONE specifies that no automatic filtering of the content proposal list will occur as keys are typed in the popup. FILTER_CHARACTER specifies that the content of the popup will be filtered by the most recently typed character. FILTER_CUMULATIVE is deprecated and no longer recommended. It specifies that the content of the popup will be filtered by a string containing all the characters typed since the popup has been open.	__label__NumberRangeDirective
 The valid message types are one of NONE, INFORMATION,WARNING, or ERROR.	__label__NumberRangeDirective
 This sequence of characters must represent a positive value or a {@link NumberFormatException} will be thrown.	__label__StringFormatDirective
 The prefix string to be used in generating the file's name; must be at least three characters long	__label__StringFormatDirective
 With Version 0 cookies, values should not contain white space, brackets, parentheses, equals signs, commas, double quotes, slashes, question marks, at signs, colons, and semicolons. Empty values may not behave the same way on all browsers.	__label__StringFormatDirective
 Strings starting with "java." are reserved for future extensions and must not be used by application-defined formats.	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 The file should contain a list of fully-qualified concrete provider class names, one per line.	__label__StringFormatDirective
 To be portable, applications must give the SQL type code and the fully-qualified SQL type name when specifying a NULL user-defined or REF parameter. In the case of a user-defined type the name is the type name of the parameter itself.	__label__StringFormatDirective
 The XMLFormatter can be used with arbitrary character encodings, but it is recommended that it normally be used with UTF-8.	__label__StringFormatDirective
 With lenient interpretation, a date such as "February 942, 1996" will be treated as being equivalent to the 941st day after February 1, 1996. With strict (non-lenient) interpretation, such dates will cause an exception to be thrown.	__label__StringFormatDirective
 @param encodedKey the key, which is assumed to be encoded according to the X.509 standard.	__label__StringFormatDirective
 param obj must be a Number or a Date.	__label__MethodParameterTypeDirective
 All elements inserted into the set must be mutually comparable by the specified comparator: { comparator.compare(e1, e2)} must not throw a { ClassCastException} for any elements { e1} and { e2} in the set	__label__MethodParameterTypeDirective
 All elements in the list must implement the Comparable interface	__label__MethodParameterTypeDirective
 @param collectionClass the type of collections to return from the map (must contain public no-arg constructor and extend Collection)	__label__MethodParameterTypeDirective
 All elements in the array must implement the {@link Comparable} interface	__label__MethodParameterTypeDirective
 @throws ClassCastException if the specified key cannot be compared with the keys currently in the map	__label__MethodParameterTypeDirective
 The characters in the string must all be digits of the specified radix (as determined by whether {@link java.lang.Character#digit(char, int)} returns a nonnegative value), except that the first character may be an ASCII minus sign '-' ('\u002D') to indicate a negative value.	__label__MethodParameterCorrelationDirective
 aContainer must be a focus cycle root of aComponent or a focus traversal policy provider	__label__MethodParameterCorrelationDirective
 @param b the bytes that make up the class data. The bytes in positions off through off+len-1 should have the format of a valid class file as defined by the Java Virtual Machine Specification.	__label__MethodParameterCorrelationDirective
 If the JDBC type expected to be returned to this output parameter is specific to this particular database, sqlType should be java.sql.Types.OTHER.	__label__MethodParameterCorrelationDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__MethodParameterCorrelationDirective
 If the given key is of type java.security.PrivateKey, it must be accompanied by a certificate chain certifying the corresponding public key.	__label__MethodParameterCorrelationDirective
 The data is assumed to be in the specified encoding.	__label__MethodParameterCorrelationDirective
 If it is critical to obtain every active thread in this thread group and its subgroups, the caller should verify that the returned int value is strictly less than the length of list.	__label__Post-CallDirective
 The returned parameter object must be initialized via a call to init, using an appropriate parameter specification or parameter encoding.	__label__Post-CallDirective
 {@link Color#dispose()} must never been called directly on the returned color.	__label__Post-CallDirective
 Unlike the otherwise equivalent newScheduledThreadPool(1, threadFactory) the returned executor is guaranteed not to be reconfigurable to use additional threads.	__label__ReturnValueDirective
 @return The key sequence; never null.	__label__ReturnValueDirective
 @return The key sequence representation; never null.	__label__ReturnValueDirective
 @return 1 before EOF and 0 after EOF.	__label__ReturnValueDirective
 @return The raw scheme-specific part of this URI (never null)	__label__ReturnValueDirective
 @return an instance of IKeyFormatter appropriate for the current instance; never null.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result.	__label__ReturnValueDirective
 Override to only return true when there is a value transformer.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result.	__label__ReturnValueDirective
 If the return type is a parameterized type, the Type object returned must accurately reflect the actual type parameters used in the source code.	__label__ReturnValueDirective
 If a formal parameter type is a parameterized type, the Type object returned for it must accurately reflect the actual type parameters used in the source code.	__label__ReturnValueDirective
 The specified date must be equal to or later than the value of the thisUpdate component of the X509CRL and earlier than the value of the nextUpdate component.	__label__ReturnValueDirective
 The key must have been associated with the alias by a call to setKeyEntry, or by a call to setEntry with a PrivateKeyEntry or SecretKeyEntry.	__label__ReturnValueDirective
 @return a set of permissions granted to the specified ProtectionDomain. If this operation is supported, the returned set of permissions must be a new mutable instance and it must support heterogeneous Permission types	__label__ReturnValueDirective
 An implementation of this method must either return a class with the given name or throw an exception.	__label__ReturnValueDirective
 Implementers have to ensure that {@link ITextHoverExtension#getHoverControlCreator()} returns {@link IInformationControl}s that implement {@link IInformationControlExtension2} and whose {@link IInformationControlExtension2#setInput(Object)} can handle the information objects returned by this method.	__label__ReturnValueDirective
 The exact meaning of the three levels will vary between subsystems, but in general, FINEST should be used for the most voluminous detailed output, FINER for somewhat less detailed output, and FINE for the lowest volume (and most important) messages.	__label__ReturnValueDirective
 Submaps of any { NavigableMap} must implement the { NavigableMap} interface.	__label__ReturnValueDirective
 If no symbol can be determined, null should be returned.	__label__ReturnValueDirective
 If daylight is true, the method should return a name appropriate for daylight saving time even if the specified time zone has not observed daylight saving time in the past.	__label__ReturnValueDirective
 Implementations must return an OrderedBidiMap instance, usually by forwarding to inverseOrderedBidiMap().	__label__ReturnValueDirective
 Note that a new InputStream object must be returned each time this method is called, and the stream must be positioned at the beginning of the data.	__label__ReturnValueDirective
 The triggers can be anything, but above all it must be hashable.	__label__ReturnValueDirective
 Returns the least element in this set strictly greater than the given element, or { null} if there is no such element.	__label__ReturnValueDirective
 Get the designated column's specified column size. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. 0 is returned for data types where the column size is not applicable.	__label__ReturnValueDirective
 The PRECISION column represents the specified column size for the given parameter or column. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable	__label__ReturnValueDirective
 Clients should not call this method directly, unless they have removed this contribution item from the containing IContributionManager before the contribution lifecycle has ended.	__label__MethodCallVisibilityDirective
 Note: Using this method (as well as the Activatable constructors that both register and export an activatable remote object) is strongly discouraged because the actions of registering and exporting the remote object are not guaranteed to be atomic.	__label__MethodCallVisibilityDirective
 Note: Using the Activatable constructors that both register and export an activatable remote object is strongly discouraged because the actions of registering and exporting the remote object are not guaranteed to be atomic.	__label__MethodCallVisibilityDirective
 This constructor is used for serialization only and should not be used by subclasses.	__label__MethodCallVisibilityDirective
 Denigrated, replaced by {@linkplain #getIssuerX500Principal()}. This method returns the issuer as an implementation specific Principal object, which should not be relied upon by portable code.	__label__MethodCallVisibilityDirective
 Applications are discouraged from calling this method since this operation may not be supported by all policy implementations. Applications should rely on the implies method to perform policy checks.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL TIME values do not have a date component.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 SetUtils should not normally be instantiated.	__label__MethodCallVisibilityDirective
 Note, that although PreferenceChangeEvent inherits Serializable interface from EventObject, it is not intended to be Serializable.	__label__MethodCallVisibilityDirective
 This interface, used only for custom mapping, is used by the driver behind the scenes, and a programmer never directly invokes SQLInput methods.	__label__MethodCallVisibilityDirective
 Internal method which returns a string representation of this selection suitable for debug purposes only.	__label__MethodCallVisibilityDirective
 The output stream for writing the attributes of a user-defined type back to the database. This interface, used only for custom mapping, is used by the driver, and its methods are never directly invoked by a programmer.	__label__MethodCallVisibilityDirective
 Clients may neither instantiate nor extend this class.	__label__MethodCallVisibilityDirective
 It should never be accessed by application code.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 This class may be used as is	__label__MethodCallVisibilityDirective
 Clients may call this framework method	__label__MethodCallVisibilityDirective
 It is generally true of all the reading routines in this class that if end-of-file is reached before the desired number of bytes has been read, an EOFException (which is a kind of IOException) is thrown.	__label__ExceptionRaisingDirective
 @exception IOException if an I/O error occurs.	__label__ExceptionRaisingDirective
 @exception SQLException if the parameterIndex is not valid; if a database access error occurs or this method is called on a closed CallableStatement	__label__ExceptionRaisingDirective
 @throws SQLException if a database access error occurs	__label__ExceptionRaisingDirective
 @exception SocketException if there is an error in the underlying protocol, such as a TCP error.	__label__ExceptionRaisingDirective
 @exception IOException if an I/O error occurs	__label__ExceptionRaisingDirective
 @throws IllegalFormatException If a format string contains an illegal syntax, a format specifier that is incompatible with the given arguments, insufficient arguments given the format string, or other illegal conditions. For specification of all possible formatting errors, see the Details section of the Formatter class specification.	__label__ExceptionRaisingDirective
 @throws IllegalFormatException If a format string contains an illegal syntax, a format specifier that is incompatible with the given arguments, insufficient arguments given the format string, or other illegal conditions. For specification of all possible formatting errors, see the Details section of the formatter class specification.	__label__ExceptionRaisingDirective
 @throws SecurityException If a required system property value cannot be accessed.	__label__ExceptionRaisingDirective
 @exception NoSuchFieldException if a field with the specified name is not found. @exception NullPointerException if name is null @exception SecurityException If a security manager, s, is present and any of the following conditions is met:      invocation of {@link SecurityManager#checkMemberAccess s.checkMemberAccess(this, Member.PUBLIC)} denies access to the field     the caller's class loader is not the same as or an ancestor of the class loader for the current class and invocation of {@link SecurityManager#checkPackageAccess s.checkPackageAccess()} denies access to the package of this class	__label__ExceptionRaisingDirective
 all such elements must be mutually comparable: { e1.compareTo(e2)} must not throw a { ClassCastException} for any elements { e1} and { e2} in the set.	__label__ExceptionRaisingDirective
 Checked exception types thrown by underlying scripting implementations must be wrapped in instances of ScriptException.	__label__ExceptionRaisingDirective
 @throws org.eclipse.swt.SWTException in these cases:      * {@link org.eclipse.swt.SWT#ERROR_WIDGET_DISPOSED} - if the receiver has been disposed     * {@link org.eclipse.swt.SWT#ERROR_THREAD_INVALID_ACCESS} - if not called from the thread that created the receiver	__label__ExceptionRaisingDirective
 @throws Throwable the exception to throw from the method invocation on the proxy instance. The exception's type must be assignable either to any of the exception types declared in the throws clause of the interface method or to the unchecked exception types java.lang.RuntimeException or java.lang.Error.	__label__ExceptionRaisingDirective
 Some provider implementations may encounter unrecoverable internal errors during their operation, for example a failure to communicate with a security token. A {@link ProviderException} should be used to indicate such errors.	__label__ExceptionRaisingDirective
 @throws InvalidPreferencesFormatException Data on input stream does not constitute a valid XML document with the mandated document type.	__label__ExceptionRaisingDirective
 @throws IllegalStateException implementations may, but are not required to, throw this exception if the entry has been removed from the backing map.	__label__ExceptionRaisingDirective
 @exception SQLException if the columnLabel is not valid; if a database access error occurs; the result set concurrency is CONCUR_READ_ONLY or this method is called on a closed result set @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an IllegalStateException if no space is currently available	__label__ExceptionRaisingDirective
 There are several restrictions on the parameters that may be passed to Proxy.getProxyClass: * All of the Class objects in the interfaces array must represent interfaces, not classes or primitive types. * No two elements in the interfaces array may refer to identical Class objects. * All of the interface types must be visible by name through the specified class loader. In other words, for class loader cl and every interface i, the following expression must be true: Class.forName(i.getName(), false, cl) == i * All non-public interfaces must be in the same package; otherwise, it would not be possible for the proxy class to implement all of the interfaces, regardless of what package it is defined in. * For any set of member methods of the specified interfaces that have the same signature: o If the return type of any of the methods is a primitive type or void, then all of the methods must have that same return type. o Otherwise, one of the methods must have a return type that is assignable to all of the return types of the rest of the methods.	__label__MiscellaneousMethodCallDirective
 @param actions currently unused and must be set to null	__label__MiscellaneousMethodCallDirective
 @param map the map to copy, must be size 1	__label__MiscellaneousMethodCallDirective
 The argument must be a two-dimensional array of strings of size n by m, where m is at least 5. Each of the n rows is an entry containing the localized names for a single TimeZone.	__label__MiscellaneousMethodCallDirective
 Which commands are valid is system-dependent, but at the very least the command must be a non-empty list of non-null strings	__label__MiscellaneousMethodCallDirective
 The range must be sorted (as by the {@link #sort(float[], int, int)} method) prior to making this call.	__label__MiscellaneousMethodCallDirective
 @param foreignSchema a schema name; must match the schema name as it is stored in the database;	__label__MiscellaneousMethodCallDirective
 The map must not be null and must be empty.	__label__MiscellaneousMethodCallDirective
 @param table a table name; must match the table name as it is stored in this database	__label__MiscellaneousMethodCallDirective
 @param b The bytes that make up the class data. The bytes in positions off through off+len-1 should have the format of a valid class file as defined by the Java Virtual Machine Specification.	__label__MiscellaneousMethodCallDirective
 @param caller the principal invoking this method. It must be an owner of this ACL.	__label__MiscellaneousMethodCallDirective
 @param hyperlinkDetectors the array of hyperlink detectors, must not be empty	__label__MiscellaneousMethodCallDirective
 This class is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be subclassed outside of the JFace viewers framework.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 This interface is not intended to be implemented by clients	__label__ExtensibleClassIdentificationDirective
 This interface should never be directly implemented.	__label__ExtensibleClassIdentificationDirective
 Because reference objects are implemented in close cooperation with the garbage collector, this class may not be subclassed directly.	__label__ExtensibleClassIdentificationDirective
 Clients may implement or extend this class.	__label__ExtensibleClassIdentificationDirective
 it may also be subclassed.	__label__ExtensibleClassIdentificationDirective
 This concrete dialog class can be further subclassed as required.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 The interface can be implemented by clients. By default, clients use {@link QuickAssistAssistant} as the standard implementer of this interface.	__label__ExtensibleClassIdentificationDirective
 This interface must be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 This interface must be implemented by clients that want to let one of their model elements be part of a reconcile step result.	__label__ExtensibleClassIdentificationDirective
 Clients can implement that interface and its extension interfaces.	__label__ExtensibleClassIdentificationDirective
 Clients must implement this interface in order to equip an information control manager accordingly.	__label__ExtensibleClassIdentificationDirective
 Key-value entries are stored in instances of the HashEntry class, which can be overridden and replaced. The iterators can similarly be replaced, without the need to replace the KeySet, EntrySet and Values view classes.	__label__ExtensibleClassIdentificationDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 A stream protocol handler for a protocol that has a different syntax must override this routine.	__label__MethodOverridingDirective
 All CertStore implementations must include a class (the SPI class) that extends this class (CertStoreSpi)	__label__MethodOverridingDirective
 They should also extend {@link #computeTrim()} if they create a content area with additional trim (e.g. scrollbars)	__label__MethodOverridingDirective
 configureShell- extend or reimplement to set shell properties before window opens	__label__MethodOverridingDirective
 Subclasses may also extend or reimplement.	__label__MethodOverridingDirective
 extend dispose	__label__MethodOverridingDirective
 Subclasses may reimplement.	__label__MethodOverridingDirective
 setTitle - may be extended	__label__MethodOverridingDirective
 Subclasses should reimplement this method if they want to delay creating one or more of the pages lazily.	__label__MethodOverridingDirective
 Subclasses should reimplement this method if they need to perform any special cancel processing for their wizard.	__label__MethodOverridingDirective
 This method may be extended (super.close must be called).	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 The createControl framework method must be implemented by concrete subclasses.	__label__MethodOverridingDirective
 This framework method must be implemented by concrete subclasses.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 . Subclasses should override this method if they do not need information from the triggering event, or override runWithEvent(Event) if they do.	__label__MethodOverridingDirective
 This should be overridden by subclasses that add properties.	__label__MethodOverridingDirective
 Subclasses may override this method, but typically do not.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses should override this method.	__label__MethodOverridingDirective
 Subclasses must implement this method.	__label__MethodOverridingDirective
 Subclasses must implement this method to create the controls for this field editor.	__label__MethodOverridingDirective
 May be extended or replaced by subclasses.	__label__MethodOverridingDirective
 May be replaced or extended by subclasses.	__label__MethodOverridingDirective
 May be extended by subclasses.	__label__MethodOverridingDirective
 Subclasses of FilterReader should override some of these methods	__label__MethodOverridingDirective
 Subclasses that intend to support efficient single-character input should override this method.	__label__MethodOverridingDirective
 Subclasses of Thread should override this method. @see #start() @see #stop() @see #Thread(ThreadGroup, Runnable, String)	__label__MethodOverridingDirective
 To customize the text Subclasses may override the following methods      * {@link #getStyle(Event)}     * {@link #getBackgroundColor(Event)}     * {@link #getForegroundColor(Event)}     * {@link #getFont(Event)}     * {@link #getImage(Event)}     * {@link #getText(Event)}     * {@link #getBackgroundImage(Event)}	__label__MethodOverridingDirective
 Subclasses may overwrite to implement custom positioning.	__label__MethodOverridingDirective
 Implementators of {@link ColumnViewer} should overwrite this method if their widget supports reordered columns	__label__MethodOverridingDirective
 Subclasses may overwrite this to get custom behavior	__label__MethodOverridingDirective
 The network class loader subclass must define the methods {@link #findClass findClass} and loadClassData to load a class from the network.	__label__MethodOverridingDirective
 This method should be overriden by subclasses to test for equality.	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Overriding this method is generally not required; however, if overriding in a subclass, super.setContentProvider must be invoked.	__label__MethodOverridingDirective
 Subclasses should override this method to perform any additional cleanup of resources;	__label__MethodOverridingDirective
 This class and all of its methods may be overridden or extended.	__label__MethodOverridingDirective
 Override if you need a different strategy.	__label__MethodOverridingDirective
 It may be overridden if necessary.	__label__MethodOverridingDirective
 Subclasses could override to fully control removals from the map.	__label__MethodOverridingDirective
 Subclasses can override this to implement caching (override clear as well).	__label__MethodOverridingDirective
 This can be overriden in a subclass.	__label__MethodOverridingDirective
 Standard customers should not overwrite this method but {@link #setValue(Object, Object)}	__label__MethodOverridingDirective
 @nooverride This method is not intended to be re-implemented or extended by clients.	__label__MethodOverridingDirective
 Clients should not override it.	__label__MethodOverridingDirective
 Note: This method is not intended to be referenced or overridden by clients.	__label__MethodOverridingDirective
 f override this, be sure to call super.	__label__MethodExtensionDirective
 Subclasses which override this method should make sure they call super	__label__MethodExtensionDirective
 Subclasses may wish to conditionally call super with a different location	__label__MethodExtensionDirective
 extend addPages	__label__MethodExtensionDirective
 Subclasses can extend this method to add additional trim	__label__MethodExtensionDirective
 however, super.hookControl must be invoked.	__label__MethodExtensionDirective
 super.setContentProvider must be invoked.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkCreateClassLoader at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkDelete at the point the overridden method would normally throw an exception	__label__MethodExtensionDirective
 For each button a subclass contributes, it must also increase the parent's grid layout number of columns by one; that is,   ((GridLayout) parent.getLayout()).numColumns++);	__label__CallContractSubclassingDirective
 Subclasses need to call {@link #clearPositionCache()} after modifying the partitioner's positions.	__label__CallContractSubclassingDirective
 If a connection cannot be established to a proxy (PROXY or SOCKS) servers then the caller should call the proxy selector's {@link #connectFailed connectFailed} method to notify the proxy selector that the proxy server is unavailable.	__label__CallContractSubclassingDirective
 If this method is overridden, the method that overrides it should additionally check to see if the calling thread has the RuntimePermission("modifyThread") permission, and if so, return silently.	__label__CallContractSubclassingDirective
 Subclasses are required to call {@link #create()} at the end of their constructor.	__label__CallContractSubclassingDirective
 May be called from subclasses that override {@link #initialize(ColumnViewer, ViewerColumn)} but want to customize whether owner draw will be enabled.	__label__CallContractSubclassingDirective
 Implementors are responsible for ensuring that the created control can be accessed via getControl	__label__CallContractSubclassingDirective
 However, all instances representing a type variable must be equal() to each other.	__label__MethodImplementationDirective
 This map enforces the restriction that there is a 1:1 relation between keys and values, meaning that multiple keys cannot map to the same value. This is required so that "inverting" the map results in a map without duplicate keys.	__label__MethodImplementationDirective
 The general contract of flush is that calling it is an indication that, if any bytes previously written have been buffered by the implementation of the output stream, such bytes should immediately be written to their intended destination.	__label__MethodImplementationDirective
 A PKIXCertPathChecker must support reverse checking and may support forward checking.	__label__MethodImplementationDirective
 @param input the object to be transformed, should be left unchanged	__label__MethodImplementationDirective
 The retransformation must not add, remove or rename fields or methods, change the signatures of methods, or change inheritance.	__label__MethodImplementationDirective
 To help ensure portability of Java programs, the definitions of some of the numeric functions in this package require that they produce the same results as certain published algorithms. These algorithms are available from the well-known network library netlib as the package "Freely Distributable Math Library," fdlibm.	__label__MethodImplementationDirective
 Note that the ordering maintained by a sorted map (whether or not an explicit comparator is provided) must be consistent with equals if the sorted map is to correctly implement the Map interface.	__label__MethodImplementationDirective
 All general-purpose sorted map implementation classes should provide four "standard" constructors:	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if toElement cannot be compared to elements currently in the set. @throws NullPointerException if toElement is null and this set does not permit null elements	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if toKey cannot be compared to keys currently in the map.	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if { fromElement} or { toElement} cannot be compared to elements currently in the set.	__label__MethodImplementationDirective
 Note that the default uncaught exception handler should not usually defer to the thread's ThreadGroup object, as that could cause infinite recursion.	__label__MethodImplementationDirective
 The only requirement enforced by this facility is that provider classes must have a zero-argument constructor so that they can be instantiated during loading.	__label__MethodImplementationDirective
 The programmer should generally provide a void (no argument) and map constructor, as per the recommendation in the Map interface specification.	__label__MethodImplementationDirective
 In order to guarantee this property, particular algorithms are specified for the class { Random}. Java implementations must use all the algorithms shown here for the class { Random}, for the sake of absolute portability of Java code.	__label__MethodImplementationDirective
 To implement clone(), a subclass must implement the Cloneable interface and make this method public.	__label__MethodImplementationDirective
 Implementations should seek to avoid creating a new object every time this method is called. See AbstractMap.values() etc. Calling this method on the inverse map should return the original.	__label__MethodImplementationDirective
 If no such object exists, the list should be "wrapped" using the {@link Collections#synchronizedList Collections.synchronizedList} method.	__label__MethodImplementationDirective
 The ACL Entries in each ACL observe the following rules:      Each principal can have at most one positive ACL entry and one negative entry; that is, multiple positive or negative ACL entries are not allowed for any principal. Each entry specifies the set of permissions that are to be granted (if positive) or denied (if negative).      If there is no entry for a particular principal, then the principal is considered to have a null (empty) permission set.      If there is a positive entry that grants a principal a particular permission, and a negative entry that denies the principal the same permission, the result is as though the permission was never granted or denied.      Individual permissions always override permissions of the group(s) to which the individual belongs. That is, individual negative permissions (specific denial of permissions) override the groups' positive permissions. And individual positive permissions override the groups' negative permissions.	__label__MethodImplementationDirective
 Note: Support for the rowDeleted method is optional with a result set concurrency of CONCUR_READ_ONLY	__label__MethodImplementationDirective
 For a given subclass of ObjectInputStream that overrides this method, the annotateProxyClass method in the corresponding subclass of ObjectOutputStream must write any data or objects read by this method	__label__Non-localConsistencySubclassingDirective
 Subclasses wishing to perform validation should override both this method and refreshValidState.	__label__Non-localConsistencySubclassingDirective
 When reading the value of an out parameter, you must use the getXXX method whose Java type XXX corresponds to the parameter's registered SQL type.	__label__Non-localConsistencySubclassingDirective
 Implementations should seek to make this method perform equally as well as get(Object).	__label__Non-localConsistencySubclassingDirective
 Using this abstract class involves defining a concrete subclass and providing an implementation for the getImageData method.	__label__MiscellaneousSubclassingDirective
 It is subclass responsibility to specify how dirty regions are processed.	__label__MiscellaneousSubclassingDirective
 Subclasses must provide the storage and accessor methods for the additional arguments or parameters.	__label__MiscellaneousSubclassingDirective
 An activation group must be registered with the ActivationSystem before objects can be registered within that group	__label__MethodCallSequenceDirective
 When the client no longer has any references to a specific remote object, it must schedule a clean call for the object ID associated with the reference	__label__MethodCallSequenceDirective
 The value actually set in the accepted socket must be determined by calling {@link Socket#getReceiveBufferSize()} after the socket is returned by {@link #accept()}.	__label__MethodCallSequenceDirective
 f preferenceStore is set to null, getPreferenceStore will invoke doGetPreferenceStore the next time it is called	__label__MethodCallSequenceDirective
 Only listeners registered at the time this method is called are notified.	__label__MethodCallSequenceDirective
 If fork is set to false, the runnable will run in the UI thread and it is the runnable's responsibility to call Display.readAndDispatch() to ensure UI responsiveness.	__label__MethodCallSequenceDirective
 This thread group must be empty, indicating that all threads that had been in this thread group have since stopped.	__label__MethodCallSequenceDirective
 It must be connected to a piped reader, either by the receiver or the sender, before being used.	__label__MethodCallSequenceDirective
 Subclasses should check this method before loading or saving.	__label__MethodCallSequenceDirective
 The instance specific getRequestProperty method should be used after an appropriate instance of URLConnection is obtained.	__label__MethodCallSequenceDirective
 It must be {@linkplain java.io.PipedOutputStream#connect( java.io.PipedInputStream) connected} to a PipedOutputStream before being used.	__label__MethodCallSequenceDirective
 All the data in the returned stream must be read prior to getting the value of any other column.	__label__MethodCallSequenceDirective
 All streams must be closed before execute() occurs or an SQLException will be thrown.	__label__MethodCallSequenceDirective
 Once engineDigest has been called, the engine should be reset (see {@link #engineReset() engineReset}).	__label__MethodCallSequenceDirective
 This method can only be called if next() was called, but not after hasNext(), because the hasNext() call changes the base iterator.	__label__MethodCallSequenceDirective
 this method must allocate a new array even if this set is backed by an array	__label__MethodCallSequenceDirective
 In other words, this method must allocate a new array even if this collection is backed by an array	__label__MethodCallSequenceDirective
 Before obtaining an item each thread must acquire a permit from the semaphore, guaranteeing that an item is available for use.	__label__MethodCallSequenceDirective
 As of JDK 1.1, the Calendar class should be used to convert between dates and time fields and the DateFormat class should be used to format and parse date strings.	__label__MethodCallSequenceDirective
 @throws IllegalStateException if the next or previous method has not yet been called, or the remove method has already been called after the last call to next or previous.	__label__MethodCallSequenceDirective
 @throws IllegalStateException if the next method has not yet been called, or the remove method has already been called after the last call to the next method.	__label__MethodCallSequenceDirective
 If an activatable object requires restart services, use one of the ActivationDesc constructors that takes a boolean parameter, restart.	__label__MethodCallSequenceDirective
 When the data is later uncompressed with Inflater.inflate(), Inflater.getAdler() can be called in order to get the Adler-32 value of the dictionary required for decompression.	__label__MethodCallSequenceDirective
 @throws IllegalStateException If {@link #next()} or {@link #previous()} haven't been called, or if the node has been removed with {@link #remove()} or a new node added with {@link #add(Object)}.	__label__MethodCallSequenceDirective
 Returns the index of the element that would be returned by a subsequent call to {@link #next}.	__label__MethodCallSequenceDirective
 It is allowed to call this method after this hyperlink manger has been installed.	__label__MethodCallSequenceDirective
 Register an object to be validated before the graph is returned. While similar to resolveObject these validations are called after the entire graph has been reconstituted.	__label__MethodCallSequenceDirective
 It can be called at most once by an application.	__label__MethodCallSequenceDirective
 Once a node has been removed, attempting any method other than {@link #name()}, {@link #absolutePath()}, {@link #isUserNode()}, {@link #flush()} or {@link #node(String) nodeExists("")} on the corresponding Preferences instance will fail with an IllegalStateException	__label__MethodCallSequenceDirective
 Write the data and fields to the specified ObjectOutput stream, which must be the same stream that produced this PutField object.	__label__NonCall-basedStateDirective
 The current thread must own this object's monitor.	__label__NonCall-basedStateDirective
 This method should only be called by a thread that is the owner of this object's monitor.	__label__NonCall-basedStateDirective
 Note that IndexOutOfBoundsException IS returned for invalid negative indices.	__label__NonCall-basedStateDirective
 Once compare has been called, the FixedOrderComparator is locked and attempts to modify it yield an UnsupportedOperationException.	__label__NonCall-basedStateDirective
 Therefore, if the reading of one ResultSet object is interleaved with the reading of another, each must have been generated by different Statement objects.	__label__NonCall-basedStateDirective
 @throws ArithmeticException if the rounding mode is { UNNECESSARY} and the { BigDecimal} operation would require rounding.	__label__NonCall-basedStateDirective
 @exception SecurityException if a security manager exists and if the caller does not have LoggingPermission("control").	__label__NonCall-basedStateDirective
 @exception SecurityException if a security manager exists and its checkMulticast method doesn't allow the join.	__label__NonCall-basedStateDirective
 The current thread is assumed to hold the lock associated with this { Condition} when this method is called.	__label__NonCall-basedStateDirective
 Subclasses that require a different dialog area may either override this method, or call the super implementation and add controls to the created composite.	__label__AlternativeDirective
 Subclasses must implement createControl rather than overriding this method.	__label__AlternativeDirective
 Subclasses should override createCustomArea to add contents below the message.	__label__AlternativeDirective
 As SO_SNDBUF is a hint, applications that want to verify what size the buffer is should call {@link #getSendBufferSize()}.	__label__AlternativeDirective
 If arbitrary parameter type conversions are required, the method setObject should be used with a target SQL type.	__label__AlternativeDirective
 Not all databases allow for a non-typed Null to be sent to the backend. For maximum portability, the setNull or the setObject(String parameterName, Object x, int sqlType) method should be used instead of setObject(String parameterName, Object x).	__label__AlternativeDirective
 If a new Float instance is not required, this method should generally be used in preference to the constructor {@link #Float(float)}, as this method is likely to yield significantly better space and time performance by caching frequently requested values.	__label__AlternativeDirective
 Most programmers should use the {@link #toString} method in preference to this one, as the toString method may return a more user-friendly name.	__label__AlternativeDirective
 The {@link java.nio.charset.CharsetDecoder} class should be used when more control over the decoding process is required.	__label__AlternativeDirective
 If a new Boolean instance is not required, this method should generally be used in preference to the constructor {@link #Boolean(boolean)}, as this method is likely to yield significantly better space and time performance.	__label__AlternativeDirective
 In general, {@link java.lang.String#toUpperCase()} should be used to map characters to uppercase.	__label__AlternativeDirective
 Content providers for tree viewers must implement either the {@link ITreeContentProvider} interface, (as of 3.2) the {@link ILazyTreeContentProvider} interface, or (as of 3.3) the {@link ILazyTreePathContentProvider}.	__label__AlternativeDirective
 An alternative to this method is to use {@link #keySet()}.	__label__AlternativeDirective
 Note that Flat3Map is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 Note that PredicatedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 Under many circumstances, linking Iterators together in this manner is more efficient (and convenient) than reading out the contents of each Iterator into a List and creating a new Iterator.	__label__AlternativeDirective
 Because a Locale object is just an identifier for a region, no validity check is performed when you construct a Locale. If you want to see whether particular resources are available for the Locale you construct, you must query those resources.	__label__AlternativeDirective
 Implementations typically return null from a subsequant get(Object), however they may choose to return an empty collection.	__label__AlternativeDirective
 For random access data (such as an array), AbstractList should be used in preference to this class.	__label__AlternativeDirective
 If multiple threads access a tree set concurrently, and at least one of the threads modifies the set, it must be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the set. If no such object exists, the set should be "wrapped" using the {@link Collections#synchronizedSortedSet Collections.synchronizedSortedSet} method.	__label__AlternativeDirective
 The following extension interfaces exist:      {@link org.eclipse.jface.text.IInformationControlCreatorExtension} since version 3.0 introducing checks of whether existing information control can be reused and whether information control creators can replace each other.	__label__AlternativeDirective
 Programmers do not normally create ManagementPermission objects directly. Instead they are created by the security policy code based on reading the security policy file.	__label__AlternativeDirective
 Note that the current contents of the MemoryHandler buffer are not written out. That requires a "push".	__label__AlternativeDirective
 It is recommended that getFontDataArray is used instead.	__label__AlternativeDirective
 @deprecated This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.	__label__AlternativeDirective
 StringTokenizer is a legacy class that is retained for compatibility reasons although its use is discouraged in new code. It is recommended that anyone seeking this functionality use the split method of String or the java.util.regex package instead.	__label__AlternativeDirective
 This factory, whose parameter list uses the varargs feature, may be used to create an enum set initially containing an arbitrary number of elements, but it is likely to run slower than the overloadings that do not use varargs.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of updateCharacterStream which takes a length parameter.	__label__AlternativeDirective
 If a pattern is to be used multiple times, compiling it once and reusing it will be more efficient than invoking this method each time.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of updateBinaryStream which takes a length parameter.	__label__AlternativeDirective
 The style bit SWT.WRAP should be used if a larger message area is desired.	__label__AlternativeDirective
 Since 3.3, an alternative API is available, see {@link ViewerColumn#setEditingSupport(EditingSupport)} for a more flexible way of editing values in a column viewer.	__label__AlternativeDirective
 Since 3.3, an alternative API is available, see {@link ViewerColumn#setEditingSupport(EditingSupport)} for a more flexible way of editing values in a column viewer.	__label__AlternativeDirective
 Dialog does not use the following images in the registry DLG_IMG_ERROR DLG_IMG_INFO DLG_IMG_QUESTION DLG_IMG_WARNING They are now coming directly from SWT, see ImageRegistry. For backwards compatibility they are still supported, however new code should use SWT for these.	__label__AlternativeDirective
 When possible, this method checks for write permissions and other operating system restrictions and will therefore usually provide a more accurate estimate of how much new data can actually be written than {@link #getFreeSpace}.	__label__AlternativeDirective
 Since the order of format elements in a pattern string often changes during localization, it is generally better to use the {@link #setFormatsByArgumentIndex setFormatsByArgumentIndex} method, which assumes an order of formats corresponding to the order of elements in the arguments array passed to the format methods or the result array returned by the parse methods.	__label__AlternativeDirective
 @deprecated Since 3.4, the default implementation of {@link CellLabelProvider#initialize(ColumnViewer, ViewerColumn)} in this class will set up the necessary owner draw callbacks automatically. Calls to this method can be removed.	__label__AlternativeDirective
 When using a capacity-restricted queue, this method is generally preferable to {@link #add}, which can fail to insert an element only by throwing an exception.	__label__AlternativeDirective
 When using a capacity-restricted deque, it is generally preferable to use {@link #offerLast(Object) offerLast}.	__label__AlternativeDirective
 implementations must synchronized on the hierarchy lock and "children" protected field	__label__SynchronizationDirective
 In all cases, before this method can return the current thread must re-acquire the lock associated with this condition.	__label__SynchronizationDirective
 f multiple threads access a format concurrently, it must be synchronized externally.	__label__SynchronizationDirective
 This method is NOT thread-safe in any special way. You must manually synchronize on either this class or the stream as required.	__label__SynchronizationDirective
 Instances of ComparatorChain are not synchronized. The class is not thread-safe at construction time, but it is thread-safe to perform multiple comparisons after all the setup operations are complete.	__label__SynchronizationDirective
 The cursor enables iteration and list changes to occur in any order without invalidating the iterator (from one thread).	__label__SynchronizationDirective
 You must manually synchronize on the returned buffer's iterator to avoid non-deterministic behavior:   Map m = MapUtils.synchronizedSortedMap(myMap);  Set s = m.keySet();  // outside synchronized block  synchronized (m) {  // synchronized on MAP!      Iterator i = s.iterator();      while (i.hasNext()) {          process (i.next());      }  }	__label__SynchronizationDirective
 It is recommended that to avoid confusion you never use { Lock} instances in this way, except within their own implementation.	__label__SynchronizationDirective
 It is imperative that the user manually synchronize on the returned sorted map when iterating over any of its collection views, or the collections views of any of its subMap, headMap or tailMap views.    SortedMap m = Collections.synchronizedSortedMap(new TreeMap());       ...   Set s = m.keySet();  // Needn't be in synchronized block       ...   synchronized(m) {  // Synchronizing on m, not s!       Iterator i = s.iterator(); // Must be in synchronized block       while (i.hasNext())           foo(i.next());   }	__label__SynchronizationDirective
 All CertPath objects must be thread-safe. That is, multiple threads may concurrently invoke the methods defined in this class on a single CertPath object (or more than one) with no ill effects.	__label__SynchronizationDirective
 Threads that need to access a single CertPathValidatorSpi instance concurrently should synchronize amongst themselves and provide the necessary locking before calling the wrapping CertPathValidator object.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 Note that PredicatedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. T	__label__SynchronizationDirective
 Generally, semaphores used to control resource access should be initialized as fair, to ensure that no thread is starved out from accessing a resource.	__label__SynchronizationDirective
 Note that passing in an invalid id results in unspecified behavior.	__label__SynchronizationDirective
 A ResourceBundle.Control instance must be thread-safe if it's simultaneously used by multiple threads.	__label__SynchronizationDirective
 This method should query if the state of the object permits it to be acquired in the exclusive mode, and if so to acquire it.	__label__SynchronizationDirective
 An implementation is required to clearly document the semantics and guarantees provided by each of the waiting methods	__label__MiscellaneousDirective
 For indeterminate progress, we don't have to know the total amount of work in advance and no worked method needs to be called.	__label__MiscellaneousDirective
 The instanceof operator should be used to determine the specific kind of object returned.	__label__MiscellaneousDirective
 As a matter of style, programmers should always use this annotation on the most deeply nested element where it is effective.	__label__MiscellaneousDirective
 Any restrictions and the exception type must be documented by that { Lock} implementation.	__label__MiscellaneousDirective
 As in the one argument version, interrupts and spurious wakeups are possible, and this method should always be used in a loop:       synchronized (obj) {          while (<condition does not hold>)              obj.wait(timeout, nanos);          ... // Perform action appropriate to condition      }	__label__MiscellaneousDirective
 The StringBuilder class should generally be used in preference to this one, as it supports all of the same operations but it is faster, as it performs no synchronization.	__label__MiscellaneousDirective
 he class remained source and test compatible, so if you can recompile all your classes and dependencies everything is OK.	__label__MiscellaneousDirective
 Implementations should allow a value to be looked up from a key and a key to be looked up from a value with equal performance.	__label__MiscellaneousDirective
 The {@link #atomic(Runnable)} method is provided to allow atomic iterations and bulk operations; however, overuse of {@link #atomic(Runnable) atomic} will basically result in a map that's slower than an ordinary synchronized {@link java.util.HashMap}.	__label__MiscellaneousDirective
 The add methods are affected by this class. Thus objects must be removed or searched for using their transformed form. For example, if the transformation converts Strings to Integers, you must use the Integer form to remove objects.	__label__MiscellaneousDirective
 Note that the amount of memory required to hold an object of any given type may be implementation-dependent.	__label__MiscellaneousDirective
 Note that this implementation requires linear time in the size of the map;	__label__MiscellaneousDirective
 When a TCP connection is closed the connection may remain in a timeout state for a period of time after the connection is closed (typically known as the TIME_WAIT state or 2MSL wait state). For applications using a well known socket address or port it may not be possible to bind a socket to the required SocketAddress if there is a connection in the timeout state involving the socket address or port.	__label__MiscellaneousDirective
 Sets a new selection for this viewer and optionally makes it visible. The TableViewer implementation of this method is inefficient for the ILazyContentProvider as lookup is done by indices rather than elements and may require population of the entire table in worse case.  Use Table#setSelection(int[] indices) and Table#showSelection() if you wish to set selection more efficiently when using a ILazyContentProvider.	__label__MiscellaneousDirective
 Due to the inherently imprecise nature of the result, it is recommended that this method only be used for informational purposes.	__label__MiscellaneousDirective
return group code location	__label__nonDir
notifies registered listener rowset object given rowsetevent object ha populated number additional row	__label__nonDir
addition standard arithmetic operation biginteger provides modular arithmetic gcd calculation primality testing prime generation bit manipulation miscellaneous operation	__label__nonDir
information stub file see generated file stub	__label__nonDir
servant manager supply poa ability activate object demand poa receives request targeted inactive object	__label__nonDir
class forkjoinpool provides executor primarily designed processing instance forkjointask subclass	__label__nonDir
ease-of-use constant getalignmenty	__label__nonDir
information holder file see generated file holder file	__label__nonDir
org/omg/iop/taggedprofilehelper.java	__label__nonDir
constant microsoft window context menu key	__label__nonDir
holder boolean	__label__nonDir
release socket option defined used network channel channel package	__label__nonDir
check duration equal specified duration	__label__nonDir
represents formal type parameter generic class interface method constructor element	__label__nonDir
contains class interface used jfilechooser component	__label__nonDir
process event window	__label__nonDir
language model follows mirror-based design see gilad bracha david ungar	__label__nonDir
package includes small standardized extensible framework well class provide useful functionality otherwise tedious difficult implement	__label__nonDir
return true jcombobox editable	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
framework allows client framework locate run compiler program	__label__nonDir
namingcontextext extension namingcontext contains set name binding name unique part interoperable naming service	__label__nonDir
core responsibility focustraversalpolicy provide algorithm determining next previous component focus traversing forward backward ui	__label__nonDir
bigdecimal give user complete control rounding behavior allowing user choose comprehensive set eight rounding mode	__label__nonDir
helper policytype	__label__nonDir
return string representation jtextpane	__label__nonDir
determines component one immediate subcomponents contains x location return containing component	__label__nonDir
return resultset object containing original value current row cachedrowset object	__label__nonDir
holder class java.io.serializable used store inout parameter idl method	__label__nonDir
mbean whose management interface determined reflection java interface	__label__nonDir
determines preferred size container argument using card layout	__label__nonDir
represents exception thrown mbean server performing operation mbeans	__label__nonDir
package also support secure stream sealed object	__label__nonDir
return collection containing thread may waiting acquire shared mode	__label__nonDir
cachedrowset object syncprovider contains connection object resultset jdbc property passed constructor	__label__nonDir
information holder file see generated file holder file	__label__nonDir
call revalidate come within textfield handled validating textfield unless textfield contained within jviewport case return false	__label__nonDir
used avoid throwing exception	__label__nonDir
package specification java™ cryptography architecture jca reference guide rfc internet x.509 public key infrastructure certificate certificate revocation list crl profile rfc x.509 internet public key infrastructure online certificate status protocol ocsp java™ cryptography architecture standard algorithm name documentation related documentation information x.509 certificate crls please see http www.ietf.org/rfc/rfc5280.txt java™ pki programmer guide x.509 certificate certificate revocation list crls	__label__nonDir
description copied class number	__label__nonDir
standard posture upright	__label__nonDir
constructor concrete subclass call us null default value	__label__nonDir
contains collection framework legacy collection class event model date time facility internationalization miscellaneous utility class string tokenizer random-number generator bit array	__label__nonDir
array service context forming service context list	__label__nonDir
type-safe enumeration possible dialog display user	__label__nonDir
determines offset start given line	__label__nonDir
example might query check date day february leap year calculates number day next birthday	__label__nonDir
dom-specific class javax.xml.crypto package	__label__nonDir
paint renderer part row	__label__nonDir
constant old persian unicode character block	__label__nonDir
information holder file see generated file holder file	__label__nonDir
set attribute control output printed page	__label__nonDir
org/omg/corba/policytypehelper.java generated idl-to-java compiler portable version src/share/classes/org/omg/portableserver/corba.idl saturday july pdt	__label__nonDir
return advance imagegraphicattribute	__label__nonDir
attribute key swapping foreground background paint	__label__nonDir
store date-time like	__label__nonDir
visit double value annotation	__label__nonDir
creates new atomicreference given initial value	__label__nonDir
description copied class basicscrollbarui	__label__nonDir
store date like	__label__nonDir
skip character	__label__nonDir
signal error sort ha occurred reading writing jar file	__label__nonDir
creates jcombobox contains element specified vector	__label__nonDir
return white color current theme	__label__nonDir
visitor program element based kind default behavior appropriate release_7 source version	__label__nonDir
draw bit special highlighting progress bar	__label__nonDir
name immutableinfo field	__label__nonDir
information helper file see generated file helper file	__label__nonDir
assigns default position glyph glyphvector	__label__nonDir
using sequential group label text field positioned vertically one another	__label__nonDir
exception indicates internal failure orb example orb ha detected corruption internal data structure	__label__nonDir
graphicsconfigtemplate class used obtain valid graphicsconfiguration	__label__nonDir
displaymode class encapsulates bit depth height width refresh rate graphicsdevice	__label__nonDir
may also contain string describing exception	__label__nonDir
creates spliterator element collection	__label__nonDir
package specification precise list supported section official specification java tm platform standard edition orb complies see official specification corba support java se	__label__nonDir
information operation built-in jpeg plug-in see jpeg metadata format specification usage note	__label__nonDir
number row make visible one time	__label__nonDir
provides exposed attribute action dynamic mbean using mbeaninfo object	__label__nonDir
class providing apis corba object request broker feature	__label__nonDir
typically choose previous valid date would last valid day february example	__label__nonDir
servant manager supply poa ability activate object demand poa receives request targeted inactive object	__label__nonDir
audioclip interface simple abstraction playing sound clip	__label__nonDir
return next pseudorandom uniformly distributed boolean value random number generator sequence	__label__nonDir
interface used imagewriter implementation notify caller image thumbnail reading method warning non-fatal error	__label__nonDir
default keyboardfocusmanager awt application	__label__nonDir
provides interface enable development input method used java runtime environment	__label__nonDir
org/omg/iop/codecfactorypackage/unknownencodinghelper.java	__label__nonDir
used large model mark validcachedpreferredsize invalid component move	__label__nonDir
information holder file see generated file holder file	__label__nonDir
provides service allow java programming language agent instrument program running jvm	__label__nonDir
related documentation overview tutorial example guide tool documentation please see writing event listener section java tutorial	__label__nonDir
return string representation jcombobox	__label__nonDir
class awt permission	__label__nonDir
implementation scrollbar	__label__nonDir
encapsulates processing state poa associated	__label__nonDir
object used dii dsi describe argument return value	__label__nonDir
return mouse button ha changed state	__label__nonDir
document interface represents entire html xml document	__label__nonDir
interface used imagereader implementation notify caller image thumbnail reading method warning non-fatal error	__label__nonDir
return next layout update current position	__label__nonDir
aligns origin graphic center baseline line	__label__nonDir
information helper file see generated file helper file	__label__nonDir
report bound property change	__label__nonDir
cipheroutputstream composed outputstream cipher write method first process data writing underlying outputstream	__label__nonDir
row edited	__label__nonDir
class classloader process processbuilder runtime securitymanager system provide system operation manage dynamic loading class creation external process host environment inquiry time day enforcement security policy	__label__nonDir
appends given text end document	__label__nonDir
constant miscellaneous technical unicode character block	__label__nonDir
method change layout-related information therefore invalidates component hierarchy	__label__nonDir
alias iso_c0	__label__nonDir
filehandler either write specified file write rotating set file	__label__nonDir
cardlayout object layout manager container	__label__nonDir
fetch configured path-qualified java command name	__label__nonDir
notification class represents notification emitted mbean	__label__nonDir
permission class reflective operation	__label__nonDir
mark first integer id range paint event id	__label__nonDir
type include primitive type declared type class interface type array type type variable null type	__label__nonDir
produce following xml output math add add math	__label__nonDir
return left top side bearing glyph	__label__nonDir
represents primitive type	__label__nonDir
emits audio beep depending native system setting hardware capability	__label__nonDir
used base class implementation local idl interface java language mapping	__label__nonDir
holder floatseq	__label__nonDir
transparent stream update associated message digest using bit going stream	__label__nonDir
summary typically line	__label__nonDir
return whether layout container validated dynamically resizing statically resizing complete	__label__nonDir
return concurrency rowset object	__label__nonDir
holder class string used store inout parameter idl operation	__label__nonDir
also high-performance implementation imageinputstream example native implementation particular platform installed used transparently application	__label__nonDir
adapter activator supply poa ability create child poa demand side-effect receiving request name child poa one child find_poa called activate parameter value true	__label__nonDir
entry keystore identified alias string	__label__nonDir
imageinputstream interface unifies streaming file-based operation	__label__nonDir
constant half-width character function key	__label__nonDir
holder ushortseq	__label__nonDir
used xmlelement.type signal type inferred signature property	__label__nonDir
single global logmanager object used maintain set shared state logger log service	__label__nonDir
see package specification javax.xml.bind.package javadoc additional common information	__label__nonDir
set designated parameter given blob object java programming language	__label__nonDir
skeletal visitor type default behavior appropriate release_6 source version	__label__nonDir
semaphore classic concurrency tool	__label__nonDir
reflection allows programmatic access information field method constructor loaded class use reflected field method constructor operate underlying counterpart within security restriction	__label__nonDir
holder current	__label__nonDir
provides service allow java programming language agent instrument program running jvm	__label__nonDir
return contextual shaper provided unicode range	__label__nonDir
return command name action event fired tray icon	__label__nonDir
glyph property	__label__nonDir
org/omg/iop/iorhelper.java	__label__nonDir
creates volatile off-screen drawable image used double buffering	__label__nonDir
protected do-nothing constructor use subclass	__label__nonDir
determines color model toolkit screen	__label__nonDir
array tagged component forming multiple component profile	__label__nonDir
return collection containing thread may waiting acquire	__label__nonDir
feature supported package include selection/highlighting editing style key mapping	__label__nonDir
retrieves rowset object current setting fetch direction	__label__nonDir
contains component layout manager event event listener adapter	__label__nonDir
return window involved focus activation change	__label__nonDir
contains portability apis rmi-iiop	__label__nonDir
request object consists name operation invoked nvlist containing argument operation	__label__nonDir
fetch named non-null style previously added	__label__nonDir
constant kharoshthi unicode character block	__label__nonDir
thrown invalid expression passed method constructing query	__label__nonDir
orb pass instance implementation interface parameter iorinterceptor.establish_components	__label__nonDir
invoked window activated	__label__nonDir
protectionparameter encapsulating callbackhandler	__label__nonDir
creates toolkit implementation scrollbar using specified peer interface	__label__nonDir
thrown application attempt access sequence class object corresponding typemirror	__label__nonDir
constant define public member valuemember class	__label__nonDir
example see example xmlenumvalue	__label__nonDir
constant non-numpad left arrow key	__label__nonDir
package provides interface used implementing pluggable authentication module	__label__nonDir
cvt preprogram	__label__nonDir
idassignmentpolicyvalue following value	__label__nonDir
construct mouseevent object specified source component type time modifier coordinate absolute coordinate click count popuptrigger flag button number	__label__nonDir
annotation associate value element annotation type	__label__nonDir
return layoutstyle implementing java look feel design guideline specified http java.sun.com/products/jlf/ed2/book/hig.visual2.html	__label__nonDir
method change layout-related information therefore invalidates component hierarchy	__label__nonDir
character encoding specification java.nio.charset.charset class describes naming convention character encoding well set standard encoding must supported every implementation java platform	__label__nonDir
visit type parameter element	__label__nonDir
reset stream	__label__nonDir
get range valid value field using temporal object refine result	__label__nonDir
bean context container bean defines execution environment bean contains	__label__nonDir
description copied class abstractborder	__label__nonDir
set value cell table model row column	__label__nonDir
alistener receive one two itemevents selected item change	__label__nonDir
return list method element	__label__nonDir
object-oriented programming system language application october	__label__nonDir
color pink	__label__nonDir
creates return updater object given field	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
interface intended drag gesture recognition implementation	__label__nonDir
modelmbeanconstructorinfo object describes constructor modelmbean	__label__nonDir
org/omg/iop/taggedprofileholder.java	__label__nonDir
release native screen resource used window subcomponents owned child	__label__nonDir
invoked window ha closed	__label__nonDir
package specification jaxb specification related documentation overview tutorial example guide tool documentation please see jaxb website	__label__nonDir
get vertical gap component	__label__nonDir
example jar url refers jar entry	__label__nonDir
return descent shapegraphicattribute	__label__nonDir
cause current thread wait signalled interrupted	__label__nonDir
 @param entry the entry to query, must not be null	__label__NotNullDirective
 @param commandManager The command manager which will provide the callback; must not be null.	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param factory the factory to use for creation, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if list or factory is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if bag is null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param iterator the iterator to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if bag or transformer is null	__label__NotNullDirective
 @throws IllegalArgumentException if any predicate in the array is null	__label__NotNullDirective
 @throws IllegalArgumentException if any predicate in the collection is null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param collection the collection to add to, must not be null	__label__NotNullDirective
 @param iterator the iterator of elements to add, must not be null	__label__NotNullDirective
 @param coll the collection to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param b the second collection, must not be null	__label__NotNullDirective
 @param collection the collection to predicate, must not be null	__label__NotNullDirective
 @param collection the collection to predicate, must not be null	__label__NotNullDirective
 @param transformer the transformer for the collection, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the predicate or closure is null	__label__NotNullDirective
 @param map the map to invert, may not be null	__label__NotNullDirective
 @param bag the bag to synchronize, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the Buffer is null	__label__NotNullDirective
 @param collection the collection to synchronize, must not be null	__label__NotNullDirective
 @param set the sorted set to synchronize, must not be null	__label__NotNullDirective
 @param set the set to transform, must not be null	__label__NotNullDirective
 @param coll the BoundedCollection to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param entry the entry to query, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param collection the collection to make unmodifiable, must not be null	__label__NotNullDirective
 @param set the sorted set to make unmodifiable, must not be null	__label__NotNullDirective
 @param map the map to make lazy, must not be null	__label__NotNullDirective
 @param list the list to predicate, must not be null	__label__NotNullDirective
 @param map the map to order, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param predicates array of predicates, not cloned, no nulls	__label__NotNullDirective
 @return a predicated bag backed by the given bag @throws IllegalArgumentException if the Bag or Predicate is null	__label__NotNullDirective
 @param identifier The identifier of the item to which the listener should be attached; must not be null.	__label__NotNullDirective
 @throws NullPointerException If the format is null	__label__NotNullDirective
 @param action The action contribution that caused the exception, never null.	__label__NotNullDirective
 @param key the key for the entry, may be null	__label__NullSemanticsDirective
 Specifying a handler of null indicates that the URL should use a default stream handler for the protocol, as outlined for: java.net.URL#URL(java.lang.String, java.lang.String, int, java.lang.String)	__label__NullSemanticsDirective
 Specify null to return all Certificates (if supported).	__label__NullSemanticsDirective
 @param valueTransformer the transformer to use for value conversion, null means no conversion	__label__NullSemanticsDirective
 @param valueTransformer the transformer to use for value conversion, null means no transformation	__label__NullSemanticsDirective
 @param valueTransformer the transformer to use for value conversion, null means no transformation	__label__NullSemanticsDirective
 @param valuePred the predicate for values, null means no check	__label__NullSemanticsDirective
 @param keyTransformer the transformer to use for key conversion, null means no conversion	__label__NullSemanticsDirective
 @param defaultClosure the closure to use if no match, null means nop	__label__NullSemanticsDirective
 @param defaultTransformer the transformer to use if no match, null means return null @return the chained transformer	__label__NullSemanticsDirective
 @param key the key for the entry, may be null	__label__NullSemanticsDirective
 @param comment a description of the property list, or null if no comment is desired.	__label__NullSemanticsDirective
 @param context an access control context representing the restriction to be applied to the caller's domain's privileges before performing the specified action. If the context is null, then no additional restriction is applied.	__label__NullSemanticsDirective
 @param maximumSize the maximum size, must be size one or greater	__label__NumberRangeDirective
 Minutes must be between 00 to 59.	__label__NumberRangeDirective
 @exception IllegalArgumentException if pipeSize <= 0.	__label__NumberRangeDirective
 woDigitHours must be between 00 and 23. Other definitions are as for general time zones.	__label__NumberRangeDirective
 A negative value will result in an IllegalArgumentException being thrown	__label__NumberRangeDirective
 The number of buckets is never below 17, and is always an odd number (StaticBucketMap ensures this)	__label__NumberRangeDirective
 If the value of the len parameter is negative then no characters are written. This is contrary to the specification of this method in the {@linkplain java.io.Writer#write(java.lang.String,int,int) superclass}, which requires that an {@link IndexOutOfBoundsException} be thrown.	__label__NumberRangeDirective
 At a minimum, the unpacker must set progress to 0 at the beginning of a packing operation, and to 100 at the end.	__label__NumberRangeDirective
 @param steps the requested size, must be > 0	__label__NumberRangeDirective
 The string must contain at least one digit in either the integer or the fraction.	__label__StringFormatDirective
 The format of the IPv6reference should follow that specified in RFC 2732: Format for Literal IPv6 Addresses in URLs	__label__StringFormatDirective
 The characters in the string must all be digits, of the specified radix	__label__StringFormatDirective
 The characters in the string must all be digits, of the specified radix	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 This call is not required if the entire paragraph fits on one line.	__label__StringFormatDirective
 A character may start a Java identifier if and only if one of the following conditions is true:      {@link #isLetter(char) isLetter(ch)} returns true     {@link #getType(char) getType(ch)} returns LETTER_NUMBER     ch is a currency symbol (such as "$")     ch is a connecting punctuation character (such as "_").	__label__StringFormatDirective
 The key must implement Comparable.	__label__MethodParameterTypeDirective
 @param c Must implement Set	__label__MethodParameterTypeDirective
 The value must implement Comparable.	__label__MethodParameterTypeDirective
 @param the output type of the transformer - this extends O.	__label__MethodParameterTypeDirective
 The property must implement org.eclipse.jface.text#TypedPosition.	__label__MethodParameterTypeDirective
 To successfully store and retrieve objects from a hashtable, the objects used as keys must implement the hashCode method and the equals method.	__label__MethodParameterTypeDirective
 @param limit the index after the last character. Must be greater than start	__label__MethodParameterCorrelationDirective
 The length argument must be less than or equal to buf.length.	__label__MethodParameterCorrelationDirective
 The formats must be equal to one of {@link Control#FORMAT_PROPERTIES}, {@link Control#FORMAT_CLASS} or {@link Control#FORMAT_DEFAULT}.	__label__MethodParameterCorrelationDirective
 The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case null is placed in all elements of the copy whose index is greater than or equal to original.length - from.	__label__MethodParameterCorrelationDirective
 @throws IllegalArgumentException if end is before start	__label__MethodParameterCorrelationDirective
 When creating a ChoiceFormat, you must specify an array of formats and an array of limits. The length of these arrays must be the same.	__label__MethodParameterCorrelationDirective
 Furthermore, all elements in the list must be mutually comparable (that is, e1.compareTo(e2) must not throw a ClassCastException for any elements e1 and e2 in the list).	__label__MethodParameterCorrelationDirective
 The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case (short)0 is placed in all elements of the copy whose index is greater than or equal to original.length - from.	__label__MethodParameterCorrelationDirective
 The implementation assumes * a.size() and b.size() represent the total cardinality of a and b, resp. * a.size() < Integer.MAXVALUE	__label__MethodParameterCorrelationDirective
 @throws ArithmeticException if the result is inexact but the rounding mode is { UNNECESSARY}, or { mc.precision} {@literal >} 0 and the result of { this.divideToIntgralValue(divisor)} would require a precision of more than { mc.precision} digits.	__label__MethodParameterCorrelationDirective
 If the second argument is an InputStream then the stream must contain the number of bytes specified by scaleOrLength. If the second argument is a Reader then the reader must contain the number of characters specified by scaleOrLength.	__label__MethodParameterCorrelationDirective
 If both the language and country fields are missing, this function will return the empty string, even if the variant field is filled in (you can't have a locale with just a variant-- the variant must accompany a valid language or country code).	__label__MethodParameterCorrelationDirective
 @return the dialog, after being closed by the user, which the client can only call getReturnCode() or getToggleState()	__label__Post-CallDirective
 @return the dialog, after being closed by the user, which the client can only call getReturnCode() or getToggleState()	__label__Post-CallDirective
 Note: Clients must not make any assumptions about the returned proposals. This can change from release to release to adapt to changes made in {@link FindReplaceDocumentAdapter}.	__label__Post-CallDirective
 The method {@link Font#dispose()} must never be called directly on the returned font.	__label__Post-CallDirective
 @return the quick assist assistant or null if none is configured	__label__ReturnValueDirective
 Best effort method, meaning we may not be able to return the FQDN depending on the underlying system configuration.	__label__ReturnValueDirective
 Returns 0 after EOF has been reached, otherwise always return 1.	__label__ReturnValueDirective
 @return the type of Certificates in this certification path (never null)	__label__ReturnValueDirective
 @return The active locale; never null.	__label__ReturnValueDirective
 @return The context identifier; never null.	__label__ReturnValueDirective
 @return a ResultSet object that contains the data produced by the query; never null	__label__ReturnValueDirective
 Should return null if no value is returned by the script execution.	__label__ReturnValueDirective
 Returns an array of all locales for which the getInstance methods of this class can return localized instances. It must contain at least a Locale instance equal to {@link java.util.Locale#US Locale.US}	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.	__label__ReturnValueDirective
 How many digits must be printed for the fractional part of m or a? There must be at least one digit to represent the fractional part, and beyond that as many, but only as many, more digits as are needed to uniquely distinguish the argument value from adjacent values of type float. That is, suppose that x is the exact mathematical value represented by the decimal representation produced by this method for a finite nonzero argument f. Then f must be the float value nearest to x; or, if two float values are equally close to x, then f must be one of them and the least significant bit of the significand of f must be 0.	__label__ReturnValueDirective
 If a formal parameter type is a parameterized type, the Type object returned for it must accurately reflect the actual type parameters used in the source code.	__label__ReturnValueDirective
 If an exception type is a parameterized type, the Type object returned for it must accurately reflect the actual type parameters used in the source code.	__label__ReturnValueDirective
 keySpec identifies the specification class in which the key material should be returned. It could, for example, be DSAPublicKeySpec.class, to indicate that the key material should be returned in an instance of the DSAPublicKeySpec class.	__label__ReturnValueDirective
 @return the predicate as the only element in an array	__label__ReturnValueDirective
 Subclasses that hook their own focus listener should override this method and return false.	__label__ReturnValueDirective
 An implementation of this method must either return a proxy class that implements the named interfaces or throw an exception.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.	__label__ReturnValueDirective
 If the minimal days required must be a full week, this method returns 7.	__label__ReturnValueDirective
 @return never @throws FunctorException always	__label__ReturnValueDirective
 The List interface requires that this method returns true always.	__label__ReturnValueDirective
 Evaluates the rule by examining the characters available from the provided character scanner. The token returned by this rule returns true when calling isUndefined, if the text that the rule investigated does not match the rule's requirements	__label__ReturnValueDirective
 @return a constant indicating how keystrokes in the proposal popup affect filtering of the proposals shown. FILTER_NONE specifies that no filtering will occur in the content proposal list as keys are typed. FILTER_CHARACTER specifies the content of the popup will be filtered by the most recently typed character. FILTER_CUMULATIVE is deprecated and no longer recommended.	__label__ReturnValueDirective
 @return true if cool bar layout is locked, false otherwise	__label__ReturnValueDirective
 For instances where the viewer is displaying a tree containing a single 'root' element it is still necessary that the 'input' does not return itself from this method. This leads to recursion issues (see bug 9262).	__label__ReturnValueDirective
 it should not normally be necessary to use this method.	__label__MethodCallVisibilityDirective
 This field should not be referenced by subclasses.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL TIME values do not have a day component.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 This method should be used with extreme caution.	__label__MethodCallVisibilityDirective
 SplitMapUtils should not normally be instantiated.	__label__MethodCallVisibilityDirective
 This method should only be called from overriding methods or from setInformation.	__label__MethodCallVisibilityDirective
 This method is used only for debugging.	__label__MethodCallVisibilityDirective
 @noinstantiate This class is not intended to be instantiated by clients.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 @deprecated As of 3.3, this class is no longer necessary.	__label__MethodCallVisibilityDirective
 @deprecated This class incorrectly assumes that bytes adequately represent characters. As of JDK 1.1, the preferred way to operate on character streams is via the new character-stream classes, which include a class for counting line numbers.	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 Clients may instantiate this class	__label__MethodCallVisibilityDirective
 Clients may instantiate this class.	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 Clients may call this framework method	__label__MethodCallVisibilityDirective
 Clients may call this framework method	__label__MethodCallVisibilityDirective
 @exception IOException on encoding errors, or if this parameter object has not been initialized.	__label__ExceptionRaisingDirective
 @exception IOException if there is an error joining or when the address is not a multicast address.	__label__ExceptionRaisingDirective
 @exception SQLException if the parameterIndex is not valid; if a database access error occurs or this method is called on a closed CallableStatement @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @throws IllegalStateException if the element cannot be added at this time due to capacity restrictions @throws ClassCastException if the class of the specified element prevents it from being added to this queue @throws NullPointerException if the specified element is null and this queue does not permit null elements @throws IllegalArgumentException if some property of this element prevents it from being added to this queue	__label__ExceptionRaisingDirective
 @exception SecurityException If a security manager, s, is present and any of the following conditions is met	__label__ExceptionRaisingDirective
 @throws ClassCastException (runtime) if the input is the wrong class @throws IllegalArgumentException (runtime) if the input is invalid @throws FunctorException (runtime) if any other error occurs	__label__ExceptionRaisingDirective
 @throws IOException if an IO error occurs	__label__ExceptionRaisingDirective
 @exception SQLException if a database access error occurs; the result set concurrency is CONCUR_READ_ONLY, this method is called on a closed result set, if this method is called when the cursor is not on the insert row, or if not all of non-nullable columns in the insert row have been given a non-null value @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @throws org.eclipse.swt.SWTException in these cases:      * {@link org.eclipse.swt.SWT#ERROR_WIDGET_DISPOSED} - if the receiver has been disposed     * {@link org.eclipse.swt.SWT#ERROR_THREAD_INVALID_ACCESS} - if not called from the thread that created the receiver	__label__ExceptionRaisingDirective
 @exception IOException if there is an I/O or format problem with the keystore data, if a password is required but not given, or if the given password was incorrect. If the error is due to a wrong password, the {@link Throwable#getCause cause} of the IOException should be an UnrecoverableKeyException	__label__ExceptionRaisingDirective
 Applications should throw instances of this class to indicate other illegal uses of the null object.	__label__ExceptionRaisingDirective
 If a resource bundle can't be instantiated due to an unexpected error, the error must be reported by throwing an Error or Exception rather than simply returning null.	__label__ExceptionRaisingDirective
 @throws IllegalArgumentException if address is null or is a SocketAddress subclass not supported by this socket	__label__ExceptionRaisingDirective
 @exception SQLException if an error occurs while attempting to access the array @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @exception SQLException if a database access error occurs	__label__ExceptionRaisingDirective
 The XML document must have the following DOCTYPE declaration	__label__MiscellaneousMethodCallDirective
 @param table a table name; must match the table name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 Bear in mind that Sets require immutable objects to function correctly.	__label__MiscellaneousMethodCallDirective
 @param b The bytes that make up the class data. The bytes in positions off through off+len-1 should have the format of a valid class file as defined by the Java Virtual Machine Specification.	__label__MiscellaneousMethodCallDirective
 If issuerDN is not null, it should contain a single DER encoded distinguished name, as defined in X.501.	__label__MiscellaneousMethodCallDirective
 The range must be sorted (as by the {@link #sort(short[], int, int)} method) prior to making this call	__label__MiscellaneousMethodCallDirective
 The given CompositeData must contain the following attributes	__label__MiscellaneousMethodCallDirective
 @param table a table name; must match the table name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param name the new cursor name, which must be unique within a connection	__label__MiscellaneousMethodCallDirective
 The property file read with this constructor must be encoded in ISO-8859-1.	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param schemaPattern a schema name pattern; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param caller the principal invoking this method. It must be an owner of this ACL.	__label__MiscellaneousMethodCallDirective
 If the first entry in the object array implements {@link java.util.Map.Entry} or {@link KeyValue} then the key and value are added from that object. If the first entry in the object array is an object array itself, then it is assumed that index 0 in the sub-array is the key and index 1 is the value. Otherwise, the array is treated as keys and values in alternate indices.	__label__MiscellaneousMethodCallDirective
 @throws ClassCastException if the array contents is mixed	__label__MiscellaneousMethodCallDirective
 In addition, an application must specify constraints on the target certificate that the CertPathBuilder will attempt to build a path to. The constraints are specified as a CertSelector object. These constraints should provide the CertPathBuilder with enough search criteria to find the target certificate. Minimal criteria for an X509Certificate usually include the subject name and/or one or more subject alternative names. If enough criteria is not specified, the CertPathBuilder may throw a CertPathBuilderException.	__label__MiscellaneousMethodCallDirective
 @param schemaPattern a schema name pattern; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 The range must be sorted into ascending order according to the specified comparator (as by the {@link #sort(Object[], int, int, Comparator) sort(T[], int, int, Comparator)} method) prior to making this call	__label__MiscellaneousMethodCallDirective
 The array must be sorted (as by the {@link #sort(short[])} method) prior to making this call	__label__MiscellaneousMethodCallDirective
 The array must be sorted (as by the {@link #sort(int[])} method) prior to making this call	__label__MiscellaneousMethodCallDirective
 The doit field of the PageChangingEvent must be set to false to prevent the page from changing.	__label__MiscellaneousMethodCallDirective
 The default implementation of this framework method assumes that widget.getData() returns the element corresponding to the node.	__label__MiscellaneousMethodCallDirective
 If there is a marked position in the input stream, then buf[markpos] is the first byte to be supplied as input after a reset operation.	__label__MiscellaneousMethodCallDirective
 If the class name is misspelled, it will typically result in a compile-time error.	__label__MiscellaneousMethodCallDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be extended by clients.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be extended by clients.	__label__ExtensibleClassIdentificationDirective
 @noimplement This interface is not intended to be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 Clients may instantiate or extend this class.	__label__ExtensibleClassIdentificationDirective
 This concrete dialog class can be further subclassed as required.	__label__ExtensibleClassIdentificationDirective
 Clients are encouraged to subclass {@link AbstractInformationControl}, which does this for free.	__label__ExtensibleClassIdentificationDirective
 Clients can implement this interface and its extension interfaces, subclass {@link AbstractInformationControl}, or use the (text-based) default implementation {@link DefaultInformationControl}.	__label__ExtensibleClassIdentificationDirective
 This class is intended to be subclassed by implementors.	__label__ExtensibleClassIdentificationDirective
 This classes is intended to be subclassed	__label__ExtensibleClassIdentificationDirective
 Clients are expected to implement this interface when defining a {@link ContentProposalAdapter}, in order to specify how to retrieve and set the contents of the control being adapted.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 This interface can be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 This interface can be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 The interface can be implemented by clients. By default, clients use {@link org.eclipse.jface.text.information.InformationPresenter} as the standard implementer of this interface.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 Subclasses may extend	__label__MethodOverridingDirective
 Subclasses may extend	__label__MethodOverridingDirective
 Subclasses may extend or reimplement.	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses that require a different dialog area may either override this method	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses must override this method	__label__MethodOverridingDirective
 subclasses must override this method	__label__MethodOverridingDirective
 reimplement performFinish	__label__MethodOverridingDirective
 isPageComplete - may be extended	__label__MethodOverridingDirective
 Subclasses may override this method.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses should override this method to contribute buttons to this page's button bar.	__label__MethodOverridingDirective
 This framework method must be implemented by concrete subclasses.	__label__MethodOverridingDirective
 Subclasses may override if they wish to set the font themselves.	__label__MethodOverridingDirective
 Subclasses must implement the parseString, createList, and getNewInputObject framework methods.	__label__MethodOverridingDirective
 Usually, subclasses use this hook to inform all their reconciling strategies about the change.	__label__MethodOverridingDirective
 Subclasses can hook into the paint loop at three levels:      * Override {@link #paint(GC, ILineRange)} to control the entire painting of the ruler.     * Override {@link #paintLine(GC, int, int, int, int)} to control the painting of a line.     * Leave the painting to the default implementation, but override {@link #computeBackground(int)}, {@link #computeForeground(int)} and {@link #computeText(int)} to specify the ruler appearance for a line.	__label__MethodOverridingDirective
 Subclasses may replace this method to provide their own implementations.	__label__MethodOverridingDirective
 Subclasses should override this method and return the permission that best represents the permission required to make a a connection to the URL.	__label__MethodOverridingDirective
 Subclasses should override this method.	__label__MethodOverridingDirective
 Subclasses may override this method to customize the tool bar manager.	__label__MethodOverridingDirective
 This framework method must be implemented by concrete subclasses.	__label__MethodOverridingDirective
 When it is desirable to group together a number of Permission objects of the same type, the newPermissionCollection method on that particular type of Permission object should first be called. The default behavior (from the Permission class) is to simply return null. Subclasses of class Permission override the method if they need to store their permissions in a particular PermissionCollection object in order to provide the correct semantics when the PermissionCollection.implies method is called. If a non-null value is returned, that PermissionCollection must be used. If null is returned, then the caller of newPermissionCollection is free to store permissions of the given type in any PermissionCollection they choose (one that uses a Hashtable, one that uses a Vector, etc).	__label__MethodOverridingDirective
 This method should be overridden if a refresh operation is supported by the policy implementation.	__label__MethodOverridingDirective
 Knowledgeable providers should override this method.	__label__MethodOverridingDirective
 Subclasses must implement this method to define which drops make sense.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 This framework method must be implemented by concrete subclasses.	__label__MethodOverridingDirective
 Subclasses can overload this method to implement their own tool tip design.	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses typically need not override this method, but may extend it (calling super.saveDialogBounds if additional bounds information should be stored.	__label__MethodOverridingDirective
 Clients can override.	__label__MethodOverridingDirective
 Override if the root element is different from the viewer's input element.	__label__MethodOverridingDirective
 Clients can override.	__label__MethodOverridingDirective
 Subclasses may want to override this behavior to remain consistent with the {@link Comparator#equals(Object)} contract.	__label__MethodOverridingDirective
 Subclasses can override this to record the change.	__label__MethodOverridingDirective
 Subclasses can override this to return alternate bucketing	__label__MethodOverridingDirective
 Subclasses can override this to return a different storage class, or implement caching.	__label__MethodOverridingDirective
 Subclasses can override this to return iterators with different properties.	__label__MethodOverridingDirective
 Subclasses can override this to return iterators with different properties	__label__MethodOverridingDirective
 Override toList(Enumeration) for StringTokenizer as it implements Enumeration for the sake of backward compatibility.	__label__MethodOverridingDirective
 Subclasses should override this, as this is used by all other methods.	__label__MethodOverridingDirective
 Most implementations will probably choose to override this method for efficiency.	__label__MethodOverridingDirective
 Typically, additional methods will be overridden as well.	__label__MethodOverridingDirective
 Clients may call this framework method, but should not override it.	__label__MethodOverridingDirective
 This method is not intended to be overridden by subclasses.	__label__MethodOverridingDirective
 @nooverride This method is not intended to be re-implemented or extended by clients.	__label__MethodOverridingDirective
 Clients should not override it.	__label__MethodOverridingDirective
 Note: This method is not intended to be referenced or overridden by clients.	__label__MethodOverridingDirective
 Subclasses must call the super implementation.	__label__MethodExtensionDirective
 Subclasses should call super.buttonPressed if the default handling of the ok and cancel buttons is desired.	__label__MethodExtensionDirective
 Subclasses should not call the super implementation.	__label__MethodExtensionDirective
 applications that override this method should either call super.update(g) or incorporate the functionality described above into their own code	__label__MethodExtensionDirective
 To conditionally drag from certain areas subclass mousePressed and call super when you wish the dragging to begin.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkSecurityAccess at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If this method is overridden, then super.checkAccess should be called by the first statement in the overridden method, or the equivalent security check should be placed in the overridden method.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkConnect at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 Note: To properly nest multiple overridings, subclasses should generally invoke super.terminated within this method.	__label__MethodExtensionDirective
 Subclasses may override but must call super.doFillIntoGrid.	__label__MethodExtensionDirective
 A concrete subclass of this class must call this constructor when it is activated via the two parameter constructor described above	__label__CallContractSubclassingDirective
 At a minimum, the recovery operation must include closing the current connection and getting a new connection.	__label__CallContractSubclassingDirective
 The additional stipulation on constructors is, not surprisingly, that all constructors must create a set that contains no duplicate elements (as defined above).	__label__MethodImplementationDirective
 Classes that require special handling during the serialization and deserialization process must implement special methods with these exact signatures	__label__MethodImplementationDirective
 The reliability of this method is important for the ability to use it to make security decisions, so its implementation should not just test if the class in question extends Proxy.	__label__MethodImplementationDirective
 When you are searching or comparing text, you must ensure that these two sequences are treated as equivalent. In addition, you must handle characters with more than one accent.	__label__MethodImplementationDirective
 This differs from {@link List#removeAll(Collection)} in that cardinality is respected; if list1 contains two occurrences of null and list2 only contains one occurrence, then the returned list will still contain one occurrence.	__label__MethodImplementationDirective
 Unlike some of the numeric methods of class StrictMath, all implementations of the equivalent functions of class Math are not defined to return the bit-for-bit same results. This relaxation permits better-performing implementations where strict reproducibility is not required.	__label__MethodImplementationDirective
 The special value 0 instructs the packer to copy through the original JAR file directly, with no compression. The JSR 200 standard requires any unpacker to understand this special case as a pass-through of the entire archive.	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if { fromElement} cannot be compared to elements currently in the set.	__label__MethodImplementationDirective
 This method must obey the general contract of {@link Object#equals(Object)}.	__label__MethodImplementationDirective
 The size of the collection can vary, but it can never exceed a preset maximum number of elements.	__label__MethodImplementationDirective
 Remove any members of the bag that are not in the given collection, respecting cardinality. That is, if the given collection coll contains n copies of a given object and the bag has m > n copies, then delete m - n copies from the bag. In addition, if e is an object in the bag but !coll.contains(e), then remove e and any of its copies.	__label__MethodImplementationDirective
 A listener must set event.doit to false if it cannot handle the drag operation.	__label__MethodImplementationDirective
 Concrete subclasses of {@link ColumnViewer} should implement a matching concrete subclass of {@link ViewerColumn}.	__label__Non-localConsistencySubclassingDirective
 The format should be that returned by getFormat and produced by encode.	__label__Non-localConsistencySubclassingDirective
 Overriding this method is generally not required if the number of different keys is small. If a more efficient representation of a viewer's properties is required, override both getData and setData.	__label__Non-localConsistencySubclassingDirective
 Every Java(TM) SE implementation must provide some means of specifying which PreferencesFactory implementation is used to generate the root preferences nodes.	__label__Non-localConsistencySubclassingDirective
 Providers of new {@link Preferences} implementations should provide corresponding PreferencesFactory implementations so that the new Preferences implementation can be installed in place of the platform-specific default implementation.	__label__Non-localConsistencySubclassingDirective
 Note: This flag is only valid in {@link ICompletionListener#assistSessionStarted(ContentAssistEvent)}.	__label__Non-localConsistencySubclassingDirective
 However, it is crucial that the programmer writing the verifier code be aware what Signature engine is being used, as its own implementation of the verify method is invoked to verify a signature.	__label__Non-localConsistencySubclassingDirective
 Note: This content assist subject control may not support appending a verify listener, in which case false will be returned. If this content assist subject control only supports addVerifyKeyListener then this method can be used but prependVerifyKeyListener must return false.	__label__Non-localConsistencySubclassingDirective
 The returned control's layout data must be an instance of GridData.	__label__MiscellaneousSubclassingDirective
 A no-arg constructor must be accessible to the subclass that is serializable.	__label__MiscellaneousSubclassingDirective
 In this case the non-serializable class must have a no-arg constructor to allow its fields to be initialized.	__label__MiscellaneousSubclassingDirective
 An implementation of this interface should map a MIME type into an instance of ContentHandler.	__label__MiscellaneousSubclassingDirective
 All CertPathValidator implementations must include a class (the SPI class) that extends this class (CertPathValidatorSpi) and implements all of its methods.	__label__MiscellaneousSubclassingDirective
 must be called during DropTargetListener.drop method invocation.	__label__MethodCallSequenceDirective
 An updater method must be called before a getter method can be called on a column value.	__label__MethodCallSequenceDirective
 For sockets accepted from a ServerSocket, this must be done by calling {@link ServerSocket#setReceiveBufferSize(int)} before the ServerSocket is bound to a local address.	__label__MethodCallSequenceDirective
 To avoid continual thread replacement, the keep-alive time must be greater than zero when setting true.	__label__MethodCallSequenceDirective
 This method should be called after the dialog has been opened as it updates the message label immediately	__label__MethodCallSequenceDirective
 This method may only be called after initializeDialogUnits has been called.	__label__MethodCallSequenceDirective
 The context must be a security context returned by a previous call to getSecurityContext.	__label__MethodCallSequenceDirective
 It must be {@linkplain java.io.PipedWriter#connect( java.io.PipedReader) connected} to a PipedWriter before being used	__label__MethodCallSequenceDirective
 This should be invoked after defining a class.	__label__MethodCallSequenceDirective
 All OUT parameters must be registered before a stored procedure is executed.	__label__MethodCallSequenceDirective
 And as described in SQLData, calls to reader methods must be made in the order that their corresponding attributes appear in the SQL definition of the type.	__label__MethodCallSequenceDirective
 You must then use the methods getResultSet or getUpdateCount to retrieve the result, and getMoreResults to move to any subsequent result(s).	__label__MethodCallSequenceDirective
 Note: {@link ListIterator} implementations that support add() and remove() only allow set() to be called once per call to next() or previous (see the {@link ListIterator} javadoc for more details).	__label__MethodCallSequenceDirective
 Clients of a IFindReplaceTarget that also implements the IFindReplaceTargetExtension have to indicate the start of a find/replace session before using the target and to indicate the end of the session when the target is no longer used.	__label__MethodCallSequenceDirective
 This method should be called when the compressor is no longer being used, but will also be called automatically by the finalize() method.	__label__MethodCallSequenceDirective
 This method should in general be called before the pool is actively used.	__label__MethodCallSequenceDirective
 The { park} method may also return at any other time, for "no reason", so in general must be invoked within a loop that rechecks conditions upon return.	__label__MethodCallSequenceDirective
 @throws IllegalStateException if remove() has already been called since the last call to next()	__label__MethodCallSequenceDirective
 The encoding should be set before any LogRecords are written to the Handler.	__label__MethodCallSequenceDirective
 When a call to the previous method returns false, the cursor is positioned before the first row. Any invocation of a ResultSet method which requires a current row will result in a SQLException being thrown.	__label__MethodCallSequenceDirective
 Constructs a new FilterListIterator that will not function until {@link #setPredicate(Predicate) setPredicate} is invoked.	__label__MethodCallSequenceDirective
 Constructs a new TransformIterator that will not function until the {@link #setIterator(Iterator) setIterator} and {@link #setTransformer(Transformer)} methods are invoked.	__label__MethodCallSequenceDirective
 When the caller is done with an image obtained from createResource, they must call destroyResource() rather than disposing the Image directly. The result of createResource() can be safely cast to an Image.	__label__MethodCallSequenceDirective
 It is important not to use the original list after invoking this method, as it is a backdoor for adding invalid objects.	__label__MethodCallSequenceDirective
 Invoking the method before the content area has been set or after the dialog has been disposed will have no effect.	__label__MethodCallSequenceDirective
 There must be an SWT Display created in the current thread before calling this method.	__label__MethodCallSequenceDirective
 this means that the flush method is automatically invoked after a byte array is written, one of the println methods is invoked, or a newline character or byte ('\n') is written.	__label__MethodCallSequenceDirective
 If the returned node did not exist prior to this call, this node and any ancestors that were created by this call are not guaranteed to become permanent until the flush method is called on the returned node (or one of its ancestors or descendants).	__label__MethodCallSequenceDirective
 If this pathname denotes a directory, then the directory must be empty in order to be deleted.	__label__NonCall-basedStateDirective
 If the identity has a public key, the public key in the certificate must be the same, and if the identity does not have a public key, the identity's public key is set to be that specified in the certificate.	__label__NonCall-basedStateDirective
 This version of registerOutParameter should be used when the parameter is of JDBC type NUMERIC or DECIMAL.	__label__NonCall-basedStateDirective
 The index must be a value greater than or equal to { 0} and less than or equal to the current size of the vector.	__label__NonCall-basedStateDirective
 The origin component must be contained within the component hierarchy of the popup menu's parent.	__label__NonCall-basedStateDirective
 The index must be a value greater than or equal to { 0} and less than the current size of the vector.	__label__NonCall-basedStateDirective
 This target must be editable.	__label__NonCall-basedStateDirective
 @param originalDevice must be the same Device that was passed into the font's constructor when it was first created.	__label__NonCall-basedStateDirective
 ObjectOutputStream subclasses which override this method can only be constructed in security contexts possessing the "enableSubclassImplementation" SerializablePermission; any attempt to instantiate such a subclass without this permission will cause a SecurityException to be thrown.	__label__NonCall-basedStateDirective
 Thus, repeated calls are guaranteed never to reduce randomness.	__label__NonCall-basedStateDirective
 The current thread is assumed to hold the lock associated with this { Condition} when this method is called.	__label__NonCall-basedStateDirective
 Using the integer fields in this class (such as {@link #ROUND_HALF_UP}) to represent rounding mode is largely obsolete; the enumeration values of the { RoundingMode} { enum}, (such as {@link RoundingMode#HALF_UP}) should be used instead.	__label__AlternativeDirective
 It is recommended that implementations of IKeyFormatter subclass from here, rather than implementing IKeyFormatter directly.	__label__AlternativeDirective
 @deprecated since 3.1 use {@link org.eclipse.jface.text.DefaultIndentLineAutoEditStrategy} instead	__label__AlternativeDirective
 The {@linkplain java.nio.charset.CharsetDecoder} class should be used when more control over the decoding process is required.	__label__AlternativeDirective
 This constructor is protected because most users should use a CertificateFactory to create CertPaths.	__label__AlternativeDirective
 When configuring a Connection, JDBC applications should use the appropritate Connection method such as setAutoCommit or setTransactionIsolation. Applications should not invoke SQL commands directly to change the connection's configuration when there is a JDBC method available.	__label__AlternativeDirective
 Clients should subclass AbstractConcurrentModel instead.	__label__AlternativeDirective
 If a new Integer instance is not required, this method should generally be used in preference to the constructor {@link #Integer(int)}, as this method is likely to yield significantly better space and time performance by caching frequently requested values.	__label__AlternativeDirective
 The {@link java.nio.charset.CharsetEncoder} class should be used when more control over the encoding process is required.	__label__AlternativeDirective
 In order to provide backward compatibility for clients of ITextViewer, extension interfaces are used as a means of evolution. The following extension interfaces exist:      * {@link org.eclipse.jface.text.ITextViewerExtension} since version 2.0 replacing the event consumer mechanism and introducing the concept of rewrite targets and means to manage the viewer's redraw behavior     * {@link org.eclipse.jface.text.ITextViewerExtension2}since version 2.1 adding a way to invalidate a viewer's presentation and setters for hovers.     * {@link org.eclipse.jface.text.ITextViewerExtension3} since version 2.1 which itself was replaced by {@link org.eclipse.jface.text.ITextViewerExtension5} in version 3.0     * {@link org.eclipse.jface.text.ITextViewerExtension4} since version 3.0 introducing focus handling for widget token keepers and the concept of text presentation listeners.     * {@link org.eclipse.jface.text.ITextViewerExtension5} since version 3.0 extending the visible region concept with explicit handling and conversion of widget and model coordinates.     * {@link org.eclipse.jface.text.ITextViewerExtension6} since version 3.1 extending the text viewer with the ability to detect hyperlinks and access the undo manager.     * {@link org.eclipse.jface.text.ITextViewerExtension7} since version 3.3 extending the text viewer with the ability to install tabs to spaces conversion.     * {@link org.eclipse.jface.text.ITextViewerExtension8} since version 3.4 extending the text viewer with the ability to print and rich hover support.	__label__AlternativeDirective
 Completion proposals can implement {@link ICompletionProposalExtension6} to provide colored proposal labels.	__label__AlternativeDirective
 By default, clients use ContentFormatter or MultiPassContentFormatter as the standard implementers of this interface.	__label__AlternativeDirective
 Since this implementation does not support add() or remove(), set() may be called as often as desired.	__label__AlternativeDirective
 The following can be used to provide synchronized access to your BoundedFifoBuffer:     Buffer fifo = BufferUtils.synchronizedBuffer(new BoundedFifoBuffer());	__label__AlternativeDirective
 The following can be used to provide synchronized access to your CircularFifoBuffer:     Buffer fifo = BufferUtils.synchronizedBuffer(new CircularFifoBuffer());	__label__AlternativeDirective
 Use {@link org.apache.commons.collections.BufferUtils#synchronizedBuffer(Buffer)} or {@link org.apache.commons.collections.buffer.SynchronizedBuffer#decorate(Buffer)} to provide synchronized access to a PriorityBuffer:	__label__AlternativeDirective
 WARNING: This constant is binary incompatible with Commons Collections 2.1 and 2.1.1. Use EmptyListIterator.INSTANCE for compatability with Commons Collections 2.1.1.	__label__AlternativeDirective
 If you subclass AbstractLinkedMap but not LinkEntry then you will not be able to access the protected fields. The entryXxx() methods on AbstractLinkedMap exist to provide the necessary access.	__label__AlternativeDirective
 Although this can be used to reset iteration, the {@link #reset()} method is a more effective choice.	__label__AlternativeDirective
 Note: This class should only be used if you need to add bounded behaviour to another buffer. If you just want a bounded buffer then you should use {@link BoundedFifoBuffer} or {@link CircularFifoBuffer}	__label__AlternativeDirective
 The following extension interfaces exist:      {@link IRevisionRulerColumnExtension} since version 3.3 allowing to register a selection listener on revisions and a configurable rendering mode.	__label__AlternativeDirective
 Unless a new instance is required, the static factory {@link #valueOf(boolean)} is generally a better choice.	__label__AlternativeDirective
 When threads must repeatedly count down in this way, instead use a {@link CyclicBarrier}.	__label__AlternativeDirective
 The required FontMetrics parameter may be created in the following way: GC gc = new GC(control); gc.setFont(control.getFont()); fontMetrics = gc.getFontMetrics(); gc.dispose();	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of updateNCharacterStream which takes a length parameter.	__label__AlternativeDirective
 Clients are encouraged to supply their own disabled/grayed/etc. images rather than using a default image and transforming it.	__label__AlternativeDirective
 Note that there is another method for efficiently processing the simultaneous removal of multiple elements.	__label__AlternativeDirective
 May fail spuriously and does not provide ordering guarantees, so is only rarely an appropriate alternative to { compareAndSet}.	__label__AlternativeDirective
 However, this class provides alternative protected extension method decorateTask (one version each for Runnable and Callable) that can be used to customize the concrete task types used to execute commands entered via execute, submit, schedule, scheduleAtFixedRate, and scheduleWithFixedDelay.	__label__AlternativeDirective
 This interface may be implemented by clients. Alternatively, clients may use the rule-based default implementation {@link org.eclipse.jface.text.rules.DefaultDamagerRepairer}.	__label__AlternativeDirective
 Logger names can be arbitrary strings, but they should normally be based on the package name or class name of the logged component, such as java.net or javax.swing. In addition it is possible to create "anonymous" Loggers that are not stored in the Logger namespace.	__label__AlternativeDirective
 The following extension interfaces exist:      {@link org.eclipse.jface.text.ITextHoverExtension} since version 3.0 allowing a text hover to provide a creator for the hover control. This allows for sophisticated hovers in a way that information computed by the hover can be displayed in the best possible form.     {@link org.eclipse.jface.text.ITextHoverExtension2} since version 3.4 allowing a text hover to return hover-specific information objects.	__label__AlternativeDirective
 Since the order of format elements in a pattern string often changes during localization, it is generally better to use the {@link #setFormatByArgumentIndex setFormatByArgumentIndex} method, which accesses format elements based on the argument index they specify.	__label__AlternativeDirective
 If the backing store naturally flushes an entire subtree at once, the implementer is encouraged to override flush(), rather than merely overriding this method.	__label__AlternativeDirective
 Note that the preferred way of re-initializing a preference to its default value is to call setToDefault.	__label__AlternativeDirective
 May fail spuriously and does not provide ordering guarantees, so is only rarely an appropriate alternative to { compareAndSet}.	__label__AlternativeDirective
 When using a capacity-restricted queue, this method is generally preferable to method {@link BlockingQueue#add add}, which can fail to insert an element only by throwing an exception.	__label__AlternativeDirective
 When using a capacity-restricted queue, it is generally preferable to use {@link #offer(Object) offer}.	__label__AlternativeDirective
 Note that there is a significant difference between writing a String into the stream as primitive data or as an Object.	__label__AlternativeDirective
 implementations must synchronized on the hierarchy lock	__label__SynchronizationDirective
 thread must then re-acquire the lock before returning from { await}.	__label__SynchronizationDirective
 Iterators must be manually synchronized.   synchronized (coll) {    ListIterator it = coll.listIterator();    // do stuff with iterator  }    @return an iterator that must be manually synchronized on the collection	__label__SynchronizationDirective
 This implementation is not synchronized. You can use {@link java.util.Collections#synchronizedMap} to provide synchronized access to a ReferenceMap.	__label__SynchronizationDirective
 You must manually synchronize on the returned buffer's iterator to avoid non-deterministic behavior:   Collection c = CollectionUtils.synchronizedCollection(myCollection);  synchronized (c) {      Iterator i = c.iterator();      while (i.hasNext()) {          process (i.next());      }  }	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this interface are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 The static methods of this class are guaranteed to be thread-safe. Multiple threads may concurrently invoke the static methods defined in this class with no ill effects.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 An extended ListIterator that allows concurrent changes to the underlying list.	__label__SynchronizationDirective
 Note that PredicatedSortedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 Note that ListOrderedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization	__label__SynchronizationDirective
 If multiple threads access a map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally.	__label__SynchronizationDirective
 ttempting to use both objects from a single thread is not recommended as it may deadlock the thread.	__label__SynchronizationDirective
 Formats are generally not synchronized. It is recommended to create separate format instances for each thread.	__label__SynchronizationDirective
 Attempting to use both objects from a single thread is not recommended, as it may deadlock the thread.	__label__SynchronizationDirective
 Furthermore, Enumerations returned via the elements method are not fail-fast. Modifications to a collection should not be performed while enumerating over that collection.	__label__SynchronizationDirective
 The associated method must be public and its parameters return value, and exceptions must follow the rules defined in JAX-RPC 1.1, section	__label__MiscellaneousDirective
 The exact operation of the {@link Condition} instance depends on the { Lock} implementation and must be documented by that implementation.	__label__MiscellaneousDirective
 Typically, an exception will be thrown (such as {@link IllegalMonitorStateException}) and the implementation must document that fact.	__label__MiscellaneousDirective
 Clients may also call this method to persist the bounds at times other than closing the dialog.	__label__MiscellaneousDirective
 This field should be documented with a serialField tag.	__label__MiscellaneousDirective
 Each subclass should state the precise behavior of this method so that users and developers know what to expect.	__label__MiscellaneousDirective
 No check is made that the object is immutable. In general, only immutable objects should use the constant factory.	__label__MiscellaneousDirective
 The specification for the persistent collection should indicate that it is capable of throwing such exceptions.	__label__MiscellaneousDirective
 Implementers should document whether the runnable is run synchronously (blocking) or asynchronously (non-blocking), or if no assumption can be made about the blocking behaviour.	__label__MiscellaneousDirective
 This list implementation utilises a tree structure internally to ensure that all insertions and removals are O(log n). This provides much faster performance than both an ArrayList and a LinkedList where elements are inserted and removed repeatedly from anywhere in the list.	__label__MiscellaneousDirective
 Under many circumstances, linking Iterators together in this manner is more efficient (and convenient) than using nested for loops to extract a list.	__label__MiscellaneousDirective
 Callers should re-check the conditions which caused the thread to park in the first place.	__label__MiscellaneousDirective
 Valuable data should not be stored at this node as it is shared by all programs that use it.	__label__MiscellaneousDirective
 JDBC 4.0 Drivers must include the file META-INF/services/java.sql.Driver.	__label__MiscellaneousDirective
 Beware that, unlike in most collections, the size method is not a constant-time operation. Because of the asynchronous nature of these maps, determining the current number of elements requires a traversal of the element	__label__MiscellaneousDirective
 Caching the state is important to improve overall performance as calling {@link org.eclipse.jface.text.quickassist.IQuickAssistAssistant#canFix(Annotation)} can be expensive.	__label__MiscellaneousDirective
add new jbutton dispatch action	__label__nonDir
acquires lock free time invocation	__label__nonDir
engine transform sequence sixteen-bit unicode character sequence byte specific charset	__label__nonDir
org/omg/corba/wcharseqhelper.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00 class definition ha modified conform following omg specification orb core defined corba formal/99-10-07 idl/java language mapping defined ptc/00-01-08	__label__nonDir
one policyerrorcodes would filled requested policy understood valid orb currently supported	__label__nonDir
class defines service provider interface spi secretkeyfactory class	__label__nonDir
identifies devanagari range decimal base	__label__nonDir
org/omg/iop/taggedcomponenthelper.java	__label__nonDir
return type scrolling take place response event	__label__nonDir
mouse pressed event	__label__nonDir
set period year interpreted begin date user specifies	__label__nonDir
class string stringbuffer stringbuilder similarly provide commonly used operation character string	__label__nonDir
set value several attribute dynamic mbean	__label__nonDir
formatter provides support formatting logrecords	__label__nonDir
provides rmi package	__label__nonDir
one parallel group contains label text field	__label__nonDir
expose remote management interface gauge monitor mbean	__label__nonDir
acquires read lock	__label__nonDir
constant mandaic unicode character block	__label__nonDir
attribute key width font	__label__nonDir
listener receiving preference node change event	__label__nonDir
helper unknownuserexception	__label__nonDir
class enables programmer create object protect confidentiality cryptographic algorithm	__label__nonDir
property name pattern form name match property name start name continues zero additional character	__label__nonDir
generic abstract window toolkit awt container object component contain awt component	__label__nonDir
return new condition instance bound lock instance	__label__nonDir
menubar class encapsulates platform concept menu bar bound frame	__label__nonDir
blockingdeque interface extends blockingqueue support fifo lifo stack-based operation	__label__nonDir
bindingiterator interface allows client iterate binding using next_one next_n operation	__label__nonDir
get value several attribute dynamic mbean	__label__nonDir
creates toggle button ha specified text image initially unselected	__label__nonDir
set designated parameter reader object	__label__nonDir
set number column textfield invalidate layout	__label__nonDir
construct new textarea	__label__nonDir
return ascent text	__label__nonDir
description copied class jcomponent	__label__nonDir
multiplexing ui used combine paneluis	__label__nonDir
contains minor code give detailed information caused exception completion status	__label__nonDir
element appear natural order opposed zig-zag order	__label__nonDir
return string representation current value	__label__nonDir
constant identifying sign field	__label__nonDir
qname represents qualified name defined xml specification xml schema part2 datatypes specification namespaces xml namespaces xml erratum	__label__nonDir
set given value	__label__nonDir
interceptor interceptor new logginginterceptor register logging service interceptor	__label__nonDir
deprecated	__label__nonDir
exists externalize process querying permitting different approach per strategy design pattern	__label__nonDir
contains activity service related exception thrown orb machinery unmarshalling	__label__nonDir
populates webrowset object content given resultset object writes data property metadata given outputstream object xml format	__label__nonDir
ascertains whether escape processing enabled rowset object	__label__nonDir
information helper file see generated file helper file	__label__nonDir
check box graphical component either true false state	__label__nonDir
also contains three int member constant corresponding one completionstatus instance	__label__nonDir
canonical decomposition followed canonical composition	__label__nonDir
simple network logging handler	__label__nonDir
constant phags-pa unicode character block	__label__nonDir
construct shapegraphicattribute specified shape	__label__nonDir
provides class implement advanced dynamic loading	__label__nonDir
one card visible time container act stack card	__label__nonDir
may also contain string describing exception	__label__nonDir
dimension class encapsulates width height component integer precision single object	__label__nonDir
adobe type font data	__label__nonDir
member package subpackages use language modeling language processing task apis including limited annotation processing framework	__label__nonDir
return new dateformatsymbols instance specified locale	__label__nonDir
meant javax.swing.dropmode.insert javax.swing.dropmode.on_or_insert drop mode	__label__nonDir
find color system property	__label__nonDir
applet framework involves two entity applet applet context	__label__nonDir
read character portion array	__label__nonDir
example might adjuster set date avoiding weekend one set date last day month	__label__nonDir
provides api server side data source access processing javatm programming language	__label__nonDir
specifies alignment right side component	__label__nonDir
constant musical symbol unicode character block	__label__nonDir
creates new instance joinrowset	__label__nonDir
simple visitor type default behavior appropriate release_6 source version	__label__nonDir
standard override change semantics	__label__nonDir
visit type element	__label__nonDir
return menu selected background color current theme	__label__nonDir
visit short primitive type calling defaultaction	__label__nonDir
information helper file see generated file helper file	__label__nonDir
see javacompiler detail using spi	__label__nonDir
acquires exclusive mode ignoring interrupt	__label__nonDir
obtains instance duration temporal amount	__label__nonDir
os/2 window specific metric	__label__nonDir
refer swing component supporting action detail find information use action section java tutorial	__label__nonDir
return status construction screen representation specified image	__label__nonDir
focustraversalpolicy defines order component particular focus cycle root traversed	__label__nonDir
information holder file see generated file holder file	__label__nonDir
rowsetreader rowsetreader null syncprovider provider syncfactory.getinstance javax.sql.rowset.provider.rioptimisticprovider provider instanceof rioptimisticprovider rowsetreader provider.getrowsetreader	__label__nonDir
information holder file see generated file holder file	__label__nonDir
mark property refers class xmlelement jaxbelement	__label__nonDir
service provider class intended lightweight quick load	__label__nonDir
ansi-style join providing inner join two table	__label__nonDir
return color rgb value respectively	__label__nonDir
return default mapped value addition null addition supported	__label__nonDir
helper longseqhelper	__label__nonDir
immutable sequence character	__label__nonDir
return whether location represents insert row	__label__nonDir
return number multiple master design control	__label__nonDir
modifiable list containing namedvalue object	__label__nonDir
object containing modifiable list string object represent property name	__label__nonDir
see graphicsenvironment.getavailablefontfamilynames	__label__nonDir
get locale component	__label__nonDir
editing affect field list item remains intact	__label__nonDir
represents marker interface policy parameter	__label__nonDir
abstract class extended object represent metadata non-image data associated image stream	__label__nonDir
add specified mouse listener receive mouse event trayicon	__label__nonDir
creates new atomicmarkablereference given initial value	__label__nonDir
org.omg.corba.dynamicimplementation	__label__nonDir
default action visit method	__label__nonDir
creates toolkit implementation label using specified peer interface	__label__nonDir
return position strike-through line relative baseline	__label__nonDir
return float array containing color alpha component color colorspace specified cspace parameter	__label__nonDir
group class used stub skeleton generated rmic stub compiler	__label__nonDir
set syncprovider object cachedrowset object one specified	__label__nonDir
constant semicolon key	__label__nonDir
represents intersection type	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
baseline data	__label__nonDir
creates toggle button specified text image selection state	__label__nonDir
information full-screen exclusive mode api see full-screen exclusive mode api tutorial	__label__nonDir
return alpha component range	__label__nonDir
return int hash code value object	__label__nonDir
context resolved giving property name getting back value associated	__label__nonDir
paint tool bar border borderpainted property true	__label__nonDir
constant kannada unicode character block	__label__nonDir
get current value held field given object managed updater	__label__nonDir
designed allow sax parser pas certain type information application serve simple model sax2 parser extension package	__label__nonDir
process event button	__label__nonDir
request standard kerning	__label__nonDir
portable interceptor implement interceptor	__label__nonDir
set designated parameter given string object	__label__nonDir
convenience method aid implementation common-case mousewheellistener scroll scrollpane jscrollpane amount conforms platform setting	__label__nonDir
enumeration parameter mode parameter	__label__nonDir
cause combo box display popup window	__label__nonDir
type-safe enumeration possible orientation	__label__nonDir
provides rmi package	__label__nonDir
return alignment along x axis	__label__nonDir
default action visit method	__label__nonDir
return string representation collection	__label__nonDir
set rectangle representing area need repainted response event	__label__nonDir
description copied class componentui	__label__nonDir
additionally utility class computing crc-32 adler-32 checksum arbitrary input stream	__label__nonDir
package contains core jax-ws apis	__label__nonDir
multiplexing ui used combine splitpaneuis	__label__nonDir
constructor concrete subclass us argument default value	__label__nonDir
compositecontext object maintain state compositing operation	__label__nonDir
usually mean used bind operation	__label__nonDir
return array input method listener registered component	__label__nonDir
provides http spi used portable deployment jax-ws web service container e.g	__label__nonDir
org/omg/portableinterceptor/discarding.java	__label__nonDir
information helper file see generated file helper file	__label__nonDir
creates toolkit implementation panel using specified peer interface	__label__nonDir
creates new jtextpane	__label__nonDir
atomically decrement one current value	__label__nonDir
eventually set field given object managed updater given updated value	__label__nonDir
file mime.types user home directory	__label__nonDir
identifies malayalam range decimal base	__label__nonDir
package java image i/o api containing plug-in interface reader writer transcoders stream runtime registry	__label__nonDir
implement characteriterator.previous string	__label__nonDir
org.omg.corba.dynamicimplementation	__label__nonDir
enumeration parameter mode parameter	__label__nonDir
multiple master font metric	__label__nonDir
creates cachedrowset object deep copy cachedrowset object data independent	__label__nonDir
set renderer paint list item item selected list jcombobox field	__label__nonDir
mediatype instance iso/din c8 x mm	__label__nonDir
cachedrowset object syncprovider contains connection object original resultset jdbc property passed	__label__nonDir
set number column text field	__label__nonDir
finally character case ignored valid block name form	__label__nonDir
convert string integer return specified opaque color	__label__nonDir
element represents static language-level construct example runtime construct virtual machine	__label__nonDir
implementation visit uniontype calling defaultaction	__label__nonDir
constant syriac unicode character block	__label__nonDir
return transparency mode texturepaint	__label__nonDir
policy specifies whether implicit activation servant supported created poa	__label__nonDir
contains minor code give detailed information caused exception completion status	__label__nonDir
return true rh ha transform antialiasing fractional metric value	__label__nonDir
return true collection contains element specified collection	__label__nonDir
return glyphcode specified glyph	__label__nonDir
return child component window receive focus window focused	__label__nonDir
class used bean run application	__label__nonDir
iioinvalidtreeexception thrown attempt iiometadata object parse tree iiometadatanodes fails	__label__nonDir
annotation used indicate annotation type annotation processor support	__label__nonDir
provides exception invalidname thrown method orb.resolve_initial_references exception inconsistenttypecode thrown dynamic creation method orb class	__label__nonDir
creates listener update display based selection change method	__label__nonDir
associate editor text document	__label__nonDir
retrieves requested column text store buffer provided	__label__nonDir
information helper file see generated file helper file	__label__nonDir
keypairgenerator class used generate pair public private key	__label__nonDir
class implementation modelmbean	__label__nonDir
update preferredsize instance variable returned getpreferredsize	__label__nonDir
make node expanded jtree expanded layoutcache	__label__nonDir
default srgb space	__label__nonDir
please refer java deployment guide detail technique	__label__nonDir
return rectangle2d encloses bit drawn graphicattribute relative rendering position	__label__nonDir
return resultset object containing original value cachedrowset object	__label__nonDir
readwritelock interface similarly defines lock may shared among reader exclusive writer	__label__nonDir
give ui delegate opportunity define precise shape component sake mouse processing	__label__nonDir
grouplayout.sequentialgroup vgroup layout.createsequentialgroup sequential group contains two parallel group align content along baseline	__label__nonDir
moderately extended width	__label__nonDir
get background color window	__label__nonDir
class containing premain method	__label__nonDir
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param activeChecker The callback mechanism for checking whether a command is active; must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be nul	__label__NotNullDirective
 @param factory the factory to use for creation, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @throws IllegalArgumentException if map is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param predicate the predicate to use as a filter, not null	__label__NotNullDirective
 @param listIterator the list iterator to use, not null	__label__NotNullDirective
 @throws NullPointerException if the list is null	__label__NotNullDirective
 @param predicates a collection of predicates to check, may not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the predicates collection is null	__label__NotNullDirective
 @throws IllegalArgumentException if the predicates array is nul	__label__NotNullDirective
 @throws NullPointerException if the map is null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param elements the array of elements to add, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param buffer the buffer to predicate, must not be null	__label__NotNullDirective
 @param a the first collection, must not be null	__label__NotNullDirective
 @param b the second collection, must not be null	__label__NotNullDirective
 @param b the collection to subtract, must not be null	__label__NotNullDirective
 @param predicate the predicate for the collection, must not be null	__label__NotNullDirective
 @param closure the closure to call repeatedly, not null	__label__NotNullDirective
 @throws NullPointerException if either parameter is null	__label__NotNullDirective
 @throws NullPointerException the specified map is null,	__label__NotNullDirective
 @throws IllegalArgumentException if collection is null	__label__NotNullDirective
 @param list the list to synchronize, must not be nul	__label__NotNullDirective
 @throws IllegalArgumentException if the set is null	__label__NotNullDirective
 @param bag the bag to predicate, must not be null	__label__NotNullDirective
 @param set the set to transform, must not be null	__label__NotNullDirective
 @param entry the entry to query, must not be null	__label__NotNullDirective
 @param factory the factory for creating new objects, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param predicates array of predicates, not cloned, no nulls	__label__NotNullDirective
 @param transformers matching array of transformers, cloned, no nulls	__label__NotNullDirective
 @param closures the closures to chain, copied, no nulls	__label__NotNullDirective
 @throws NullPointerException if array is null	__label__NotNullDirective
 @throws IllegalArgumentException if the Buffer or Predicate is null	__label__NotNullDirective
 @throws IllegalArgumentException if the closure is null	__label__NotNullDirective
 @throws IllegalArgumentException if the factory is null	__label__NotNullDirective
 @throws IllegalArgumentException if the classToInstantiate is null	__label__NotNullDirective
 @param defaultLookup the default look-up. Must not be null.	__label__NotNullDirective
 @param out the stream to print to, must not be null	__label__NotNullDirective
 @param text the text to be displayed, must not be null	__label__NotNullDirective
 @param action the action. Must not be null.	__label__NotNullDirective
 @return The object representing an input event that will trigger this binding; must not be null.	__label__NotNullDirective
 @param keyStroke a single key stroke. Must not be null.	__label__NotNullDirective
 Cannot be null.	__label__NotNullDirective
 @throws NullPointerException if the specified element is null	__label__NotNullDirective
 @param exception The NotEnabledException, never null.	__label__NotNullDirective
 @param labelProvider the label provider, or null if none	__label__NullSemanticsDirective
 @return a MemoryNotificationInfo object represented by cd if cd is not null; null otherwise.	__label__NullSemanticsDirective
 @param label The label to be used, may be null. If null, the label is not output.	__label__NullSemanticsDirective
 param map The map to print, may be null. If null, the text 'null' is output.	__label__NullSemanticsDirective
 Specify null to return all CRLs (if supported).	__label__NullSemanticsDirective
 @param outputCollection the collection to output into, may not be null	__label__NullSemanticsDirective
 Neither map is validated, so nulls may be passed in.	__label__NullSemanticsDirective
 @param keyPredicate the predicate to validate the keys, null means no check	__label__NullSemanticsDirective
 @param suffix The suffix string to be used in generating the file's name; may be null, in which case the suffix ".tmp" will be used	__label__NullSemanticsDirective
 @param q the queue with which the reference is to be registered, or null if registration is not required	__label__NullSemanticsDirective
 @param maximumSize the maximum size, must be size one or greater	__label__NumberRangeDirective
 The port must be between 0 and 65535, inclusive.	__label__NumberRangeDirective
 The local port must be between 0 and 65535 inclusive.	__label__NumberRangeDirective
 The backlog argument must be a positive value greater than 0.	__label__NumberRangeDirective
 The mode argument must be either OPEN_READ or OPEN_READ | OPEN_DELETE.	__label__NumberRangeDirective
 @throws IllegalArgumentException if the maximum size is zero or less	__label__NumberRangeDirective
 At a minimum, the unpacker must set progress to 0 at the beginning of a packing operation, and to 100 at the end.	__label__NumberRangeDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__NumberRangeDirective
 @param keyType the type of reference to use for keys; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param keyType the type of reference to use for keys; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param valueType the type of reference to use for values; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 This value is always in the range 0 through count. If it is less than count, then buf[pos] is the next byte to be supplied as input; if it is equal to count, then the next read or skip operation will require more bytes to be read from the contained input stream.	__label__NumberRangeDirective
 @param tabWidth the tabulator width in space equivalents, must be >=0	__label__NumberRangeDirective
 @param dialogImageType one of the following values:      MessageDialog.NONE for a dialog with no image     MessageDialog.ERROR for a dialog with an error image     MessageDialog.INFORMATION for a dialog with an information image     MessageDialog.QUESTION for a dialog with a question image     MessageDialog.WARNING for a dialog with a warning image	__label__NumberRangeDirective
 @param nanos 0-999999 additional nanoseconds to wait. @exception IllegalArgumentException if the value of millis is negative the value of nanos is not in the range 0-999999.	__label__NumberRangeDirective
 @throws IllegalArgumentException If the given string violates RFC 2396	__label__StringFormatDirective
 The algorithm name must be specified, as there is no default.	__label__StringFormatDirective
 This byte array should contain the DER encoded name, as it would appear in the GeneralName structure defined in RFC 2459 and X.509. The encoded byte array should only contain the encoded value of the name, and should not include the tag associated with the name in the GeneralName structure. The ASN.1 definition of this structure appears below.	__label__StringFormatDirective
 The family should have a default resource bundle which simply has the same name as its family - "MyResources" - and will be used as the bundle of last resort if a specific locale is not supported.	__label__StringFormatDirective
 The range may no only contain complete partitions but starts at the beginning of a line in the middle of a partition of the given content type. This requires that a partition delimiter can not contain a line delimiter.	__label__StringFormatDirective
 @param nameConstraints a byte array containing the ASN.1 DER encoding of a NameConstraints extension to be used for checking name constraints. Only the value of the extension is included, not the OID or criticality flag.	__label__StringFormatDirective
 The group class specified by the ActivationGroupDesc must be a concrete subclass of ActivationGroup and have a public constructor that takes two arguments: the ActivationGroupID for the group and the MarshalledObject containing the group's initialization data (obtained from the ActivationGroupDesc	__label__MethodParameterTypeDirective
 created SequenceInputStream by remembering the argument, which must be an Enumeration that produces objects whose run-time type is InputStream	__label__MethodParameterTypeDirective
 Furthermore, all elements in this range must be mutually comparable (that is, e1.compareTo(e2) must not throw a ClassCastException for any elements e1 and e2 in the array).	__label__MethodParameterTypeDirective
 All elements in the range must be mutually comparable by the specified comparator (that is, c.compare(e1, e2) must not throw a ClassCastException for any elements e1 and e2 in the range).	__label__MethodParameterTypeDirective
 Furthermore, all such keys must be mutually comparable: k1.compareTo(k2) (or comparator.compare(k1, k2)) must not throw a ClassCastException for any keys k1 and k2 in the sorted map.	__label__MethodParameterTypeDirective
 @param className the class name of the preference page; this class must implement IPreferencePage	__label__MethodParameterTypeDirective
 @param strategy The master formatting strategy, must implement {@link IFormattingStrategyExtension}	__label__MethodParameterTypeDirective
 All of the elements in an enum set must come from a single enum type that is specified, explicitly or implicitly, when the set is created.	__label__MethodParameterTypeDirective
 Copies all of the keys and values from the specified map to this map. Each key must be non-null and a MultiKey object.	__label__MethodParameterTypeDirective
 All keys inserted into the map must implement the {@link Comparable} interface.	__label__MethodParameterTypeDirective
 The property must implement java.util#Map.	__label__MethodParameterTypeDirective
 The property must implement org.eclipse.jface.text#IDocument.	__label__MethodParameterTypeDirective
 One version of the format method in the various Format classes requires a FieldPosition object as an argument.	__label__MethodParameterTypeDirective
 The second parameter must be of type Object; therefore, the java.lang equivalent objects should be used for built-in types.	__label__MethodParameterTypeDirective
 The length must be lesser or equal to the offset plus the length of the packet's buffer.	__label__MethodParameterCorrelationDirective
 The source and destination must have the same number of bands.	__label__MethodParameterCorrelationDirective
 The length argument must be less than or equal to buf.length.	__label__MethodParameterCorrelationDirective
 @param deletePos the position in the text where the character was removed. Must not be less than the start of newParagraph, and must not be greater than the end of newParagraph.	__label__MethodParameterCorrelationDirective
 The length argument must be less than or equal to buf.length.	__label__MethodParameterCorrelationDirective
 The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case 0L is placed in all elements of the copy whose index is greater than or equal to original.length - from.	__label__MethodParameterCorrelationDirective
 The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case '\\u000' is placed in all elements of the copy whose index is greater than or equal to original.length - from.	__label__MethodParameterCorrelationDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__MethodParameterCorrelationDirective
 The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case (byte)0 is placed in all elements of the copy whose index is greater than or equal to original.length - from.	__label__MethodParameterCorrelationDirective
 @param b The bytes that make up the class data. The bytes from positions b.position() through b.position() + b.limit() -1 should have the format of a valid class file as defined by the Java Virtual Machine Specification.	__label__MethodParameterCorrelationDirective
 The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case 0d is placed in all elements of the copy whose index is greater than or equal to original.length - from.	__label__MethodParameterCorrelationDirective
 The two maps must be a matching pair, normal and reverse.	__label__MethodParameterCorrelationDirective
 The method readObject is used to read an object from the stream. Java's safe casting should be used to get the desired type.	__label__Post-CallDirective
 callers can only use the viewer row locally and until the next call to this method.	__label__Post-CallDirective
 The keys should be immutable If they are not then they must not be changed after adding to the MultiKey.	__label__Post-CallDirective
 If uppercase letters are desired, the {@link java.lang.String#toUpperCase()} method may be called on the result:       Integer.toHexString(n).toUpperCase()	__label__Post-CallDirective
 @return The scheme identifier; never null.	__label__ReturnValueDirective
 The returned control's layout data must be an instance of GridData.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.	__label__ReturnValueDirective
 Any subclass returning a Composite object whose Layout has default margins (for example, a GridLayout) are expected to set the margins of this Layout to 0 pixels.	__label__ReturnValueDirective
 @return a new synchronized Bag	__label__ReturnValueDirective
 @return a new transformed Bag	__label__ReturnValueDirective
 This method should return the object to be substituted or the original object.	__label__ReturnValueDirective
 Note that there must be at least one nonzero digit in a subnormal significand.	__label__ReturnValueDirective
 A certificate factory for X.509 must return certificates that are an instance of java.security.cert.X509Certificate, and CRLs that are an instance of java.security.cert.X509CRL.	__label__ReturnValueDirective
 @return the predicate as the only element in an array	__label__ReturnValueDirective
 In dialogs implemented by JFace, this will be an IDialogPage.	__label__ReturnValueDirective
 The array returned must contain at least a Locale instance equal to {@link java.util.Locale#US Locale.US}.	__label__ReturnValueDirective
 If the given locale is equal to Locale.ROOT (the root locale), a List containing only the root Locale must be returned.	__label__ReturnValueDirective
 Subsets of any { NavigableSet} must implement the { NavigableSet} interface.	__label__ReturnValueDirective
 This set should not support the add or remove methods, and its iterator should not support the remove method.	__label__ReturnValueDirective
 In other words, this method must allocate a new array	__label__ReturnValueDirective
 @return never @throws FunctorException always	__label__ReturnValueDirective
 This is not intended to be called outside of the workbench.	__label__MethodCallVisibilityDirective
 Note: Using the Activatable constructors that both register and export an activatable remote object is strongly discouraged because the actions of registering and exporting the remote object are not guaranteed to be atomic.	__label__MethodCallVisibilityDirective
 Denigrated, use {@linkplain #setSubject(X500Principal)} or {@linkplain #setSubject(byte[])} instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.	__label__MethodCallVisibilityDirective
 Denigrated, use {@linkplain #addIssuer(X500Principal)} or {@linkplain #addIssuerName(byte[])} instead. This method should not be relied on as it can fail to match some CRLs because of a loss of encoding information in the RFC 2253 String form of some distinguished names.	__label__MethodCallVisibilityDirective
 Constructor only used in deserialization, do not use otherwise.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL TIME values do not have a year component.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 @noreference This method is not intended to be referenced by clients.	__label__MethodCallVisibilityDirective
 @noreference This method is not intended to be referenced by clients.	__label__MethodCallVisibilityDirective
 As of 3.4, you should only call this method if you want to override the {@link JFacePreferences#CONTENT_ASSIST_BACKGROUND_COLOR}.	__label__MethodCallVisibilityDirective
 Since changing the default locale may affect many different areas of functionality, this method should only be used if the caller is prepared to reinitialize locale-sensitive code running within the same Java Virtual Machine.	__label__MethodCallVisibilityDirective
 Note: This is an internal framework method and must not be called by clients.	__label__MethodCallVisibilityDirective
 Note: This method is not intended to be referenced or overridden by clients.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 @deprecated no replacement. Skeletons are no longer required for remote method calls in the Java 2 platform v1.2 and greater.	__label__MethodCallVisibilityDirective
 @deprecated no replacement. Skeletons are no longer required for remote method calls in the Java 2 platform v1.2 and greater.	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 Clients may instantiate this class	__label__MethodCallVisibilityDirective
 This method may be called from subclasses to enable or disable owner draw dynamically.	__label__MethodCallVisibilityDirective
 @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @throws IOException if an I/O error occurs or this stream is already closed	__label__ExceptionRaisingDirective
 @exception SQLException if a database access error occurs or this method is called on a closed Statement	__label__ExceptionRaisingDirective
 The view's iterator is a "weakly consistent" iterator that will never throw {@link ConcurrentModificationException}, and guarantees to traverse elements as they existed upon construction of the iterator, and may (but is not guaranteed to) reflect any modifications subsequent to construction.	__label__ExceptionRaisingDirective
 @exception SecurityException If a security manager, s, is present and any of the following conditions is met	__label__ExceptionRaisingDirective
 @throws IllegalMonitorStateException if this lock is not held @throws IllegalArgumentException if the given condition is not associated with this lock @throws NullPointerException if the condition is null	__label__ExceptionRaisingDirective
 @throws IOException If an I/O error occurs, which is possible because the construction of the canonical pathname may require filesystem queries @throws SecurityException If a required system property value cannot be accessed, or if a security manager exists and its {@link java.lang.SecurityManager#checkRead} method denies read access to the file	__label__ExceptionRaisingDirective
 @exception NullPointerException If b is null. @exception IndexOutOfBoundsException If off is negative, len is negative, or len is greater than b.length - off	__label__ExceptionRaisingDirective
 @exception IOException If an I/O error occurs	__label__ExceptionRaisingDirective
 @exception IOException if an I/O error occurs.	__label__ExceptionRaisingDirective
 @exception SQLException if the parameterIndex is not valid; if a database access error occurs or this method is called on a closed CallableStatement	__label__ExceptionRaisingDirective
 @exception IllegalArgumentException - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)	__label__ExceptionRaisingDirective
 @throws IllegalStateException implementations may, but are not required to, throw this exception if the entry has been removed from the backing map.	__label__ExceptionRaisingDirective
 all such elements must be mutually comparable: { e1.compareTo(e2)} must not throw a { ClassCastException} for any elements { e1} and { e2} in the set	__label__ExceptionRaisingDirective
 This implies that compare(x, y) must throw an exception if and only if compare(y, x) throws an exception.	__label__ExceptionRaisingDirective
 @throws CertPathValidatorException if this PKIXCertPathChecker is unable to check certificates in the specified order; it should never be thrown if the forward flag is false since reverse checking must be supported	__label__ExceptionRaisingDirective
 that is, e1.compareTo(e2) must not throw a ClassCastException for any elements e1 and e2 in the list	__label__ExceptionRaisingDirective
 @exception InvalidKeyException if the public key in the certificate is not encoded properly or does not include required parameter information or cannot be used for digital signature purposes.	__label__ExceptionRaisingDirective
 @exception IllegalArgumentException if the specified object is not an instance of the class or interface declaring the underlying field (or a subclass or implementor thereof)	__label__ExceptionRaisingDirective
 @exception SQLException if parameterName does not correspond to a named parameter; if a database access error occurs or this method is called on a closed CallableStatement @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @exception SQLException if the columnLabel is not valid; if a database access error occurs; the result set concurrency is CONCUR_READ_ONLY or this method is called on a closed result set @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 The input object should be immutable to maintain the contract of Transformer (although this is not checked).	__label__MiscellaneousMethodCallDirective
 The Transformer must return either Boolean.TRUE or Boolean.FALSE otherwise a PredicateException will be thrown.	__label__MiscellaneousMethodCallDirective
 The range must be sorted (as by the {@link #sort(char[], int, int)} method) prior to making this call.	__label__MiscellaneousMethodCallDirective
 The specified list must be modifiable, but need not be resizable.	__label__MiscellaneousMethodCallDirective
 @param tableNamePattern a table name pattern; must match the table name as it is stored in the database @return ResultSet - each row is a table privilege description	__label__MiscellaneousMethodCallDirective
 The XML document must have the following DOCTYPE declaration:	__label__MiscellaneousMethodCallDirective
 The method must return either a boolean or a non-null Boolean, and have no parameters.	__label__MiscellaneousMethodCallDirective
 The agent should take care to ensure that the JAR does not contain any classes or resources other than those to be defined by the bootstrap class loader for the purpose of instrumentation. Failure to observe this warning could result in unexpected behaviour that is difficult to diagnose.	__label__MiscellaneousMethodCallDirective
 @param schemaPattern a schema name pattern; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 Otherwise, the specified collection must contain at least one element (in order to determine the new enum set's element type)	__label__MiscellaneousMethodCallDirective
 @param schemaPattern a schema pattern name; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param functionNamePattern a procedure name pattern; must match the function name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param table a table name; must match the table name as it is stored in this database	__label__MiscellaneousMethodCallDirective
 The certificates supplied must be of a type supported by the CertificateFactory	__label__MiscellaneousMethodCallDirective
 In the even of an error, a default image is returned if returnMissingImageOnError is true, otherwise null is returned.	__label__MiscellaneousMethodCallDirective
 @param timeout This parameter is ignored as the method never blocks	__label__MiscellaneousMethodCallDirective
 @param unit This parameter is ignored as the method never blocks	__label__MiscellaneousMethodCallDirective
 The constructors of this class assume that the default character encoding and the default byte-buffer size are appropriate.	__label__MiscellaneousMethodCallDirective
 Clients are not permitted to extend this class.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noimplement This interface is not intended to be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 @noimplement This interface is not intended to be implemented by clients	__label__ExtensibleClassIdentificationDirective
 Clients may extend this class	__label__ExtensibleClassIdentificationDirective
 Clients may extend this class.	__label__ExtensibleClassIdentificationDirective
 Clients should subclass this class instead of implementing IConcurrentModel directly.	__label__ExtensibleClassIdentificationDirective
 Clients may subclass.	__label__ExtensibleClassIdentificationDirective
 It is recommended to subclass this class instead of Dialog in all cases except where the dialog should never show a tray.	__label__ExtensibleClassIdentificationDirective
 This dialog class may be subclassed.	__label__ExtensibleClassIdentificationDirective
 This concrete dialog class can be further subclassed as required.	__label__ExtensibleClassIdentificationDirective
 This class may be  subclassed as required.	__label__ExtensibleClassIdentificationDirective
 This class may be subclassed as required	__label__ExtensibleClassIdentificationDirective
 This class and all of its methods may be overridden or extended.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 This interface must be implemented by clients. Implementers should be registered with a content formatter in order get involved in the formatting process.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 This interface may be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 This interface may be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 This interface should be implemented by classes that wish to act as cell modifiers.	__label__ExtensibleClassIdentificationDirective
 This interface should be implemented by classes that wish to act as cell editor validators.	__label__ExtensibleClassIdentificationDirective
 Key-value entries are stored in instances of the ReferenceEntry class which can be overridden and replaced.	__label__ExtensibleClassIdentificationDirective
 The subclass of ActivationGroup must override this method and unexport the object.	__label__MethodOverridingDirective
 Subclasses may extend	__label__MethodOverridingDirective
 Subclasses may extend this method.	__label__MethodOverridingDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 Subclasses may extend	__label__MethodOverridingDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 Subclasses may extend it	__label__MethodOverridingDirective
 Subclasses should extend the doComputeSize framework method to compute the size of the page's control.	__label__MethodOverridingDirective
 reimplement performCancel	__label__MethodOverridingDirective
 Subclasses may reimplement or extend.	__label__MethodOverridingDirective
 Subclasses can extend this method to add additional trim	__label__MethodOverridingDirective
 Subclasses may reimplement.	__label__MethodOverridingDirective
 Subclasses may reimplement.	__label__MethodOverridingDirective
 Subclasses typically need not override this method, but may do so.	__label__MethodOverridingDirective
 Subclasses should override this method.	__label__MethodOverridingDirective
 This is a framework hook method for subclasses to return a page-specific preference store.	__label__MethodOverridingDirective
 This is a framework hook method for subclasses to do special things when the Cancel button has been pressed.	__label__MethodOverridingDirective
 Hook for subclasses which want to perform some action as soon as reconciliation is needed.	__label__MethodOverridingDirective
 Subclasses should replace - the default implementation returns the empty string.	__label__MethodOverridingDirective
 Subclasses of FilterOutputStream should provide a more efficient implementation of this method.	__label__MethodOverridingDirective
 Subclasses may override these methods if required:	__label__MethodOverridingDirective
 Subclasses may override this method to customize the cool bar manager.	__label__MethodOverridingDirective
 This framework method must be implemented by concrete subclasses.	__label__MethodOverridingDirective
 Subclasses that wish to support indirect CRLs should override this method.	__label__MethodOverridingDirective
 Subclasses must implement the following methods:      * validateDrop - identifies valid drop targets in viewer     * performDrop - carries out a drop into a viewer	__label__MethodOverridingDirective
 Subclasses should override to set their selection based on the given list of elements.	__label__MethodOverridingDirective
 Subclasses should override.	__label__MethodOverridingDirective
 Override this method to provide your own object used to handle progress.	__label__MethodOverridingDirective
 Subclasses can override this to return alternate hash codes.	__label__MethodOverridingDirective
 Subclasses could override to handle changes to the map.	__label__MethodOverridingDirective
 This can be overridden by subclasses to provide a different map implementation.	__label__MethodOverridingDirective
 This method exists for subclasses to override. A subclass may wish to provide cleanup of resources when an entry is removed.	__label__MethodOverridingDirective
 May be overidden by handlers for other protocols that have different requirements for equals().	__label__MethodOverridingDirective
 Subclasses are encouraged to provide a more efficient implementation of this method.	__label__MethodOverridingDirective
 Subclasses typically do not override method.	__label__MethodOverridingDirective
 Clients may call this framework method, but should not override it.	__label__MethodOverridingDirective
 Clients should not override it.	__label__MethodOverridingDirective
 This method is not intended to be overridden by subclasses.	__label__MethodOverridingDirective
 This method is not intended to be referenced or overridden by clients.	__label__MethodOverridingDirective
 Subclasses must call the super implementationcall	__label__MethodExtensionDirective
 All pages should call super.doComputeSize.	__label__MethodExtensionDirective
 Any subclass of RequiredModelMBean overloading or overriding this method should call super.postRegister(registrationDone)	__label__MethodExtensionDirective
 super.setLabelProvider must be invoked.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkPrintJobAccess at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkExit at the point the overridden method would normally throw an exception. @param status the exit status.	__label__MethodExtensionDirective
 A concrete subclass of this class must call this constructor when it is activated via the two parameter constructor described above.	__label__CallContractSubclassingDirective
 Subclasses wishing a preference page without these buttons should call this framework method before the page's control has been created.	__label__CallContractSubclassingDirective
 Subclasses should overwrite this method and use {@link #getIndentPrefixesForTab(int)} if applicable.	__label__CallContractSubclassingDirective
 Subclasses may call the following methods to configure the wizard page:      * setDescription     * setErrorMessage     * setImageDescriptor     * setMessage     * setPageComplete     * setPreviousPage     * setTitle	__label__CallContractSubclassingDirective
 It is recommended that this method be used by subclasses to determine whether the viewer is busy to return early from state-changing methods.	__label__CallContractSubclassingDirective
 This method should normally be invoked within an {@link AccessController#doPrivileged} action to create callables that will, if possible, execute under the selected permission settings holding within that action; or if not possible, throw an associated {@link AccessControlException}.	__label__CallContractSubclassingDirective
 The implementation of the method must follow this protocol: It must write each of the attributes of the SQL type to the given output stream. This is done by calling a method of the output stream to write each item, in the order that they appear in the SQL definition of the type. Specifically, it must call the appropriate SQLOutput writer method(s) (writeInt, writeString, and so on) to do the following: for a Distinct Type, write its single data element; for a Structured Type, write a value for each attribute of the SQL type.	__label__CallContractSubclassingDirective
 This method must not modify the parent's layout.	__label__MethodImplementationDirective
 In other words, this method must allocate a new array	__label__MethodImplementationDirective
 They therefore must either be parsed as such or treated as an error.	__label__MethodImplementationDirective
 The implementor must also ensure that the relation is transitive	__label__MethodImplementationDirective
 Two hosts are considered equivalent if both host names can be resolved into the same IP addresses; else if either host name can't be resolved, the host names must be equal without regard to case; or both host names equal to null.	__label__MethodImplementationDirective
 The implementation of the method must follow this protocol: It must write each of the attributes of the SQL type to the given output stream. This is done by calling a method of the output stream to write each item, in the order that they appear in the SQL definition of the type. Specifically, it must call the appropriate SQLOutput writer method(s) (writeInt, writeString, and so on) to do the following: for a Distinct Type, write its single data element; for a Structured Type, write a value for each attribute of the SQL type.	__label__MethodImplementationDirective
 Calling disconnect() should not imply that this HttpURLConnection instance can be reused for other requests.	__label__MethodImplementationDirective
 Drivers are not required to support these properties however if the driver supports a client info property that can be described by one of the standard properties, the standard property name should be used.	__label__MethodImplementationDirective
 If the required access and argument checks succeed and the instantiation will proceed, the constructor's declaring class is initialized if it has not already been initialized.	__label__MethodImplementationDirective
 Note that unlike the {@link StrictMath#copySign(float, float) StrictMath.copySign} method, this method does not require NaN sign arguments to be treated as positive values; implementations are permitted to treat some NaN arguments as positive and other NaN arguments as negative to allow greater performance.	__label__MethodImplementationDirective
 Note that unlike the {@link StrictMath#copySign(double, double) StrictMath.copySign} method, this method does not require NaN sign arguments to be treated as positive values; implementations are permitted to treat some NaN arguments as positive and other NaN arguments as negative to allow greater performance.	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if { fromKey} or { toKey} cannot be compared to keys currently in the map.	__label__MethodImplementationDirective
 The equals method implements an equivalence relation on non-null object references: * It is reflexive: for any non-null reference value x, x.equals(x) should return true. * It is symmetric: for any non-null reference values x and y, x.equals(y) should return true if and only if y.equals(x) returns true. * It is transitive: for any non-null reference values x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. * It is consistent: for any non-null reference values x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. * For any non-null reference value x, x.equals(null) should return false.	__label__MethodImplementationDirective
 This method should query if the state of the object permits it to be acquired in the exclusive mode, and if so to acquire it.	__label__MethodImplementationDirective
 It must also obey the interruption semantics as defined in this interface, to the extent that interruption of lock acquisition is supported: which is either totally, or only on method entry.	__label__MethodImplementationDirective
 All { Lock} implementations must enforce the same memory synchronization semantics as provided by the built-in monitor lock, as described in The Java Language Specification, Third Edition (17.4 Memory Model)	__label__MethodImplementationDirective
 Normally this means {@link #setQuickFixable(boolean)} has been called at least once but it can also be hard-coded, e.g. always return true.	__label__MethodImplementationDirective
 The setter methods (setShort, setString, and so on) for setting IN parameter values must specify types that are compatible with the defined SQL type of the input parameter. For instance, if the IN parameter has SQL type INTEGER, then the method setInt should be used.	__label__Non-localConsistencySubclassingDirective
 All CertPathValidator implementations must include a class (the SPI class) that extends this class (CertPathValidatorSpi)	__label__Non-localConsistencySubclassingDirective
 The formats returned by the {@link Control#getFormats(String) getFormats} method and candidate locales returned by the {@link ResourceBundle.Control#getCandidateLocales(String, Locale) getCandidateLocales} method must be consistent in all ResourceBundle.getBundle invocations for the same base bundle.	__label__Non-localConsistencySubclassingDirective
 Must have the same effect as getBindings(ScriptContext.ENGINE_SCOPE).get	__label__Non-localConsistencySubclassingDirective
 The Bindings instances that are returned must be identical to those returned by the getBindings method of ScriptContext called with corresponding arguments on the default ScriptContext of the ScriptEngine.	__label__Non-localConsistencySubclassingDirective
 If true is returned, the JDBC driver must support the returning of auto-generated keys for at least SQL INSERT statements	__label__Non-localConsistencySubclassingDirective
 The equivalent of a default constructor called by any constructor and by readObject.	__label__Non-localConsistencySubclassingDirective
 It is strongly recommended (though not required) that natural orderings be consistent with equals.	__label__Non-localConsistencySubclassingDirective
 ColumnViewer implementors have to subclass this class and implement the missing methods	__label__MiscellaneousSubclassingDirective
 Subclass implementations of this abstract class must provide a public constructor that takes a Policy.Parameters object as an input parameter.	__label__MiscellaneousSubclassingDirective
 Bags or multisets (unordered collections that may contain duplicate elements) should implement this interface directly.	__label__MiscellaneousSubclassingDirective
 Note: Support for the rowUpdated method is optional with a result set concurrency of CONCUR_READ_ONLY	__label__MiscellaneousSubclassingDirective
 A remote object implementation must call Activatable's inactive method when that object deactivates (the object deems that it is no longer active)	__label__MethodCallSequenceDirective
 Packages must be created before the class is defined	__label__MethodCallSequenceDirective
 All of the columns in a result set must be given a value each time this method is called before calling insertRow.	__label__MethodCallSequenceDirective
 you must call getMoreResults to move to any subsequent result(s).	__label__MethodCallSequenceDirective
 Calls to setText(String text) and setImage(Image image) are required in order to fill the message area.	__label__MethodCallSequenceDirective
 The caller must validate it using {@link #isSurrogatePair(char, char) isSurrogatePair} if necessary.	__label__MethodCallSequenceDirective
 All OUT parameters must be registered before a stored procedure is executed.	__label__MethodCallSequenceDirective
 The type of all OUT parameters must be registered prior to executing the stored procedure; their values are retrieved after execution via the get methods provided here.	__label__MethodCallSequenceDirective
 All the data in the returned stream must be read prior to getting the value of any other column	__label__MethodCallSequenceDirective
 The execute method executes an SQL statement and indicates the form of the first result. You must then use the methods getResultSet or getUpdateCount to retrieve the result, and getMoreResults to move to any subsequent result(s).	__label__MethodCallSequenceDirective
 To instantiate a PKIXParameters object, an application must specify one or more most-trusted CAs as defined by the PKIX certification path validation algorithm.	__label__MethodCallSequenceDirective
 The "last used" Iterator is the Iterator upon which next() or hasNext() was most recently called used for the remove() operation only	__label__MethodCallSequenceDirective
 This method may only be called once, otherwise an IllegalStateException will occur.	__label__MethodCallSequenceDirective
 Use {@link #hasNext} to avoid this error.	__label__MethodCallSequenceDirective
 Purges stale mappings from this map before read operations.	__label__MethodCallSequenceDirective
 Using this constructor, the iterator is equivalent to an empty iterator until {@link #setArray} is called to establish the array to iterate over.	__label__MethodCallSequenceDirective
 Events are not generated when preferences are modified in descendants of this node; a caller desiring such events must register with each descendant.	__label__MethodCallSequenceDirective
 There must be an SWT Display created in the current thread before calling this method.	__label__MethodCallSequenceDirective
 This method will be called before any other method and can be called multiple times.	__label__MethodCallSequenceDirective
 lients should typically call this method once, create a color from the RGB provided, and dispose of the color when finished using it.	__label__MethodCallSequenceDirective
 Clients who created this column are responsible to call this method once the column is no longer used.	__label__MethodCallSequenceDirective
 Note: This method must be called at most once per reconcile step.	__label__MethodCallSequenceDirective
 It is important not to use the original bag after invoking this method, as it is a backdoor for adding untransformed objects.	__label__MethodCallSequenceDirective
 @param value if true, execute after shutdown, else don't. @see #getExecuteExistingDelayedTasksAfterShutdownPolicy	__label__MethodCallSequenceDirective
 After the group is created, the ActivationSystem is informed that the group is active by calling the activeGroup method which returns the ActivationMonitor for the group.	__label__MethodCallSequenceDirective
 Once the shutdown sequence has begun it can be stopped only by invoking the {@link #halt halt} method, which forcibly terminates the virtual machine.  Once the shutdown sequence has begun it is impossible to register a new shutdown hook or de-register a previously-registered hook. Attempting either of these operations will cause an {@link IllegalStateException} to be thrown.	__label__MethodCallSequenceDirective
 This thread group must be empty, indicating that all threads that had been in this thread group have since stopped.	__label__NonCall-basedStateDirective
 The current thread must own this object's monitor.	__label__NonCall-basedStateDirective
 The caller principal must be an owner of the ACL in order to invoke this method.	__label__NonCall-basedStateDirective
 @param caller the principal invoking this method. It must be an owner of this ACL.	__label__NonCall-basedStateDirective
 This feature is only supported if the underlying collection's {@link Collection#iterator iterator} method returns an implementation that supports it.	__label__NonCall-basedStateDirective
 This method should be used only when auto-commit mode has been disabled.	__label__NonCall-basedStateDirective
 @return the dialog, after being closed by the user, which the client can only call getReturnCode() or getToggleState()	__label__NonCall-basedStateDirective
 This value is computed once and then cached, so elements should not change their hash codes once created	__label__NonCall-basedStateDirective
 The hashcode is calculated once here in this method. Therefore, changing the array passed in would not change the hashcode but would change the equals method, which is a bug.	__label__NonCall-basedStateDirective
 This field should be true if this node did not exist in the backing store prior to the creation of this object.	__label__NonCall-basedStateDirective
 @throws ArithmeticException if { roundingMode==UNNECESSARY} and the specified scaling operation would require rounding.	__label__NonCall-basedStateDirective
 Replaces the given ranges in this presentation. Each range must be a subrange of the presentation's default range. The ranges must be ordered by increasing offset and must not overlap (but may be adjacent).	__label__NonCall-basedStateDirective
 This method should only be called from the UI thread. If you are not on the UI thread then wrap the call with a PlatformUI.getWorkbench().getDisplay().synchExec() in order to guarantee the correct result.	__label__NonCall-basedStateDirective
 Subclasses should either call the super implementation or, alternatively, {@link #initialize(ColumnViewer, ViewerColumn, boolean)}.	__label__AlternativeDirective
 The new {@link #divide(BigDecimal, int, RoundingMode)} method should be used in preference to this legacy method.	__label__AlternativeDirective
 It is recommended to subclass this class instead of Dialog in all cases except where the dialog should never show a tray.	__label__AlternativeDirective
 Subclasses typically need not override this method, but instead should use the constructor parameters showDialogMenu and showPersistAction to indicate whether a menu should be shown, and createTitleControl to to customize the presentation of the title.	__label__AlternativeDirective
 Instead, an application should register an activation descriptor and export a remote object separately, so that exceptions can be handled properly.	__label__AlternativeDirective
 Standard customers should not overwrite this method but {@link #setValue(Object, Object)}	__label__AlternativeDirective
 for distinguished names, use {@linkplain #addPathToName(int, byte[])} instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.	__label__AlternativeDirective
 Viewers who are not subclasses of {@link ColumnViewer} should consider using a widget relative implementation like {@link ColumnViewer#getItemAt(org.eclipse.swt.graphics.Point)}.	__label__AlternativeDirective
 In most cases, the Runnable interface should be used if you are only planning to override the run() method and no other Thread methods.	__label__AlternativeDirective
 The {@link java.nio.charset.CharsetEncoder} class should be used when more control over the encoding process is required.	__label__AlternativeDirective
 	__label__AlternativeDirective
 Completion proposals can implement {@link ICompletionProposalExtension6} to provide colored proposal labels.	__label__AlternativeDirective
 A Map implementation that is a general purpose alternative to HashMap.  This implementation improves on the JDK1.4 HashMap by adding the {@link org.apache.commons.collections.MapIterator MapIterator} functionality and many methods for subclassing.	__label__AlternativeDirective
 Note that IdentityMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 If you know that you have an object array, the {@link ObjectArrayListIterator} class is a better choice, as it will perform better.	__label__AlternativeDirective
 This iterator is a special version designed for maps. It can be more efficient to use this rather than an entry set iterator where the option is available, and it is certainly more convenient.	__label__AlternativeDirective
 A map iterator is an efficient way of iterating over maps. There is no need to access the entry set or use Map Entry objects.	__label__AlternativeDirective
 Under many circumstances, linking Iterators together in this manner is more efficient (and convenient) than using nested for loops to extract a list.	__label__AlternativeDirective
 Note that IdentityMap and ReferenceIdentityMap are unsuitable for use as the key comparison would work on the whole MultiKey, not the elements within.	__label__AlternativeDirective
 . You can use {@link java.util.Collections#synchronizedMap} to provide synchronized access to a ReferenceIdentityMap.	__label__AlternativeDirective
 Implementations typically return null if no values have been mapped to the key, however the implementation may choose to return an empty collection.	__label__AlternativeDirective
 The following extension interfaces exist:      {@link org.eclipse.jface.text.ITextOperationTargetExtension} since version 2.0 introducing text operation enabling/disabling.	__label__AlternativeDirective
 If the object has a custom mapping (is of a class implementing the interface SQLData), the JDBC driver should call the method SQLData.writeSQL to write it to the SQL data stream. If, on the other hand, the object is of a class implementing Ref, Blob, Clob, NClob, Struct, java.net.URL, or Array, the driver should pass it to the database as a value of the corresponding SQL type.	__label__AlternativeDirective
 It is recommended to use getComparator() instead.	__label__AlternativeDirective
 @deprecated This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.	__label__AlternativeDirective
 Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of updateAsciiStream which takes a length parameter.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of updateBlob which takes a length parameter.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of updateClob which takes a length parameter.	__label__AlternativeDirective
 Note that there is another method for efficiently processing the simultaneous removal of multiple elements.	__label__AlternativeDirective
 . Note that there is another method for efficiently processing the simultaneous removal of multiple elements.	__label__AlternativeDirective
 Since 3.3, an alternative API is available, see {@link ViewerColumn#setEditingSupport(EditingSupport)} for a more flexible way of editing values in a column viewer.	__label__AlternativeDirective
 Unicode-aware case-insensitive matching can be enabled by specifying the {@link #UNICODE_CASE} flag in conjunction with this flag.	__label__AlternativeDirective
 The following extension interfaces exist:      {@link org.eclipse.jface.text.source.IAnnotationHoverExtension} since version 3.0 allowing a text hover to provide a creator for the hover control. This allows for sophisticated hovers in a way that information computed by the hover can be displayed in the best possible form.	__label__AlternativeDirective
 It replaces {@link org.eclipse.jface.text.ITextViewer#setTextHover(ITextHover, String)} with a new method that allows to specify state masks for a better control of the hover behavior.	__label__AlternativeDirective
 Since the order of format elements in a pattern string often changes during localization, it's generally better to use the {@link #getFormatsByArgumentIndex getFormatsByArgumentIndex} method, which assumes an order of formats corresponding to the order of elements in the arguments array passed to the format methods or the result array returned by the parse methods.	__label__AlternativeDirective
 Note that this method does not clean up references between this cool bar manager and its associated contribution items. Use removeAll for that purpose.	__label__AlternativeDirective
 If multiple threads access a linked hash set concurrently, and at least one of the threads modifies the set, it must be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the set. If no such object exists, the set should be "wrapped" using the {@link Collections#synchronizedSet Collections.synchronizedSet} method. This is best done at creation time, to prevent accidental unsynchronized access to the set:     Set s = Collections.synchronizedSet(new LinkedHashSet(...));	__label__AlternativeDirective
 For efficiency, a character-stream object may use an object other than itself to protect critical sections.	__label__AlternativeDirective
 implementations must synchronized on the hierarchy lock	__label__SynchronizationDirective
 A subclass should therefore use the object in this field rather than this or a synchronized method.	__label__SynchronizationDirective
 This implementation is not synchronized. You can use {@link java.util.Collections#synchronizedMap} to provide synchronized access to a ReferenceIdentityMap. Remember that synchronization will not stop the garbage collecter removing entries.	__label__SynchronizationDirective
 If multiple threads access a format concurrently, it must be synchronized externally.	__label__SynchronizationDirective
 It is imperative that the user manually synchronize on the returned collection when iterating over it:    Collection c = Collections.synchronizedCollection(myCollection);      ...   synchronized(c) {       Iterator i = c.iterator(); // Must be in the synchronized block       while (i.hasNext())          foo(i.next());   }	__label__SynchronizationDirective
 It is imperative that the user manually synchronize on the returned map when iterating over any of its collection views:    Map m = Collections.synchronizedMap(new HashMap());       ...   Set s = m.keySet();  // Needn't be in synchronized block       ...   synchronized(m) {  // Synchronizing on m, not s!       Iterator i = s.iterator(); // Must be in synchronized block       while (i.hasNext())           foo(i.next());   }	__label__SynchronizationDirective
 All public methods of CertStore objects must be thread-safe.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this interface are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 Note that TransformedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 If multiple threads access a hash map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally.	__label__SynchronizationDirective
 This operation is not atomic and may have undesired effects.	__label__SynchronizationDirective
 In either case the implementation must ensure that the signal is redirected to another waiting thread, if there is one.	__label__SynchronizationDirective
 When locking and unlocking occur in different scopes, care must be taken to ensure that all code that is executed while the lock is held is protected by try-finally or try-catch to ensure that the lock is released when necessary.	__label__SynchronizationDirective
 Likewise any application that updates an IPreferenceStore from a Thread other than the UI Thread should be aware of any listeners that require an update in the UI Thread.	__label__SynchronizationDirective
 Note that in context based mode the content formatter is fully reentrant, but not thread-safe.	__label__SynchronizationDirective
 The ability to interrupt a lock acquisition in some implementations may not be possible, and if possible may be an expensive operation. The programmer should be aware that this may be the case.	__label__SynchronizationDirective
 Additionally, it is possible for the size to change during execution of this method, in which case the returned result will be inaccurate.	__label__SynchronizationDirective
 An application should catch instances of this class only if it must clean up after being terminated asynchronously.	__label__MiscellaneousDirective
 Classes that need to designate a replacement when an instance of it is read from the stream should implement this special method with the exact signature.   ANY-ACCESS-MODIFIER Object readResolve() throws ObjectStreamException;	__label__MiscellaneousDirective
 If auto-commit mode has been disabled, the method commit must be called explicitly in order to commit changes; otherwise, database changes will not be saved.	__label__MiscellaneousDirective
 No check is made that the object is immutable. In general, only immutable objects should use the constant factory.	__label__MiscellaneousDirective
 In this case, the caller can still decide to show the window, but the window should include some sort of visual warning.	__label__MiscellaneousDirective
 ArrayList is a good general purpose list implementation. It is faster than TreeList for most operations except inserting and removing in the middle of the list. ArrayList also uses less memory as TreeList uses one object per entry.	__label__MiscellaneousDirective
 Note that in this case, traversal to find that element takes linear time.	__label__MiscellaneousDirective
 Implementations should allow a value to be looked up from a key and a key to be looked up from a value with equal performance.	__label__MiscellaneousDirective
 The add and set methods are affected by this class. Thus objects must be removed or searched for using their transformed form. For example, if the transformation converts Strings to Integers, you must use the Integer form to remove objects.	__label__MiscellaneousDirective
 For example, some List implementations provide asymptotically linear access times if they get huge, but constant access times in practice. Such a List implementation should generally implement this interface.	__label__MiscellaneousDirective
 As a rule, the equals method should be used by implementations of this class to decide if two keys are the same.	__label__MiscellaneousDirective
 Beware that, unlike in most collections, the { size} method is NOT a constant-time operation. Because of the asynchronous nature of these queues, determining the current number of elements requires a traversal of the elements.	__label__MiscellaneousDirective
 It is recommended that this platform MBeanServer also be used to register other application managed beans besides the platform MXBeans.	__label__MiscellaneousDirective
 Disables randomization and enables additional runtime error checking. Severely degrades performance if set to true. Intended for use in test suites only.	__label__MiscellaneousDirective
 Specifying this flag may impose a performance penalty.	__label__MiscellaneousDirective
 Note: The object returned from this method may be an instance of an implementation-specific class. The RemoteObject class ensures serialization portability of its instances' remote references through the behavior of its custom writeObject and readObject methods. An instance of RemoteRef should not be serialized outside of its RemoteObject wrapper instance or the result may be unportable.	__label__MiscellaneousDirective
constant locking kana function key	__label__nonDir
set command name action event fired button	__label__nonDir
populates table mapping uiclassid fully qualified name ui class	__label__nonDir
indicates window currently opaque	__label__nonDir
identifies telugu range decimal base	__label__nonDir
return array containing element collection	__label__nonDir
information helper file see generated file helper file	__label__nonDir
creates tool tip	__label__nonDir
mediatype instance iso/din c0 x mm	__label__nonDir
actionlistener receive actionevent selection ha made	__label__nonDir
file resource named meta-inf/mimetypes.default usually found activation.jar file	__label__nonDir
helper octetseq	__label__nonDir
executor class provides factory method common kind configuration executor well utility method using	__label__nonDir
acquires read lock unless current thread interrupted	__label__nonDir
update componentlistener necessary	__label__nonDir
class represents builder creates default mbeanserver implementation	__label__nonDir
iduniquenesspolicy specifies whether servant activated created poa must unique object identity	__label__nonDir
perform loose tracking	__label__nonDir
multiplexing ui used combine textuis	__label__nonDir
represents runtime exception thrown agent performing operation mbeans	__label__nonDir
writes data property metadata webrowset object given outputstream object xml format	__label__nonDir
object containing modifiable list string object represent property name	__label__nonDir
implement characteriterator.getendindex string	__label__nonDir
return copy duration positive length	__label__nonDir
creates image decodes image stored specified byte array specified offset length	__label__nonDir
return class representing component type array	__label__nonDir
replaces text indicated start end position new text specified	__label__nonDir
return bufferstrategy used component	__label__nonDir
return shape whose interior corresponds visual representation glyphvector rendered x	__label__nonDir
visit int primitive type calling defaultaction	__label__nonDir
object describing structure metadata document returned iiometadata.getastree passed iiometadata.setfromtree mergetree	__label__nonDir
family ycbcr color space	__label__nonDir
retrieves boolean indicating whether row marked deletion appear set current row	__label__nonDir
mouse released event	__label__nonDir
calculates amount time two temporal object	__label__nonDir
holder octetseq	__label__nonDir
org/omg/corba/longlongseqhelper.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00 class definition ha modified conform following omg specification orb core defined corba formal/99-10-07 idl/java language mapping defined ptc/00-01-08	__label__nonDir
enumeration xml schema namespace qualification	__label__nonDir
related documentation overview tutorial example guide tool documentation please see use table section java tutorial	__label__nonDir
return float array containing color component color default srgb color space	__label__nonDir
api includes feature ability specify document type mechanism control page setup page format ability manage job control dialog	__label__nonDir
information holder file see generated file holder file	__label__nonDir
permission represents trust signer codebase	__label__nonDir
add rowset joinrowset object set designated column match column	__label__nonDir
package contains exception specified iop codefactory interface part portable interceptor spec	__label__nonDir
set property textfield match specified action	__label__nonDir
subclass object may override definition	__label__nonDir
org/omg/iop/servicecontext.java	__label__nonDir
information holder file see generated file holder file	__label__nonDir
paint event type	__label__nonDir
factory object generates preference object	__label__nonDir
however framework also support input method language use entirely different input mechanism handwriting speech recognition	__label__nonDir
handler publishes log record system.err	__label__nonDir
add actionlistener	__label__nonDir
service provider class class java.util package	__label__nonDir
creates return paintcontext used generate solid color field pattern	__label__nonDir
class provides method from_int given one int constant creates corresponding definitionkind instance	__label__nonDir
creates color specified colorspace color component specified float array specified alpha	__label__nonDir
invalidates layout indicating layout manager ha cached information discarded	__label__nonDir
add one rowset object contained given array rowset object joinrowset object set match column rowset object match column given array column name	__label__nonDir
org/omg/corba/_idltypestub.java generated idl-to-java compiler portable version ir.idl	__label__nonDir
awtkeystroke represents key action keyboard equivalent input device	__label__nonDir
information lock	__label__nonDir
set l f object render component	__label__nonDir
interface used imagereader implementation notify caller image thumbnail reading method pixel update	__label__nonDir
root class corba standard exception	__label__nonDir
description copied class abstractborder	__label__nonDir
constant katakana function key	__label__nonDir
give native peer ability query native container given native component eg direct parent may lightweight	__label__nonDir
service provider class class java.text package	__label__nonDir
helper anyseq	__label__nonDir
check whether component contains specified point x defined relative coordinate system component	__label__nonDir
provides event fired swing component	__label__nonDir
postscript information	__label__nonDir
class extends filetypemap provides data typing file via file extension	__label__nonDir
level class defines set standard logging level used control logging output	__label__nonDir
package specification java object serialization specification related documentation overview tutorial example guide tool documentation please see serialization enhancement	__label__nonDir
interface diffie-hellman key	__label__nonDir
return beginning date period year interpreted within	__label__nonDir
mediatype instance iso/din c6 x mm	__label__nonDir
invoked window de-iconified	__label__nonDir
return array action listener registered button	__label__nonDir
urldatasource simplifies handling data described url within javabeans activation framework class used create new datahandlers	__label__nonDir
containing line com.mycompany.imageio.myformatreaderspi	__label__nonDir
information holder file see generated file holder file	__label__nonDir
contains user apis rmi-iiop	__label__nonDir
constant f6 function key	__label__nonDir
return identical value similar commandenvironments	__label__nonDir
return table array byte specified tag	__label__nonDir
signal icmp port unreachable message ha received connected datagram	__label__nonDir
poa object manages implementation collection object	__label__nonDir
transforms jar file packed stream pack200 format	__label__nonDir
creates new jtextpane specified document model	__label__nonDir
may also contain string describing exception	__label__nonDir
index term view	__label__nonDir
return bound glyph	__label__nonDir
constant	__label__nonDir
constant kangxi radical unicode character block	__label__nonDir
ease-of-use constant getalignmentx	__label__nonDir
package provides number image producer consumer filter configure image processing need	__label__nonDir
array provides static method dynamically create access array	__label__nonDir
creates unselected toggle button specified text	__label__nonDir
provides equivalent safe behavior immutable mutable implementation	__label__nonDir
package contains utility class related kerberos network authentication protocol	__label__nonDir
see package example java.security.permission detail	__label__nonDir
return whether window receive focus subsequently shown call setvisible true moved front call tofront	__label__nonDir
construct fontrendercontext object optional affinetransform two boolean value determine newly constructed object ha anti-aliasing fractional metric	__label__nonDir
provides class interface accessing naming service	__label__nonDir
return integer keycode associated key event	__label__nonDir
return alignment along x axis	__label__nonDir
indicates whether designated column current row cachedrowset object ha updated	__label__nonDir
provides class interface key specification algorithm parameter specification	__label__nonDir
package contains key specification dsa public private key rsa public private key pkcs private key der-encoded format x.509 public private key der-encoded format	__label__nonDir
return shape represents region shapegraphicattribute render	__label__nonDir
naming table	__label__nonDir
algorithmparametergenerator class used generate set parameter used certain algorithm	__label__nonDir
helper ulongseq	__label__nonDir
please see use focus subsystem section java tutorial focus specification information	__label__nonDir
set auto-size property	__label__nonDir
supported operation include launching user-default browser show specified uri launching user-default mail client optional mailto uri launching registered application open edit print specified file	__label__nonDir
condensed predefined width	__label__nonDir
method graphics2d interface use outline shape returned stroke object include draw method implemented term method drawline drawrect drawroundrect drawoval drawarc drawpolyline drawpolygon	__label__nonDir
fetch current paragraph attribute effect location caret null none	__label__nonDir
constant microsoft window window key	__label__nonDir
represents mbean server management point view	__label__nonDir
description copied class number	__label__nonDir
constant unified canadian aboriginal syllabics unicode character block	__label__nonDir
org/omg/iop/codecpackage/typemismatch.java	__label__nonDir
equivalent minutes.convert duration	__label__nonDir
get visibility text field	__label__nonDir
add specified key set view mapping key default mapped value backing map defined	__label__nonDir
exception represents failure jaxb operation	__label__nonDir
org/omg/cosnaming/namingcontextpackage/invalidnameholder.java	__label__nonDir
constant tai viet unicode character block	__label__nonDir
provides class interface dealing javax.swing.jtable	__label__nonDir
xmladapter spec-defined sub-classes allow arbitrary java class used jaxb	__label__nonDir
provides interface document object model dom	__label__nonDir
creates trayicon specified image tooltip text	__label__nonDir
return sytem text font current theme	__label__nonDir
used minimizing drawing vertical line	__label__nonDir
return array containing selected item	__label__nonDir
optical bound	__label__nonDir
glyph variation	__label__nonDir
return new breakiterator instance line break given locale	__label__nonDir
metal look feel implementation toolbarui	__label__nonDir
domhandler implementation w3c dom org.w3c.dom package	__label__nonDir
multiplexing ui used combine popupmenuuis	__label__nonDir
construct windowevent object	__label__nonDir
package java image i/o api dealing low-level i/o file stream	__label__nonDir
provides method implementation access identity object method wa invoked	__label__nonDir
field provided standard table taken annex k jpeg specification	__label__nonDir
provides class htmleditorkit supporting class creating html text editor	__label__nonDir
creates new color darker version color	__label__nonDir
return maximum size separator	__label__nonDir
return ascent graphicattribute	__label__nonDir
base filename	__label__nonDir
description copied class container	__label__nonDir
creates listener responsible update ui based tree change	__label__nonDir
return first longest-waiting thread queue null thread currently queued	__label__nonDir
constant roman character function key	__label__nonDir
description copied class number	__label__nonDir
sole constructor	__label__nonDir
portable interceptor current also known picurrent merely slot table slot used service transfer context data context request reply service context	__label__nonDir
indicates whether fontrendercontext object measure text transformed render context	__label__nonDir
method public implementation side effect	__label__nonDir
check field represents component time	__label__nonDir
tracking	__label__nonDir
class parsing processing keyinfo element structure	__label__nonDir
jseparator provides general purpose component implementing divider line commonly used divider menu item break logical grouping	__label__nonDir
flip last card container	__label__nonDir
construct empty deque	__label__nonDir
small toolkit class support lock-free thread-safe programming single variable	__label__nonDir
return class id ui	__label__nonDir
extends class java.util.zip.zipoutputstream support writing optional manifest entry	__label__nonDir
return image get pixel data specified file	__label__nonDir
holder int	__label__nonDir
constructor concrete subclass call	__label__nonDir
make component displayable connecting native screen resource	__label__nonDir
information holder file see generated file holder file	__label__nonDir
visit uniontype element calling visitunknown	__label__nonDir
generated idl-to-java compiler portable version src/share/classes/org/omg/portableinterceptor/iop.idl monday january pm pst	__label__nonDir
service provider interface spi imageinputstreams	__label__nonDir
return new general-purpose numberformat instance specified locale	__label__nonDir
set attribute control print job	__label__nonDir
reset treestate instance based tree providing look feel	__label__nonDir
period added multiple unit	__label__nonDir
multiplexing ui used combine rootpaneuis	__label__nonDir
set designated parameter given reader object given number character long	__label__nonDir
obtains clock return current instant ticking whole minute using best available system clock	__label__nonDir
remove itemlistener	__label__nonDir
contains minor code give detailed information caused exception completion status	__label__nonDir
register observer called change happen content backing cursor	__label__nonDir
set scroll offset pixel	__label__nonDir
creates object responsible managing expanded well size node	__label__nonDir
return horizontal x position event relative source component	__label__nonDir
selects last item path try edit	__label__nonDir
standard way representing multicomponent profile	__label__nonDir
provides support rmi object activation	__label__nonDir
simple filter interface used serviceregistry.getserviceproviders select provider matching arbitrary criterion	__label__nonDir
dragsourcelistener defines event interface originator drag drop operation track state user gesture provide appropriate drag feedback user throughout drag drop operation	__label__nonDir
 @param map the map to decorate, must not be null	__label__NotNullDirective
 For instance, for types Http, and Socks, a SocketAddress must be provided.	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @throws IllegalArgumentException if the buffer is null	__label__NotNullDirective
 @throws IllegalArgumentException if list is null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 throws IllegalArgumentException if list is null	__label__NotNullDirective
 @throws IllegalArgumentException if list is null	__label__NotNullDirective
 @param iterator the iterator to decorate, must not be null	__label__NotNullDirective
 @param entry the Map.Entry to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if bag or transformer is null	__label__NotNullDirective
 @throws IllegalArgumentException if the key array is null	__label__NotNullDirective
 @param keys the array of keys, not null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param coll1 the first collection, must not be null	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param collection the collection to decorate, must not be null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 or if this map does not permit null keys or values, and the specified map contains null keys or values.	__label__NotNullDirective
 @throws IllegalArgumentException if the Map is null	__label__NotNullDirective
 @throws NullPointerException if map is null	__label__NotNullDirective
 This implementation uses the equals method and assumes neither value is null.	__label__NotNullDirective
 @throws IllegalArgumentException if the Map or Transformer is null	__label__NotNullDirective
 @param buffer the buffer to synchronize, must not be null	__label__NotNullDirective
 @param transformer the transformer for the bag, must not be null	__label__NotNullDirective
 @param transformer the transformer for the set, must not be null	__label__NotNullDirective
 @param predicate the predicate for the sorted set, must not be null	__label__NotNullDirective
 @param transformer the transformer for the set, must not be null	__label__NotNullDirective
 @param coll the collection to decorate, must not be null	__label__NotNullDirective
 @param map the sorted map to make unmodifiable, must not be null	__label__NotNullDirective
 @param map the map to make lazy, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param b the second collection, must not be null	__label__NotNullDirective
 The map must be empty and non-null.	__label__NotNullDirective
 @throws NullPointerException if either node is null	__label__NotNullDirective
 @throws NullPointerException if array is null	__label__NotNullDirective
 @throws IllegalArgumentException if the Map is null	__label__NotNullDirective
 @throws IllegalArgumentException if the Set or Predicate is null	__label__NotNullDirective
 @param predicate the predicate to run each time in the transformer, not null	__label__NotNullDirective
 @param factory the factory to run each time in the transformer, not null	__label__NotNullDirective
 @throws IllegalArgumentException if the buffer is null	__label__NotNullDirective
 @throws NullPointerException if the stream is null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 null means catalog name should not be used to narrow down the search.	__label__NullSemanticsDirective
 @param bindings The new array of bindings; may be null.	__label__NullSemanticsDirective
 null means drop schema name from the selection criteria	__label__NullSemanticsDirective
 Specify null to return all CRLs (if supported).	__label__NullSemanticsDirective
 null means that the schema name should not be used to narrow the search	__label__NullSemanticsDirective
 @param envp array of strings, each element of which has environment variable settings in the format name=value, or null if the subprocess should inherit the environment of the current process.	__label__NullSemanticsDirective
 @param envp array of strings, each element of which has environment variable settings in the format name=value, or null if the subprocess should inherit the environment of the current process.	__label__NullSemanticsDirective
 @param array an array to populate from, null ignored	__label__NullSemanticsDirective
 @param valuePredicate the predicate to validate to values, null means no check	__label__NullSemanticsDirective
 @param valueTransformer the transformer to use for value conversion, null means no transformation	__label__NullSemanticsDirective
 @param keyPred the predicate for keys, null means no check	__label__NullSemanticsDirective
 @param keyTransformer the transformer to use for key conversion, null means no conversion	__label__NullSemanticsDirective
 @param defaultTransformer the transformer to use if no match, null means return null	__label__NullSemanticsDirective
 A null input object is accepted and will return true the first time, and false subsequently as well.	__label__NullSemanticsDirective
 @param cause the underlying reason for this SQLException (which is saved for later retrieval bythe getCause() method); may be null indicating the cause is non-existent or unknown.	__label__NullSemanticsDirective
 @param params parameters for the Policy, which may be null.	__label__NullSemanticsDirective
 @param input the {@link Iterable} to get the input from, may be null	__label__NullSemanticsDirective
 Constructs an UnboundedFifoBuffer with the specified number of elements. The integer must be a positive integer.	__label__NumberRangeDirective
 @param size must be non-negative, and the sum position + size must be non-negative	__label__NumberRangeDirective
 The unit increment must be greater than zero.	__label__NumberRangeDirective
 The index must be a value greater than or equal to { 0} and less than the current size of the vector.	__label__NumberRangeDirective
 @param threshold the new threshold value in bytes. Must be non-negative.	__label__NumberRangeDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__NumberRangeDirective
 @param v 0 if the cookie should comply with the original Netscape specification; 1 if the cookie should comply with RFC 2965/2109	__label__NumberRangeDirective
 A negative value for the ttl will result in an IllegalArgumentException being thrown.	__label__NumberRangeDirective
 @param id the thread ID of the thread. Must be positive.	__label__NumberRangeDirective
 @param keyType the type of reference to use for keys; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 Must be in [0, numberOfLines] – note the inclusive end; there may be a hunk with line == numberOfLines to describe deleted lines at then end of the document.	__label__NumberRangeDirective
 The characters in the string must all be digits of the specified radix (as determined by whether {@link java.lang.Character#digit(char, int)} returns a nonnegative value), except that the first character may be an ASCII minus sign '-' ('\u002D') to indicate a negative value	__label__StringFormatDirective
 If the authority contains a literal IPv6 address then the address must be enclosed in square brackets ('[' and ']').	__label__StringFormatDirective
 If a scheme is given then the path, if also given, must either be empty or begin with a slash character ('/').	__label__StringFormatDirective
 The filename argument must be a complete path name.	__label__StringFormatDirective
 The name must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)	__label__StringFormatDirective
 The baseName argument should be a fully qualified class name.	__label__StringFormatDirective
 Note: The World Wide Web Consortium Recommendation states that UTF-8 should be used. Not doing so may introduce incompatibilites.	__label__StringFormatDirective
 @param mxbeanName the name of a platform MXBean within connection to forward to. mxbeanName must be in the format of {@link ObjectName ObjectName}.	__label__StringFormatDirective
 In the case of a certificate factory for X.509 certificates, the certificate provided in inStream must be DER-encoded and may be supplied in binary or printable (Base64) encoding. If the certificate is provided in Base64 encoding, it must be bounded at the beginning by -----BEGIN CERTIFICATE-----, and must be bounded at the end by -----END CERTIFICATE-----.	__label__StringFormatDirective
 To be portable, applications must give the SQL type code and the fully-qualified SQL type name when specifying a NULL user-defined or REF parameter.	__label__StringFormatDirective
 @param ID the ID for a TimeZone, either an abbreviation such as "PST", a full name such as "America/Los_Angeles", or a custom ID such as "GMT-8:00". Note that the support of abbreviations is for JDK 1.1.x compatibility only and full names should be used.	__label__StringFormatDirective
 This class also accepts dangling brackets but is strict about dangling metacharacters like +, ? and *, and will throw a {@link PatternSyntaxException} if it encounters them.	__label__StringFormatDirective
 @param contentAssistant the content assistant which implements {@link IContentAssistantExtension2} and {@link IContentAssistantExtension4}	__label__MethodParameterTypeDirective
 The key must implement Comparable.	__label__MethodParameterTypeDirective
 The createGroup method has two requirements on the group to be created: 1) the group must be a concrete subclass of ActivationGroup, and 2) the group must have a constructor that takes two arguments:      the group's ActivationGroupID, and     the group's initialization data (in a java.rmi.MarshalledObject)	__label__MethodParameterTypeDirective
 The second parameter must be of type Object; therefore, the java.lang equivalent objects should be used for built-in types.	__label__MethodParameterTypeDirective
 If the object is of a class implementing the interface SQLData, the JDBC driver should call the method SQLData.writeSQL to write it to the SQL data stream. If, on the other hand, the object is of a class implementing Ref, Blob, Clob, NClob, Struct, java.net.URL, RowId, SQLXML or Array, the driver should pass it to the database as a value of the corresponding SQL type.	__label__MethodParameterTypeDirective
 @throws ClassCastException if the key or value is of an invalid type	__label__MethodParameterTypeDirective
 If the system property java.util.jar.Pack200.Unpacker is defined, then the value is taken to be the fully-qualified name of a concrete implementation class, which must implement Unpacker.	__label__MethodParameterTypeDirective
 @throws ClassCastException if the key is of an invalid type	__label__MethodParameterTypeDirective
 @throws ArrayStoreException if the runtime type of the specified array is not a supertype of the runtime type of every element in this list	__label__MethodParameterTypeDirective
 @throws ArrayStoreException if the runtime type of a is not a supertype of the runtime type of every element in this Vector	__label__MethodParameterTypeDirective
 The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case null is placed in all elements of the copy whose index is greater than or equal to original.length - from.	__label__MethodParameterCorrelationDirective
 If the underlying keystore implementation is of type jks, key must be encoded as an EncryptedPrivateKeyInfo as defined in the PKCS #8 standard.	__label__MethodParameterCorrelationDirective
 All elements in the array must be mutually comparable by the specified comparator (that is, c.compare(e1, e2) must not throw a ClassCastException for any elements e1 and e2 in the array)	__label__MethodParameterCorrelationDirective
 The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case 0f is placed in all elements of the copy whose index is greater than or equal to original.length - from.	__label__MethodParameterCorrelationDirective
 @throws IllegalArgumentException if end index is before the start	__label__MethodParameterCorrelationDirective
 If name is not null, it must be equal to the binary name of the class specified by the byte array "b", otherwise a {@link NoClassDefFoundError} will be thrown.	__label__MethodParameterCorrelationDirective
 @throws IllegalArgumentException if end index is before the start	__label__MethodParameterCorrelationDirective
 The reader must contain the number of characters specified by length otherwise a SQLException will be generated when the CallableStatement is executed.	__label__MethodParameterCorrelationDirective
 This value should not be cached, as it may be changed by a call to setPolicy.	__label__Post-CallDirective
 The returned parameter object must be initialized via a call to init, using an appropriate parameter specification or parameter encoding.	__label__Post-CallDirective
 @return the dialog, after being closed by the user, which the client can only call getReturnCode() or getToggleState()	__label__Post-CallDirective
 Any color allocated in this manner must be disposed by calling {@link #destroyColor(RGB)}, or by an eventual call to {@link #dispose()}. {@link Color#dispose()} must never been called directly on the returned color.	__label__Post-CallDirective
 Return a list of controls which should never have their foreground color reset.	__label__Post-CallDirective
 Because the actual set of threads may change dynamically while constructing this result, the returned collection is only a best-effort estimate.	__label__ReturnValueDirective
 @return A map of triggers (TriggerSequence) to bindings (Binding). This map may be empty, but it is never null.	__label__ReturnValueDirective
 @return {@link String} or null if the tool tip text was never set.	__label__ReturnValueDirective
 @return An array of the command options which will be passed to the new child command by rmid. Note that rmid may add other options before or after these options, or both. Never returns null.	__label__ReturnValueDirective
 Returns the viewer represented by this target, never null.	__label__ReturnValueDirective
 @return an integer array of 3 elements. The first element must be greater than 0. The second element must be must be greater than 0. The third element must be either 3 or 4.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.	__label__ReturnValueDirective
 Returns an array of all locales for which the getInstance methods of this class can return localized instances. It must contain at least a Locale instance equal to {@link java.util.Locale#US Locale.US}	__label__ReturnValueDirective
 If this set makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.	__label__ReturnValueDirective
 The returned control's layout data must be an instance of GridData.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.	__label__ReturnValueDirective
 How many digits must be printed for the fractional part of m or a? There must be at least one digit to represent the fractional part, and beyond that as many, but only as many, more digits as are needed to uniquely distinguish the argument value from adjacent values of type double. That is, suppose that x is the exact mathematical value represented by the decimal representation produced by this method for a finite nonzero argument d. Then d must be the double value nearest to x; or if two double values are equally close to x, then d must be one of them and the least significant bit of the significand of d must be 0.	__label__ReturnValueDirective
 *  The computed result must be within 2.5 ulps of the exact result. The result of tanh for any finite input must have an absolute value less than or equal to 1. Note that once the exact result of tanh is within 1/2 of an ulp of the limit value of ±1, correctly signed ±1.0 should be returned.	__label__ReturnValueDirective
 If a superinterface is a parameterized type, the Type object returned for it must accurately reflect the actual type parameters used in the source code.	__label__ReturnValueDirective
 It must be unique for each certificate issued by a given CA (i.e., the issuer name and serial number identify a unique certificate).	__label__ReturnValueDirective
 The key must have been associated with the alias by a call to setKeyEntry, or by a call to setEntry with a PrivateKeyEntry or SecretKeyEntry.	__label__ReturnValueDirective
 Subclasses should always return actions in what they consider to be their canonical form.	__label__ReturnValueDirective
 If this collection makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.	__label__ReturnValueDirective
 The first element of each pair is the key, which must be a String, and the second element is the value associated with that key.	__label__ReturnValueDirective
 Note that once the exact result of ex - 1 is within 1/2 ulp of the limit value -1, -1.0 should be returned.	__label__ReturnValueDirective
 The returned information control creator must create information controls that implement {@link IInformationControlExtension3} and {@link IInformationControlExtension2}, and whose {@link IInformationControlExtension2#setInput(Object)} accepts all inputs that are also supported by this information control.	__label__ReturnValueDirective
 It is the responsibility of the implementor to fully format the message before returning it.	__label__ReturnValueDirective
 The list returned by this method must have at least one String.	__label__ReturnValueDirective
 If this set makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.	__label__ReturnValueDirective
 A return value of 0 indicates that needsInput() should be called in order to determine if more input data is required.	__label__ReturnValueDirective
 @return the array this iterator iterates over, or null if the no-arg constructor was used and {@link #setArray(Object)} has never been called with a valid array.	__label__ReturnValueDirective
 In other words, this method must allocate a new array	__label__ReturnValueDirective
 @return true if this call changed the collection	__label__ReturnValueDirective
 Even under these circumstances it is generally better to simply ignore the invocation and return, rather than throwing an exception.	__label__ReturnValueDirective
 Returns the greatest key strictly less than the given key, or { null} if there is no such key.	__label__ReturnValueDirective
 This field should not be referenced by subclasses.	__label__MethodCallVisibilityDirective
 Applications are discouraged from calling this method since this operation may not be supported by all policy implementations.	__label__MethodCallVisibilityDirective
 Denigrated, use {@linkplain #getSubject()} or {@linkplain #getSubjectAsBytes()} instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.	__label__MethodCallVisibilityDirective
 Constructor only used in deserialization, do not use otherwise.	__label__MethodCallVisibilityDirective
 Constructor only used in deserialization, do not use otherwise.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 As of 3.4, you should only call this method if you want to override the {@link JFacePreferences#CONTENT_ASSIST_FOREGROUND_COLOR}.	__label__MethodCallVisibilityDirective
 Users of SWT.VIRTUAL should also avoid using getItems() from the Table within the TreeViewer as this does not necessarily generate a callback for the TreeViewer to populate the items. It also has the side effect of creating all of the items thereby eliminating the performance improvements of SWT.VIRTUAL.	__label__MethodCallVisibilityDirective
 Note, the keeper must not call releaseWidgetToken(IWidgetTokenKeeper) explicitly.	__label__MethodCallVisibilityDirective
 It should never be accessed by application code.	__label__MethodCallVisibilityDirective
 @noinstantiate This class is not intended to be instantiated by clients.	__label__MethodCallVisibilityDirective
 This class is for Preferences implementers only. Normal users of the Preferences facility should have no need to consult this documentation.	__label__MethodCallVisibilityDirective
 For sequential access data (such as a linked list), {@link AbstractSequentialList} should be used in preference to this class.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 {@link CoolBarManager}, which clients may instantiate or subclass.	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 This concrete dialog class can be instantiated as is	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 Clients may call this framework method	__label__MethodCallVisibilityDirective
 @exception ZipException if a ZIP format error has occurred	__label__ExceptionRaisingDirective
 @throws ConcurrentModificationException If the list's modification count isn't the value that was expected.	__label__ExceptionRaisingDirective
 @throws SecurityException If a security manager exists and its checkPermission method doesn't allow access to the system class loader. @throws IllegalStateException If invoked recursively during the construction of the class loader specified by the "java.system.class.loader" property. @throws Error If the system property "java.system.class.loader" is defined but the named class could not be loaded, the provider class does not define the required constructor, or an exception is thrown by that constructor when it is invoked. The underlying cause of the error can be retrieved via the {@link Throwable#getCause()} method.	__label__ExceptionRaisingDirective
 @throws SecurityException If a required system property value cannot be accessed. @see java.io.File#isAbsolute()	__label__ExceptionRaisingDirective
 @throws IOException if I/O errors occur while writing to the underlying stream	__label__ExceptionRaisingDirective
 @throws IllegalFormatException If a format string contains an illegal syntax, a format specifier that is incompatible with the given arguments, insufficient arguments given the format string, or other illegal conditions. For specification of all possible formatting errors, see the Details section of the formatter class specification. @throws FormatterClosedException If this formatter has been closed by invoking its {@link #close()} method	__label__ExceptionRaisingDirective
 @exception IOException If the stream has not been marked, or if the mark has been invalidated, or if the stream does not support reset(), or if some other I/O error occurs	__label__ExceptionRaisingDirective
 @exception SecurityException If a security manager, s, is present and any of the following conditions is met:      invocation of {@link SecurityManager#checkMemberAccess s.checkMemberAccess(this, Member.PUBLIC)} denies access to the fields within this class     the caller's class loader is not the same as or an ancestor of the class loader for the current class and invocation of {@link SecurityManager#checkPackageAccess s.checkPackageAccess()} denies access to the package of this class	__label__ExceptionRaisingDirective
 This constructor also must throw an IllegalArgumentException if it does not understand the Policy.Parameters input.	__label__ExceptionRaisingDirective
 @throws IllegalMonitorStateException if acquiring would place this synchronizer in an illegal state. This exception must be thrown in a consistent fashion for synchronization to work correctly.	__label__ExceptionRaisingDirective
 @throws org.eclipse.swt.SWTException in these cases:      * {@link org.eclipse.swt.SWT#ERROR_WIDGET_DISPOSED} - if the receiver has been disposed     * {@link org.eclipse.swt.SWT#ERROR_THREAD_INVALID_ACCESS} - if not called from the thread that created the receiver	__label__ExceptionRaisingDirective
 Any attempts to modify the children of this node through the Iterator's remove method must throw an UnsupportedOperationException.	__label__ExceptionRaisingDirective
 This iterator does not support modification of its backing collection, and so will always throw an {@link UnsupportedOperationException} when this method is invoked.	__label__ExceptionRaisingDirective
 @throws IllegalStateException if the element cannot be added at this time due to capacity restrictions @throws ClassCastException if the class of the specified element prevents it from being added to this queue @throws NullPointerException if the specified element is null @throws IllegalArgumentException if some property of the specified element prevents it from being added to this queue	__label__ExceptionRaisingDirective
 A URL must be absolute, that is, it must always specify a scheme	__label__MiscellaneousMethodCallDirective
 The list must be sorted into ascending order according to the {@linkplain Comparable natural ordering} of its elements (as by the {@link #sort(List)} method) prior to making this call.	__label__MiscellaneousMethodCallDirective
 Gets a Transformer that invokes a method on the input object. The method must have no parameters.	__label__MiscellaneousMethodCallDirective
 @param p the proxy through which the connection will be made. If direct connection is desired, Proxy.NO_PROXY should be specified	__label__MiscellaneousMethodCallDirective
 The map must not be null and should be empty or only contain valid keys.	__label__MiscellaneousMethodCallDirective
 The map must be empty and non-null.	__label__MiscellaneousMethodCallDirective
 @param info a list of arbitrary string tag/value pairs as connection arguments; normally at least a "user" and "password" property should be included	__label__MiscellaneousMethodCallDirective
 To instantiate a PKIXBuilderParameters object, an application must specify one or more most-trusted CAs as defined by the PKIX certification path validation algorithm.	__label__MiscellaneousMethodCallDirective
 @param table a table name; must match the table name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param table a table name; must match the table name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param caller the principal invoking this method. It must be an owner of this ACL.	__label__MiscellaneousMethodCallDirective
 Fixed-delay execution is appropriate for recurring activities that require "smoothness." In other words, it is appropriate for activities where it is more important to keep the frequency accurate in the short run than in the lon	__label__MiscellaneousMethodCallDirective
 @param originalDevice must be the same Device that was passed into the font's constructor when it was first created.	__label__MiscellaneousMethodCallDirective
 Clients must not implement this interface and must not extend.	__label__ExtensibleClassIdentificationDirective
 it is not intended to be subclassed outside the framework.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 Clients may instantiate and extend this class.	__label__ExtensibleClassIdentificationDirective
 This class provides some overridable methods to allow clients to manually control the popup.	__label__ExtensibleClassIdentificationDirective
 There are two ways to create a new thread of execution. One is to declare a class to be a subclass of Thread. This subclass should override the run method of class Thread.	__label__ExtensibleClassIdentificationDirective
 The interface can be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 This interface must be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 This interface can be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 Clients usually implement this interface and its extension interfaces.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 An abstract implementation of a hash-based map which provides numerous points for subclasses to override.	__label__ExtensibleClassIdentificationDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 Subclasses may extend this method	__label__MethodOverridingDirective
 Subclasses may reimplement or extend.	__label__MethodOverridingDirective
 Subclasses must implement the createContents framework method to supply the page's main control.	__label__MethodOverridingDirective
 getShellListener- extend or reimplement to receive shell events	__label__MethodOverridingDirective
 Subclasses may replace or extend.	__label__MethodOverridingDirective
 extend addPages	__label__MethodOverridingDirective
 Subclasses may reimplement.	__label__MethodOverridingDirective
 Subclasses may reimplement this method.	__label__MethodOverridingDirective
 Subclasses should reimplement.	__label__MethodOverridingDirective
 Subclasses may reimplement this method to provide non-trivial categorization.	__label__MethodOverridingDirective
 the iterator returned by entrySet().iterator() must additionally implement its remove method.	__label__MethodOverridingDirective
 Subclasses should override this method if they need information from the triggering event, or override run() if not.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override this method.	__label__MethodOverridingDirective
 Subclasses should override this method when they wish to persist the bounds of the dialog.	__label__MethodOverridingDirective
 Subclasses should override this method to specific state checks.	__label__MethodOverridingDirective
 Subclasses may override but must call super.doFillIntoGrid.	__label__MethodOverridingDirective
 Subclasses must implement this method to provide a corresponding new string for the text field.	__label__MethodOverridingDirective
 Subclasses must implement this method to adjust the horizontal span of controls so they appear correct in the given number of columns.	__label__MethodOverridingDirective
 Subclasses must implement this method to properly initialize the field editor.	__label__MethodOverridingDirective
 Subclasses must implement the getSize and fill methods.	__label__MethodOverridingDirective
 May be extended by subclasses.	__label__MethodOverridingDirective
 May be extended by subclasses.	__label__MethodOverridingDirective
 An implementation of this interface should implement {@link Object#equals} to return true when passed an instance that represents the same (functionally equivalent) server socket factory, and false otherwise (and it should also implement {@link Object#hashCode} consistently with its Object.equals implementation).	__label__MethodOverridingDirective
 This method should be overridden by subclasses.	__label__MethodOverridingDirective
 Subclasses may override this method to customize the tool bar manager.	__label__MethodOverridingDirective
 Subclasses may override to clean up requested system resources	__label__MethodOverridingDirective
 This framework method must be implemented by concrete subclasses.	__label__MethodOverridingDirective
 Implementators of {@link ColumnViewer} should overwrite this method if their widget supports reordered columns	__label__MethodOverridingDirective
 An important method that must be implemented by each subclass is the implies method to compare Permissions.	__label__MethodOverridingDirective
 Subclasses which handle different rounding modes should override this method.	__label__MethodOverridingDirective
 This method should be overridden if a refresh operation is supported by the policy implementation.	__label__MethodOverridingDirective
 Subclasses should override this method with a correct implementation.	__label__MethodOverridingDirective
 Subclasses should override this method with a correct implementation.	__label__MethodOverridingDirective
 Subclasses must implement this method to provide drop behavior.	__label__MethodOverridingDirective
 To be implemented by subclasses.	__label__MethodOverridingDirective
 Subclasses should override.	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses must implement this method.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Class loader implementations should override this method to specify where to find resources.	__label__MethodOverridingDirective
 lass loader implementations should override this method to specify where to load resources from.	__label__MethodOverridingDirective
 This method merely returns its input argument, and should be overridden if a different behavior is desired.	__label__MethodOverridingDirective
 To implement a modifiable list, the programmer must additionally override the {@link #set(int, Object) set(int, E)} method (which otherwise throws an { UnsupportedOperationException}).	__label__MethodOverridingDirective
 Subclasses may override if they have a specific field that must be present on read before this implementation will work.	__label__MethodOverridingDirective
 Subclasses may override if the subclass has a specific field that must be present before put() or calculateThreshold() will work correctly.	__label__MethodOverridingDirective
 Subclasses can override this to return iterators with different properties.	__label__MethodOverridingDirective
 This method can be overridden to perform your own processing instead of using the factory.	__label__MethodOverridingDirective
 Subclassers should call setShellStyle to change this value, rather than overriding this method.	__label__MethodOverridingDirective
 @nooverride This method is not intended to be re-implemented or extended by clients.	__label__MethodOverridingDirective
 Clients should not override it.	__label__MethodOverridingDirective
 Subclasses must call super.itemRemoved	__label__MethodExtensionDirective
 Subclasses should call the super implementation	__label__MethodExtensionDirective
 Applications that override this method need not call super.paint(g)	__label__MethodExtensionDirective
 super.updateSelection must be invoked.	__label__MethodExtensionDirective
 isPageComplete - may be extended	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkConnect at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 Subclasses may extend but must call the super implementation.	__label__MethodExtensionDirective
 Subclasses may call super as in the following example:	__label__MethodExtensionDirective
 All subclasses must call this method when their control is first established.	__label__CallContractSubclassingDirective
 Subclasses may call the following methods to configure the wizard:      * addPage     * setHelpAvailable     * setDefaultPageImageDescriptor     * setDialogSettings     * setNeedsProgressMonitor     * setTitleBarColor     * setWindowTitle	__label__CallContractSubclassingDirective
 Subclasses that support fields should override this and create an AttributedCharacterIterator with meaningful attributes.	__label__CallContractSubclassingDirective
 Subclasses MUST use try ...finally as follows to ensure that the busy flag is reset to its original value:   boolean oldBusy = isBusy();  setBusy(true);  try {   // do work  } finally {   setBusy(oldBusy);  }	__label__CallContractSubclassingDirective
 This method should be called by implementers of ILazyTreeContentProvider to populate this viewer.	__label__CallContractSubclassingDirective
 If the ThreadGroup object has no special requirements for dealing with the exception, it can forward the invocation to the {@linkplain #getDefaultUncaughtExceptionHandler default uncaught exception handler}.	__label__CallContractSubclassingDirective
 When processing logging output, if a Handler encounters problems then rather than throwing an Exception back to the issuer of the logging call (who is unlikely to be interested) the Handler should call its associated ErrorManager.	__label__CallContractSubclassingDirective
 If the scale is reduced by the operation, the unscaled value must be divided (rather than multiplied), and the value may be changed; in this case, the specified rounding mode is applied to the division.	__label__MethodImplementationDirective
 In other words, this method must allocate a new array	__label__MethodImplementationDirective
 The general contract for the Object.equals method states that equals must be symmetric (in other words, a.equals(b) if and only if b.equals(a)).	__label__MethodImplementationDirective
 BasicPermission objects must be stored in a manner that allows them to be inserted in any order,	__label__MethodImplementationDirective
 Creating a type variable must not cause the creation of its bounds. Repeated creation of a type variable has no effect.	__label__MethodImplementationDirective
 When a subclass is replacing objects it must insure that either a complementary substitution must be made during deserialization or that the substituted object is compatible with every field where the reference will be stored.	__label__MethodImplementationDirective
 A Key should use KeyRep as its serialized representation.	__label__MethodImplementationDirective
 The hashCode method of the returned set returns the sum of the identity hashcodes of the elements in the set, rather than the sum of their hashcodes. This is mandated by the change in the semantics of the equals method, in order to enforce the general contract of the Object.hashCode method among sets returned by this method.	__label__MethodImplementationDirective
 This method simply informs the group's monitor that the object is inactive. It is up to the concrete subclass of ActivationGroup to fulfill the additional requirement of unexporting the object.	__label__MethodImplementationDirective
 The byte array will be in big-endian byte-order: the most significant byte is in the zeroth element. The array will contain the minimum number of bytes required to represent this BigInteger, including at least one sign bit, which is { (ceil((this.bitLength() + 1)/8))}.	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if fromElement or toElement cannot be compared to elements currently in the set	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if { toKey} cannot be compared to keys currently in the map.	__label__MethodImplementationDirective
 If the protocol of this URL is "jar", then the permission granted is based on the permission that is required by the URL of the Jar file.	__label__MethodImplementationDirective
 If no such object exists, the map should be "wrapped" using the {@link Collections#synchronizedMap Collections.synchronizedMap} method.	__label__MethodImplementationDirective
 This test must be fast and optimistic i.e. it is OK to return true even though there might be no quick fix.	__label__MethodImplementationDirective
 If the security property is not set, the provider is assumed to have alternative means for obtaining authentication information.	__label__MethodImplementationDirective
 If you reimplement this method, you should also reimplement updateContents.	__label__Non-localConsistencySubclassingDirective
 An implementation of this interface should implement {@link Object#equals} to return true when passed an instance that represents the same (functionally equivalent) server socket factory, and false otherwise (and it should also implement {@link Object#hashCode} consistently with its Object.equals implementation).	__label__Non-localConsistencySubclassingDirective
 The general contract for write(b) is that it should have exactly the same effect as the call write(b, 0, b.length).	__label__Non-localConsistencySubclassingDirective
 The natural ordering for a class C is said to be consistent with equals if and only if e1.compareTo(e2) == 0 has the same boolean value as e1.equals(e2) for every e1 and e2 of class C.	__label__Non-localConsistencySubclassingDirective
 The visibility of the details button is controlled by {@link #shouldShowDetailsButton()}, which should also be overridden together with this method.	__label__Non-localConsistencySubclassingDirective
 Implementors of {@link ColumnViewer} have to provide a concrete implementation for the underlying widget	__label__Non-localConsistencySubclassingDirective
 An implementation of this interface must define a compareTo method that provides an ordering consistent with its getDelay method	__label__Non-localConsistencySubclassingDirective
 Note that the ordering maintained by a sorted map (whether or not an explicit comparator is provided) must be consistent with equals if this sorted map is to correctly implement the Map interface.	__label__Non-localConsistencySubclassingDirective
 This API is only valid if the information control implements {@link org.eclipse.jface.text.IInformationControlExtension3}. Not following this restriction will later result in an {@link UnsupportedOperationException}	__label__Non-localConsistencySubclassingDirective
 A character may start a Unicode identifier if and only if one of the following conditions is true:      {@link #isLetter(int) isLetter(codePoint)} returns true     {@link #getType(int) getType(codePoint)} returns LETTER_NUMBER.	__label__Non-localConsistencySubclassingDirective
 If you reimplement this method, you should also reimplement createContents.	__label__MiscellaneousSubclassingDirective
 The resolveClass method in the corresponding subclass of ObjectInputStream must read and use any data or objects written by annotateClass	__label__MiscellaneousSubclassingDirective
 When a subclass is replacing objects it must insure that either a complementary substitution must be made during deserialization or that the substituted object is compatible with every field where the reference will be stored.	__label__MiscellaneousSubclassingDirective
 ObjectInputStream subclasses which override this method can only be constructed in security contexts possessing the "enableSubclassImplementation" SerializablePermission; any attempt to instantiate such a subclass without this permission will cause a SecurityException to be thrown.	__label__MiscellaneousSubclassingDirective
 It must be {@linkplain java.io.PipedWriter#connect( java.io.PipedReader) connected} to a PipedWriter before being used.	__label__MethodCallSequenceDirective
 You must add at least one Comparator before calling the compare(Object,Object) method	__label__MethodCallSequenceDirective
 The client must also make a dirty call to renew leases on remote references before such leases expire	__label__MethodCallSequenceDirective
 A failed dirty call must schedule a strong clean call so that the call's sequence number can be retained in order to detect future calls received out of order by the distributed garbage collector	__label__MethodCallSequenceDirective
 This should be called whenever needsInput() returns true indicating that more input data is required.	__label__MethodCallSequenceDirective
 At a minimum, the recovery operation must include closing the current connection and getting a new connection.	__label__MethodCallSequenceDirective
 This method will only work when it is invoked after the control of the dialog has been set	__label__MethodCallSequenceDirective
 The option must be enabled prior to entering the blocking operation to have effect.	__label__MethodCallSequenceDirective
 applet should avoid calling methods in java.applet.Applet in the constructor.	__label__MethodCallSequenceDirective
 This method may only be called after initializeDialogUnits has been called.	__label__MethodCallSequenceDirective
 HTTP protocol implementers should make sure that this method is called after all request headers related to choosing cookies are added, and before the request is sent.	__label__MethodCallSequenceDirective
 All OUT parameters must be registered before a stored procedure is executed.	__label__MethodCallSequenceDirective
 This method must be called before any of the dialog unit based conversion methods are called.	__label__MethodCallSequenceDirective
 This method can be called once per call to next().	__label__MethodCallSequenceDirective
 Note: {@link ListIterator} implementations that support add() and remove() only allow set() to be called once per call to next() or previous (see the {@link ListIterator} javadoc for more details).	__label__MethodCallSequenceDirective
 You will normally use {@link #addIterator(Iterator)} to add some more iterators after using this constructor.	__label__MethodCallSequenceDirective
 If an activatable object requires restart services, use one of the ActivationDesc constructors that takes a boolean parameter, restart.	__label__MethodCallSequenceDirective
 As the ILazyContentProvider does not have API for determining the total item count any changes to the number of items for this object while require a call to #setItemCount on the viewer that uses it.	__label__MethodCallSequenceDirective
 Note that the dialog will have no visual representation (no widgets) until it is told to open.	__label__MethodCallSequenceDirective
 Prior to 3.0 this method can only be called once. Since 3.0 this method can be called again after a call to {@link ISourceViewerExtension2#unconfigure()}.	__label__MethodCallSequenceDirective
 Note that all preference nodes must be dispose their resources. The node must dispose the page managed by this node, and any SWT resources allocated by this node (Images, Fonts, etc). However the node itself may be reused.	__label__MethodCallSequenceDirective
 If the resource is intended to live for entire lifetime of the resource manager, a subsequent call to {@link #destroy(DeviceResourceDescriptor)} may be omitted and the resource will be cleaned up when the resource manager is disposed. This pattern is useful for short-lived {@link LocalResourceManager}s, but should never be used with the global resource manager since doing so effectively leaks the resource.	__label__MethodCallSequenceDirective
 If fork is set to false, the runnable will run in the UI thread and it is the runnable's responsibility to call Display.readAndDispatch() to ensure UI responsiveness.	__label__MethodCallSequenceDirective
 In other words, if this method were to be called twice in succession, the second call would return false (unless the current thread were interrupted again, after the first call had cleared its interrupted status and before the second call had examined it).	__label__MethodCallSequenceDirective
 This method can only be called once the connection has been completely verified by reading from the input stream until the end of the stream has been reached.	__label__MethodCallSequenceDirective
 Once the client is done with a wizard node, its disposemethod must be called to free up the wizard; once disposes, the node should no longer be used.	__label__MethodCallSequenceDirective
 It is important not to use the original set after invoking this method, as it is a backdoor for adding untransformed objects.	__label__MethodCallSequenceDirective
 It is important not to use the original bag after invoking this method, as it is a backdoor for adding invalid objects.	__label__MethodCallSequenceDirective
 Must be called before start. May again be called between start and stop.	__label__MethodCallSequenceDirective
 This method must be called before this window's shell is created.	__label__MethodCallSequenceDirective
 Note that multiple calls to formatterStarts can be issued to a strategy before launching the formatting process with format.	__label__MethodCallSequenceDirective
 Calling this method has no effect after createPartControl is called.	__label__MethodCallSequenceDirective
 In this case, these tasks will only terminate upon shutdownNow, or after setting the policy to false when already shutdown.	__label__MethodCallSequenceDirective
 The keys should be immutable If they are not then they must not be changed	__label__NonCall-basedStateDirective
 @param caller the principal invoking this method. It must be an owner of this ACL.	__label__NonCall-basedStateDirective
 @param caller the principal invoking this method. It must be an owner of this ACL.	__label__NonCall-basedStateDirective
 @throws UnsupportedOperationException if the comparator is locked	__label__NonCall-basedStateDirective
 @throws UnsupportedOperationException if no MapMutator has been specified	__label__NonCall-basedStateDirective
 After invoking this method the file or directory is guaranteed not to change until it is either deleted or marked to allow write access.	__label__NonCall-basedStateDirective
 Subclasses should override this method when an alternate default location is desired, rather than overriding {@link #getInitialLocation(Point)}	__label__AlternativeDirective
 Instead, an application should register an activation descriptor and export a remote object separately, so that exceptions can be handled properly.	__label__AlternativeDirective
 Note: this method should not be used for file-locking, as the resulting protocol cannot be made to work reliably. The {@link java.nio.channels.FileLock FileLock} facility should be used instead.	__label__AlternativeDirective
 Inheritable thread-local variables are used in preference to ordinary thread-local variables when the per-thread-attribute being maintained in the variable (e.g., User ID, Transaction ID) must be automatically transmitted to any child threads that are created.	__label__AlternativeDirective
 This interface is used only for computations that throw checked exceptions; computations that do not throw checked exceptions should use PrivilegedAction instead.	__label__AlternativeDirective
 No standard string format is defined for otherNames, X.400 names, EDI party names, IPv6 address names, or any other type of names. They should be specified using the {@link #addPathToName(int type, byte [] name) addPathToName(int type, byte [] name)} method.	__label__AlternativeDirective
 The getLogWriter and setLogWriter methods should be used instead of the get/setlogStream methods, which are deprecated.	__label__AlternativeDirective
 The {@link java.nio.charset.CharsetEncoder} class should be used when more control over the encoding process is required.	__label__AlternativeDirective
 The {@link java.nio.charset.CharsetDecoder} class should be used when more control over the decoding process is required.	__label__AlternativeDirective
 An application might use the activeGroupCount method to get an estimate of how big the array should be, however if the array is too short to hold all the thread groups, the extra thread groups are silently ignored.	__label__AlternativeDirective
 . The modifiers consist of the Java Virtual Machine's constants for public, protected, private, final, static, abstract and interface; they should be decoded using the methods of class Modifier.	__label__AlternativeDirective
 Sometimes a security check that should be made within a given context will actually need to be done from within a different context (for example, from within a worker thread). The {@link SecurityManager#getSecurityContext getSecurityContext} method and the {@link SecurityManager#checkPermission(java.security.Permission, java.lang.Object) checkPermission} method that includes a context argument are provided for this situation.	__label__AlternativeDirective
 Please use {@link org.eclipse.core.runtime.ListenerList} instead.	__label__AlternativeDirective
 Also note that the equivalent of {@link #ListenerList()} is actually {@link org.eclipse.core.runtime.ListenerList#ListenerList(int)} with {@link org.eclipse.core.runtime.ListenerList#IDENTITY} as the argument.	__label__AlternativeDirective
 Label providers for table viewers must implement either the ITableLabelProvider or the ILabelProvider interface (see TableViewer.setLabelProvider for more details).	__label__AlternativeDirective
 Label providers for table tree viewers must implement either the ITableLabelProvider or the ILabelProvider interface (see TableTreeViewer.setLabelProvider for more details).	__label__AlternativeDirective
 Note that LRUMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 slow	__label__AlternativeDirective
 WARNING: This method is binary incompatible with Commons Collections 2.1 and 2.1.1. Use new ArrayIterator(array) for compatability.	__label__AlternativeDirective
 WARNING: This constant is binary incompatible with Commons Collections 2.1 and 2.1.1. Use EmptyIterator.INSTANCE for compatability with Commons Collections 2.1.1.	__label__AlternativeDirective
 In addition, this implementation allows the type of collection used for the values to be controlled. By default, an ArrayList is used, however a Class to instantiate may be specified, or a factory that returns a Collection instance.	__label__AlternativeDirective
 The following extension interfaces exist:      {@link org.eclipse.jface.text.IUndoManagerExtension} since version 3.1 introducing access to the undo context.	__label__AlternativeDirective
 The following extension interfaces exist:      {@link org.eclipse.jface.text.source.ISourceViewerExtension} since version 2.1 introducing the concept of an annotation overview.     {@link org.eclipse.jface.text.source.ISourceViewerExtension2} since version 3.0 allowing source viewers to roll back a previously performed configuration and allows access to the viewer's visual annotation model.     {@link org.eclipse.jface.text.source.ISourceViewerExtension3} since version 3.2 introducing the concept of a quick assist assistant and providing access to the quick assist invocation context as well as the current annotation hover.     {@link org.eclipse.jface.text.source.ISourceViewerExtension4} since version 3.4 introducing API to access a minimal set of content assistant APIs.	__label__AlternativeDirective
 This method has been replaced by {@link ITextViewerExtension2#setTextHover(ITextHover, String, int)}.	__label__AlternativeDirective
 In order to load templates contributed using the org.eclipse.ui.editors.templates extension point, use a ContributionTemplateStore.	__label__AlternativeDirective
 Standard implementations of common closures are provided by {@link ClosureUtils}. These include method invokation and for/while loops.	__label__AlternativeDirective
 Images allocated in this manner must be disposed by {@link #destroyImage(ImageDescriptor)}, and never by calling {@link Image#dispose()}.	__label__AlternativeDirective
 When a very large ASCII value is input to a LONGVARCHAR parameter, it may be more practical to send it via a java.io.InputStream.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of setBinaryStream which takes a length parameter.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of setNCharacterStream which takes a length parameter.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of updateBinaryStream which takes a length parameter.	__label__AlternativeDirective
 @deprecated Use {@link #allPredicate(Predicate<? super T>...)} instead	__label__AlternativeDirective
 Clients are encouraged to use the value returned from this method instead of constructing a new instance to reduce allocation and garbage collection overhead when multiple BooleanComparators may be used in the same virtual machine.	__label__AlternativeDirective
 The three forms of { park} each also support a { blocker} object parameter. This object is recorded while the thread is blocked to permit monitoring and diagnostic tools to identify the reasons that threads are blocked. (Such tools may access blockers using method {@link #getBlocker}.) The use of these forms rather than the original forms without this parameter is strongly encouraged. The normal argument to supply as a { blocker} within a lock implementation is { this}.	__label__AlternativeDirective
 {@link org.eclipse.jface.text.reconciler.IReconcilerExtension} since version 3.0 introducing the ability to be aware of documents with multiple partitionings.	__label__AlternativeDirective
 Note that this method does not clean up references between this tool bar manager and its associated contribution items. Use removeAll for that purpose.	__label__AlternativeDirective
 Note that this method does not clean up references between this menu manager and its associated contribution items. Use removeAll for that purpose.	__label__AlternativeDirective
 These methods are designed to be used as tools for creating higher-level synchronization utilities, and are not in themselves useful for most concurrency control applications.	__label__AlternativeDirective
 This method should only be called from the UI thread. If you are not on the UI thread then wrap the call with a PlatformUI.getWorkbench().getDisplay().synchExec() in order to guarantee the correct result.	__label__AlternativeDirective
 implementations must synchronized on the hierarchy lock	__label__SynchronizationDirective
 Note that this implementation is not synchronized.	__label__SynchronizationDirective
 The cursor enables iteration and list changes to occur in any order without invalidating the iterator (from one thread).	__label__SynchronizationDirective
 Iterators must be manually synchronized.   synchronized (coll) {    Iterator it = coll.iterator();    // do stuff with iterator  }    @return an iterator that must be manually synchronized on the collection	__label__SynchronizationDirective
 It is imperative that the user manually synchronize on the returned sorted set when iterating over it or any of its subSet, headSet, or tailSet views.    SortedSet s = Collections.synchronizedSortedSet(new TreeSet());       ...   synchronized(s) {       Iterator i = s.iterator(); // Must be in the synchronized block       while (i.hasNext())           foo(i.next());   }	__label__SynchronizationDirective
 All PolicyQualifierInfo objects must be immutable and thread-safe.	__label__SynchronizationDirective
 If the Collection will be modified by one thread while another thread is calling a method of a Collection CertStore that has been initialized with this Collection, the Collection must have fail-fast iterators.	__label__SynchronizationDirective
 Concurrent modifications are not directly supported, and for most collection implementations will throw a ConcurrentModificationException.	__label__SynchronizationDirective
 Note that TransformedSortedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 If multiple threads access a linked hash set concurrently, and at least one of the threads modifies the set, it must be synchronized externally.	__label__SynchronizationDirective
 Note that this implementation is not synchronized.	__label__SynchronizationDirective
 If multiple threads access an enum set concurrently, and at least one of the threads modifies the set, it should be synchronized externally.	__label__SynchronizationDirective
 If multiple threads access an enum map concurrently, and at least one of the threads modifies the map, it should be synchronized externally.	__label__SynchronizationDirective
 All TrustAnchor objects must be immutable and thread-safe.	__label__SynchronizationDirective
 The thread stack size necessary to perform a given computation will likely vary from one JRE implementation to another. In light of this variation, careful tuning of the stack size parameter may be required, and the tuning may need to be repeated for each JRE implementation on which an application is to run.	__label__SynchronizationDirective
 The absence of block-structured locking removes the automatic release of locks that occurs with { synchronized} methods and statements. In most cases, the following idiom should be used:	__label__SynchronizationDirective
 Thread-safe implementation. Can be called from any thread.	__label__SynchronizationDirective
 If your application needs to set a different security manager, you must ensure that the policy file specified by the group's ActivationGroupDesc grants the group the necessary permissions to set a new security manager	__label__MiscellaneousDirective
 If your application requires specific properties to be set when objects are activated in the group, the application should create a special Properties object containing these properties, then create an ActivationGroupDesc with the Properties object, and use ActivationGroup.createGroup before creating any ActivationDescs (before the default ActivationGroupDesc is created).	__label__MiscellaneousDirective
 An Error is a subclass of Throwable that indicates serious problems that a reasonable application should not try to catch.	__label__MiscellaneousDirective
 The Appendable interface must be implemented by any class whose instances are intended to receive formatted output from a {@link java.util.Formatter}.	__label__MiscellaneousDirective
 To create a custom mapping, a programmer must do two things:      * create a class that implements the {@link SQLData} interface for the UDT to be custom mapped.     * make an entry in a type map that contains           o the fully-qualified SQL type name of the UDT           o the Class object for the class implementing SQLData	__label__MiscellaneousDirective
 Each class that implements PrivilegedExceptionAction should document what (if anything) this value represents.	__label__MiscellaneousDirective
 As in the one argument version, interrupts and spurious wakeups are possible, and this method should always be used in a loop:       synchronized (obj) {          while (<condition does not hold>)              obj.wait();          ... // Perform action appropriate to condition      }	__label__MiscellaneousDirective
 An implementation should document when this is the case.	__label__MiscellaneousDirective
 For some memory pools, for example, when objects are not packed contiguously, this method may be an expensive operation that requires some computation to determine the current memory usage. An implementation should document when this is the case.	__label__MiscellaneousDirective
 Environment variables should be used when a global effect is desired, or when an external system interface requires an environment variable (such as PATH).	__label__MiscellaneousDirective
 When a client application is designed to remotely access MXBeans for a running virtual machine whose version is different than the version on which the application is running, it should prepare to catch {@link java.io.InvalidObjectException InvalidObjectException} which is thrown when an MXBean proxy receives a name of an enum constant which is missing in the enum class loaded in the client application.	__label__MiscellaneousDirective
 If they are not then they must not be changed after adding to the MultiKey.	__label__MiscellaneousDirective
 Implementation note: This method requires a lot of time and a ton of stack space. Essentially a recursive algorithm is used to enter each bucket's monitor. If you have twenty thousand buckets in your map, then the recursive method will be invoked twenty thousand times. You have been warned.	__label__MiscellaneousDirective
 From a performance standpoint, these methods should be used with caution. In many implementations they will perform costly linear searches.	__label__MiscellaneousDirective
 The add methods are affected by this class. Thus objects must be removed or searched for using their transformed form. For example, if the transformation converts Strings to Integers, you must use the Integer form to remove objects.	__label__MiscellaneousDirective
 Code generators are encouraged to use platform-specific native libraries or microprocessor instructions, where available, to provide higher-performance implementations of Math methods. Such higher-performance implementations still must conform to the specification for Math.	__label__MiscellaneousDirective
invoked mouse exit component	__label__nonDir
inputmap parent searched binding defined inputmap	__label__nonDir
get descriptive name unit	__label__nonDir
package contains algorithm parameter specification parameter used diffie-hellman de triple de pbe rc2 rc5 algorithm	__label__nonDir
agent provides implementation interface order transform class file	__label__nonDir
class encapsulate symbolic color representing color native gui object system	__label__nonDir
constant identifying percent field	__label__nonDir
construct rowsetevent object initialized given rowset object	__label__nonDir
constant sinhala unicode character block	__label__nonDir
zlib compressed data format specification version pdf rfc deflate compressed data format specification version pdf rfc gzip file format specification version pdf rfc crc-32 checksum described rfc adler-32 checksum described rfc	__label__nonDir
implicitactivationpolicyvalue ha following semantics	__label__nonDir
package java image i/o api dealing low-level i/o file stream	__label__nonDir
provides class htmleditorkit supporting class creating html text editor	__label__nonDir
request information accessible server-side request interceptor	__label__nonDir
package specification precise list supported section official specification java tm platform standard edition orb complies see official specification corba support java se	__label__nonDir
constant f23 function key	__label__nonDir
implementation visit intersectiontype calling defaultaction	__label__nonDir
return size separator	__label__nonDir
package contains three main group class interface class iteration text class formatting parsing class string collation	__label__nonDir
null cause.tostring	__label__nonDir
cdata section used escape block text containing character would otherwise regarded markup	__label__nonDir
return stream producing given streamsize number pseudorandom long value	__label__nonDir
return list package element	__label__nonDir
provides class interface key specification algorithm parameter specification	__label__nonDir
represents relational constraint similar database query clause	__label__nonDir
helper unknownuserexception	__label__nonDir
visitor type style visitor design pattern	__label__nonDir
get scroll offset pixel	__label__nonDir
get name component	__label__nonDir
mediatype instance iso/din c3 x mm	__label__nonDir
abstract class image superclass class represent graphical image	__label__nonDir
return default locale used initialize jcomponent locale property upon creation	__label__nonDir
interface member whose purpose serve marker indicating implementing class java value type idl ha corresponding helper class	__label__nonDir
class defines service provider interface spi keystore class	__label__nonDir
allows developer provide support undo/redo application text editor	__label__nonDir
indicates right_outer_join supported joinrowset implementation	__label__nonDir
cause current thread wait signalled	__label__nonDir
server-side request interceptor	__label__nonDir
iiobytebuffer used imageinputstream supply sequence byte caller possibly fewer copy using conventional read method take user-supplied byte array	__label__nonDir
set property combobox match specified action	__label__nonDir
acquires read lock write lock held another thread within given waiting time current thread ha interrupted	__label__nonDir
drag drop direct manipulation gesture found many graphical user interface system provides mechanism transfer information two entity logically associated presentation element gui	__label__nonDir
writer attempt propagate change made cachedrowset object back data source	__label__nonDir
creates opaque srgb color specified red green blue value range	__label__nonDir
add specified mouse wheel listener receive mouse wheel event component	__label__nonDir
set designated parameter given java int value	__label__nonDir
applies given attribute character content	__label__nonDir
get instance colormodel used display component output device	__label__nonDir
please see use focus subsystem section java tutorial focus specification information	__label__nonDir
implement characteriterator.getindex string	__label__nonDir
return contextual shaper provided unicode range	__label__nonDir
store single day-of-week isolation tuesday	__label__nonDir
get property specified key default	__label__nonDir
return current orientation tool bar	__label__nonDir
holder policy	__label__nonDir
method public implementation side effect	__label__nonDir
iterates given element call scan element p one	__label__nonDir
class represents storage facility cryptographic key certificate	__label__nonDir
alias iso_c4	__label__nonDir
information helper file see generated file helper file	__label__nonDir
note case second field typecode object typecode object	__label__nonDir
prepares image rendering	__label__nonDir
holder class float used store inout parameter idl method	__label__nonDir
retrieves type map associated connection object rowset object	__label__nonDir
signal error occurred attempting bind socket local address port	__label__nonDir
return owner window	__label__nonDir
represents union type	__label__nonDir
creates componentui implementation passed component	__label__nonDir
return maximum size jfilechooser	__label__nonDir
constant f10 function key	__label__nonDir
constructor activationid take single argument activator specifies remote reference activator responsible activating object associated identifier	__label__nonDir
apis provide standard interface generated stub tie rmi-iiop runtime	__label__nonDir
class foo xmljavatypeadapter qtopadapter.class xmlelements xmlelement name type=px.class xmlelement name b type=py.class q bar xmltype abstract class p xmltype name px class px extends p xmltype name py class py extends p xml schema fragment x complextype name foo x sequence x element name bar x complextype x choice minoccurs maxoccurs unbounded x element name type px x element name b type py x choice x complextype x element x sequence x complextype	__label__nonDir
bear mind use time-zone europe/paris add considerable complexity calculation	__label__nonDir
information holder file see generated file holder file	__label__nonDir
information helper file see generated file helper file	__label__nonDir
refer awt threading issue detail awt threading model	__label__nonDir
return copy duration specified duration subtracted	__label__nonDir
management interface compilation system java virtual machine	__label__nonDir
constant tagbanwa unicode character block	__label__nonDir
package java image i/o api dealing reading writing metadata	__label__nonDir
description copied interface icon	__label__nonDir
input method software component let user enter text way simple typing keyboard	__label__nonDir
construct linebreakmeasurer specified text	__label__nonDir
class represents meta data modelmbeans	__label__nonDir
name basicpermission name given permission example exit setfactory print.queuejob etc	__label__nonDir
information holder file see generated file holder file	__label__nonDir
enumeration parameter mode parameter	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
set designated parameter reader object	__label__nonDir
get accessiblecontext associated jcombobox	__label__nonDir
information holder file see generated file holder file	__label__nonDir
constant latin extended additional unicode character block	__label__nonDir
visit intersectiontype manner defined subclass	__label__nonDir
helper unionmember	__label__nonDir
return false metallookandfeel native look feel	__label__nonDir
renderer used actual cell drawing	__label__nonDir
kerning	__label__nonDir
compare equality two collation object	__label__nonDir
also provides clipboard mechanism object temporarily hold transferable object transferred within application	__label__nonDir
constant f4 function key	__label__nonDir
constant used registerkeyboardaction mean command invoked receiving component window ha focus focused component	__label__nonDir
listener receiving preference change event	__label__nonDir
invocationhandler forward method mbean management interface mbean server mbean	__label__nonDir
holder class int used store inout parameter idl method	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
retrieves maximum number second driver wait query execute	__label__nonDir
set cell editor	__label__nonDir
skeletal visitor annotation value default behavior appropriate release_8 source version	__label__nonDir
property name contained namedvalue object name field value associated name contained object wa assigned namedvalue object value field	__label__nonDir
return set method element	__label__nonDir
org/omg/portableinterceptor/inactive.java	__label__nonDir
constant forward slash key	__label__nonDir
add one rowset object contained given array rowset object joinrowset object set match column rowset object match column given array column index	__label__nonDir
five implementation java.util.concurrent support extended blockingqueue interface defines blocking version put take linkedblockingqueue arrayblockingqueue synchronousqueue priorityblockingqueue delayqueue	__label__nonDir
return window title inactive foreground color current theme	__label__nonDir
clear selection	__label__nonDir
class used reporting locate forward exception object forward giop message back orb	__label__nonDir
exception may thrown method activity context accessed indicates attempted invocation activity context associated attempted invocation incompatible activity current state	__label__nonDir
set designated parameter reader object	__label__nonDir
return component visible rect rectangle intersection visible rectangle component ancestor	__label__nonDir
simple key-value pair used handler logging object configure	__label__nonDir
mouse exited event	__label__nonDir
return type rowset object	__label__nonDir
package containing public class used built-in bmp plug-in	__label__nonDir
example might window identifier user preference information	__label__nonDir
defines charsets decoder encoders translating byte unicode character	__label__nonDir
hgroup.addgroup layout.createparallelgroup	__label__nonDir
created stub satisfy interface	__label__nonDir
information holder file see generated file holder file	__label__nonDir
jsse wa added j2se version package wa added backward-compatibility reason	__label__nonDir
constant used registerkeyboardaction mean command invoked receiving component ancestor focused component focused component	__label__nonDir
default srgb space	__label__nonDir
subclass throwable represent error exception	__label__nonDir
package specification javatm cryptography architecture jca reference guide rfc internet x.509 public key infrastructure certificate certificate revocation list crl profile javatm cryptography architecture standard algorithm name documentation related documentation information x.509 certificate crls please see http www.ietf.org/rfc/rfc3280.txt javatm pki programmer guide x.509 certificate certificate revocation list crls	__label__nonDir
description copied class componentui	__label__nonDir
constant unified canadian aboriginal syllabics extended unicode character block	__label__nonDir
return copy anchor rectangle position size textured image	__label__nonDir
construct new component	__label__nonDir
card layout store string key-value pair used random access particular card	__label__nonDir
int constant make possible use switch statement	__label__nonDir
buffer size sufficient new char buffer allocated assigned chararraybuffer.data parameter columnindex int zero-based index target column	__label__nonDir
creates listener responsible getting property change event selection model	__label__nonDir
creates initially unselected toggle button without setting text image	__label__nonDir
description copied class basicarrowbutton	__label__nonDir
construct new roundrectangle2d initialized location size corner arc radius	__label__nonDir
provides class interface producing rendering-independent image	__label__nonDir
get character used echoing	__label__nonDir
en_us locale case mapping rule used provide case-insensitive string comparison block name validation	__label__nonDir
default editor border inset	__label__nonDir
bound property name expands selected path property	__label__nonDir
restores cachedrowset object original value value last set change	__label__nonDir
messaged visibletreenode ha collapsed	__label__nonDir
provides implementation rmiclientsocketfactory rmiserversocketfactory secure socket layer ssl transport layer security tl protocol	__label__nonDir
org/omg/cosnaming/namingcontextextpackage/invalidaddresshelper.java	__label__nonDir
invoked window ha opened	__label__nonDir
set whether window become focused window meet requirement outlined isfocusablewindow	__label__nonDir
return annotatedtype object represents use type specify superclass entity represented class object	__label__nonDir
creates new tool bar specified orientation	__label__nonDir
visit exception_parameter variable element calling defaultaction	__label__nonDir
creates return new componenthandler	__label__nonDir
contains minor code give detailed information caused exception completion status	__label__nonDir
abstract class representing collection permission object	__label__nonDir
return image get pixel data specified file whose format either gif jpeg png	__label__nonDir
return properly configured propertychangelistener update control change action occur null default property change listener control desired	__label__nonDir
construct deque initially containing element given collection added traversal order collection iterator	__label__nonDir
moreover framework allows application discard storage used image regenerate time	__label__nonDir
render graphicattribute specified location	__label__nonDir
constant shavian unicode character block	__label__nonDir
information holder file see generated file holder file	__label__nonDir
return set package element	__label__nonDir
return array hierarchy bound listener registered component	__label__nonDir
filter used provide fine grain control logged beyond control provided log level	__label__nonDir
information holder file see generated file holder file	__label__nonDir
set data model jcombobox us obtain list item	__label__nonDir
return string representation drop location	__label__nonDir
contains class interface used jcolorchooser component	__label__nonDir
class encapsulating single jpeg huffman table	__label__nonDir
applet first created applet stub attached using applet setstub method	__label__nonDir
super class menu related container	__label__nonDir
construct graphicattribute	__label__nonDir
information helper file see generated file helper file	__label__nonDir
construct simpledateformat using given pattern date format symbol	__label__nonDir
paint drop line	__label__nonDir
add specified component card layout internal table name	__label__nonDir
embedded bitmap scaling	__label__nonDir
constant katakana phonetic extension unicode character block	__label__nonDir
window deiconified event type	__label__nonDir
cancel current editing session	__label__nonDir
class providing apis corba object request broker feature	__label__nonDir
set selected state button	__label__nonDir
mediatype instance iso/din c4 x mm	__label__nonDir
list event listener component	__label__nonDir
functional interface provide target type lambda expression method reference	__label__nonDir
invoked mouse wheel rotated	__label__nonDir
set value designated parameter given object value	__label__nonDir
visit notype instance dispatching visit method specific kind pseudo-type void package none	__label__nonDir
creates new empty map initial table size accommodating specified number element without need dynamically resize	__label__nonDir
get bound component form rectangle object	__label__nonDir
package containing public class used built-in bmp plug-in	__label__nonDir
