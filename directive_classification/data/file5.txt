 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param pair the pair to copy, must not be null	__label__NotNullDirective
 @exception IllegalArgumentException if listener is null	__label__NotNullDirective
 @throws IllegalArgumentException if bag is null	__label__NotNullDirective
 @param lock the lock object to use, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the buffer is null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @param lock the lock object to use, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if bag is null	__label__NotNullDirective
 @throws IllegalArgumentException if list is null	__label__NotNullDirective
 @throws IllegalArgumentException if list is null	__label__NotNullDirective
 @param iterator the iterator to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map is null	__label__NotNullDirective
 @throws NullPointerException if the entry is null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @throws NullPointerException If str is null	__label__NotNullDirective
 @param predicate the predicate to use as a filter, not null	__label__NotNullDirective
 @throws IllegalArgumentException if any predicate in the array is null	__label__NotNullDirective
 If s is null, then a NullPointerException is thrown.	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param buffer the buffer to make unmodifiable, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param collection the collection to add to, must not be null	__label__NotNullDirective
 @param predicate the predicate used to evaluate when the loop terminates, not null	__label__NotNullDirective
 @param closure the closure the execute, not null	__label__NotNullDirective
 @throws NullPointerException if either parameter is null	__label__NotNullDirective
 @throws NullPointerException (optional) if the map limits the values to non-null and null was specified	__label__NotNullDirective
 @throws NullPointerException if the key or value is null and null is invalid	__label__NotNullDirective
 @throws NullPointerException if the enumeration parameter is null.	__label__NotNullDirective
 @param bag the bag to synchronize, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if bag is null	__label__NotNullDirective
 @throws IllegalArgumentException if buffer is null	__label__NotNullDirective
 @throws IllegalArgumentException if the map is null	__label__NotNullDirective
 @throws IllegalArgumentException if the Map or Transformer is null	__label__NotNullDirective
 @param map the map to make lazy, must not be null	__label__NotNullDirective
 @param bag the sorted bag to predicate, must not be null	__label__NotNullDirective
 @param set the set to predicate, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param map the map to make unmodifiable, must not be null	__label__NotNullDirective
 @param set the set to synchronize, must not be null	__label__NotNullDirective
 @param buffer the buffer to make bounded, must not be null	__label__NotNullDirective
 @param map the map to predicate, must not be null	__label__NotNullDirective
 @param map the map to predicate, must not be null	__label__NotNullDirective
 @param closures matching array of closures, not cloned, no nulls	__label__NotNullDirective
 Copies all of the keys and values from the specified map to this map. Each key must be non-null and a MultiKey object.	__label__NotNullDirective
 @throws NullPointerException if array is null	__label__NotNullDirective
 @throws NullPointerException if name is null.	__label__NotNullDirective
 @throws NullPointerException if the key is null and this map does not not permit null keys (optional).	__label__NotNullDirective
 This method requires that none of its arguments is null.	__label__NotNullDirective
 @throws NullPointerException If the format is null	__label__NotNullDirective
 @param readMethodName May be null if the property is write-only	__label__NullSemanticsDirective
 the IContentProposalProvider used to obtain content proposals for this control, or null if no content proposal is available	__label__NullSemanticsDirective
 null means drop catalog name from the selection criteria	__label__NullSemanticsDirective
 If the list is null, all available attribute information should be made accessible.	__label__NullSemanticsDirective
 @param dir the working directory of the subprocess, or null if the subprocess should inherit the working directory of the current process.	__label__NullSemanticsDirective
 @param encoding The name of a supported character encoding. May be null, to indicate the default platform encoding.	__label__NullSemanticsDirective
 @param root the root object, null will result in an empty iterator	__label__NullSemanticsDirective
 @param args the arguments to pass to the constructor, can be null	__label__NullSemanticsDirective
 A null value indicates that the elements' {@linkplain Comparable natural ordering} should be used.	__label__NullSemanticsDirective
 @param coll the collection to check, may be null	__label__NullSemanticsDirective
 This parameter may be null if there are no inherited ProtectionDomains.	__label__NullSemanticsDirective
 @param initialCapacity the initial capacity, must be a power of two @param loadFactor the load factor, must be > 0.0f and generally < 1.0f	__label__NumberRangeDirective
 The parameter { n} must be in the range 0 through 999999999, inclusive.	__label__NumberRangeDirective
 The backlog argument must be a positive value greater than 0.	__label__NumberRangeDirective
 The tc must be in the range 0 <= tc <= 255 or an IllegalArgumentException will be thrown.	__label__NumberRangeDirective
 (as of 3.6 a negative argument will be set to 0)	__label__NumberRangeDirective
 @param size the size to which to set the send buffer size. This value must be greater than 0.	__label__NumberRangeDirective
 This value should always be nonnegative and not larger than the value of count.	__label__NumberRangeDirective
 @param autoGeneratedKeys a flag indicating whether auto-generated keys should be returned; one of Statement.RETURN_GENERATED_KEYS or Statement.NO_GENERATED_KEYS	__label__NumberRangeDirective
 To specify BC year numbers, 1 - year number must be given.	__label__NumberRangeDirective
 @param current one of the following Statement constants indicating what should happen to current ResultSet objects obtained using the method getResultSet: Statement.CLOSE_CURRENT_RESULT, Statement.KEEP_CURRENT_RESULT, or Statement.CLOSE_ALL_RESULTS	__label__NumberRangeDirective
 @param scale the desired number of digits to the right of the decimal point. It must be greater than or equal to zero	__label__NumberRangeDirective
 @param keyType the type of reference to use for keys; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param valueType the type of reference to use for values; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param index the index of the color, must be >= 0	__label__NumberRangeDirective
 @param filterStyle a constant indicating how keystrokes received in the proposal popup affect filtering of the proposals shown. FILTER_NONE specifies that no automatic filtering of the content proposal list will occur as keys are typed in the popup. FILTER_CHARACTER specifies that the content of the popup will be filtered by the most recently typed character. FILTER_CUMULATIVE is deprecated and no longer recommended. It specifies that the content of the popup will be filtered by a string containing all the characters typed since the popup has been open.	__label__NumberRangeDirective
 The valid message types are one of NONE, INFORMATION,WARNING, or ERROR.	__label__NumberRangeDirective
 This sequence of characters must represent a positive value or a {@link NumberFormatException} will be thrown.	__label__StringFormatDirective
 The prefix string to be used in generating the file's name; must be at least three characters long	__label__StringFormatDirective
 With Version 0 cookies, values should not contain white space, brackets, parentheses, equals signs, commas, double quotes, slashes, question marks, at signs, colons, and semicolons. Empty values may not behave the same way on all browsers.	__label__StringFormatDirective
 Strings starting with "java." are reserved for future extensions and must not be used by application-defined formats.	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 The file should contain a list of fully-qualified concrete provider class names, one per line.	__label__StringFormatDirective
 To be portable, applications must give the SQL type code and the fully-qualified SQL type name when specifying a NULL user-defined or REF parameter. In the case of a user-defined type the name is the type name of the parameter itself.	__label__StringFormatDirective
 The XMLFormatter can be used with arbitrary character encodings, but it is recommended that it normally be used with UTF-8.	__label__StringFormatDirective
 With lenient interpretation, a date such as "February 942, 1996" will be treated as being equivalent to the 941st day after February 1, 1996. With strict (non-lenient) interpretation, such dates will cause an exception to be thrown.	__label__StringFormatDirective
 @param encodedKey the key, which is assumed to be encoded according to the X.509 standard.	__label__StringFormatDirective
 param obj must be a Number or a Date.	__label__MethodParameterTypeDirective
 All elements inserted into the set must be mutually comparable by the specified comparator: { comparator.compare(e1, e2)} must not throw a { ClassCastException} for any elements { e1} and { e2} in the set	__label__MethodParameterTypeDirective
 All elements in the list must implement the Comparable interface	__label__MethodParameterTypeDirective
 @param collectionClass the type of collections to return from the map (must contain public no-arg constructor and extend Collection)	__label__MethodParameterTypeDirective
 All elements in the array must implement the {@link Comparable} interface	__label__MethodParameterTypeDirective
 @throws ClassCastException if the specified key cannot be compared with the keys currently in the map	__label__MethodParameterTypeDirective
 The characters in the string must all be digits of the specified radix (as determined by whether {@link java.lang.Character#digit(char, int)} returns a nonnegative value), except that the first character may be an ASCII minus sign '-' ('\u002D') to indicate a negative value.	__label__MethodParameterCorrelationDirective
 aContainer must be a focus cycle root of aComponent or a focus traversal policy provider	__label__MethodParameterCorrelationDirective
 @param b the bytes that make up the class data. The bytes in positions off through off+len-1 should have the format of a valid class file as defined by the Java Virtual Machine Specification.	__label__MethodParameterCorrelationDirective
 If the JDBC type expected to be returned to this output parameter is specific to this particular database, sqlType should be java.sql.Types.OTHER.	__label__MethodParameterCorrelationDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__MethodParameterCorrelationDirective
 If the given key is of type java.security.PrivateKey, it must be accompanied by a certificate chain certifying the corresponding public key.	__label__MethodParameterCorrelationDirective
 The data is assumed to be in the specified encoding.	__label__MethodParameterCorrelationDirective
 If it is critical to obtain every active thread in this thread group and its subgroups, the caller should verify that the returned int value is strictly less than the length of list.	__label__Post-CallDirective
 The returned parameter object must be initialized via a call to init, using an appropriate parameter specification or parameter encoding.	__label__Post-CallDirective
 {@link Color#dispose()} must never been called directly on the returned color.	__label__Post-CallDirective
 Unlike the otherwise equivalent newScheduledThreadPool(1, threadFactory) the returned executor is guaranteed not to be reconfigurable to use additional threads.	__label__ReturnValueDirective
 @return The key sequence; never null.	__label__ReturnValueDirective
 @return The key sequence representation; never null.	__label__ReturnValueDirective
 @return 1 before EOF and 0 after EOF.	__label__ReturnValueDirective
 @return The raw scheme-specific part of this URI (never null)	__label__ReturnValueDirective
 @return an instance of IKeyFormatter appropriate for the current instance; never null.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result.	__label__ReturnValueDirective
 Override to only return true when there is a value transformer.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result.	__label__ReturnValueDirective
 If the return type is a parameterized type, the Type object returned must accurately reflect the actual type parameters used in the source code.	__label__ReturnValueDirective
 If a formal parameter type is a parameterized type, the Type object returned for it must accurately reflect the actual type parameters used in the source code.	__label__ReturnValueDirective
 The specified date must be equal to or later than the value of the thisUpdate component of the X509CRL and earlier than the value of the nextUpdate component.	__label__ReturnValueDirective
 The key must have been associated with the alias by a call to setKeyEntry, or by a call to setEntry with a PrivateKeyEntry or SecretKeyEntry.	__label__ReturnValueDirective
 @return a set of permissions granted to the specified ProtectionDomain. If this operation is supported, the returned set of permissions must be a new mutable instance and it must support heterogeneous Permission types	__label__ReturnValueDirective
 An implementation of this method must either return a class with the given name or throw an exception.	__label__ReturnValueDirective
 Implementers have to ensure that {@link ITextHoverExtension#getHoverControlCreator()} returns {@link IInformationControl}s that implement {@link IInformationControlExtension2} and whose {@link IInformationControlExtension2#setInput(Object)} can handle the information objects returned by this method.	__label__ReturnValueDirective
 The exact meaning of the three levels will vary between subsystems, but in general, FINEST should be used for the most voluminous detailed output, FINER for somewhat less detailed output, and FINE for the lowest volume (and most important) messages.	__label__ReturnValueDirective
 Submaps of any { NavigableMap} must implement the { NavigableMap} interface.	__label__ReturnValueDirective
 If no symbol can be determined, null should be returned.	__label__ReturnValueDirective
 If daylight is true, the method should return a name appropriate for daylight saving time even if the specified time zone has not observed daylight saving time in the past.	__label__ReturnValueDirective
 Implementations must return an OrderedBidiMap instance, usually by forwarding to inverseOrderedBidiMap().	__label__ReturnValueDirective
 Note that a new InputStream object must be returned each time this method is called, and the stream must be positioned at the beginning of the data.	__label__ReturnValueDirective
 The triggers can be anything, but above all it must be hashable.	__label__ReturnValueDirective
 Returns the least element in this set strictly greater than the given element, or { null} if there is no such element.	__label__ReturnValueDirective
 Get the designated column's specified column size. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. 0 is returned for data types where the column size is not applicable.	__label__ReturnValueDirective
 The PRECISION column represents the specified column size for the given parameter or column. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable	__label__ReturnValueDirective
 Clients should not call this method directly, unless they have removed this contribution item from the containing IContributionManager before the contribution lifecycle has ended.	__label__MethodCallVisibilityDirective
 Note: Using this method (as well as the Activatable constructors that both register and export an activatable remote object) is strongly discouraged because the actions of registering and exporting the remote object are not guaranteed to be atomic.	__label__MethodCallVisibilityDirective
 Note: Using the Activatable constructors that both register and export an activatable remote object is strongly discouraged because the actions of registering and exporting the remote object are not guaranteed to be atomic.	__label__MethodCallVisibilityDirective
 This constructor is used for serialization only and should not be used by subclasses.	__label__MethodCallVisibilityDirective
 Denigrated, replaced by {@linkplain #getIssuerX500Principal()}. This method returns the issuer as an implementation specific Principal object, which should not be relied upon by portable code.	__label__MethodCallVisibilityDirective
 Applications are discouraged from calling this method since this operation may not be supported by all policy implementations. Applications should rely on the implies method to perform policy checks.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL TIME values do not have a date component.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 SetUtils should not normally be instantiated.	__label__MethodCallVisibilityDirective
 Note, that although PreferenceChangeEvent inherits Serializable interface from EventObject, it is not intended to be Serializable.	__label__MethodCallVisibilityDirective
 This interface, used only for custom mapping, is used by the driver behind the scenes, and a programmer never directly invokes SQLInput methods.	__label__MethodCallVisibilityDirective
 Internal method which returns a string representation of this selection suitable for debug purposes only.	__label__MethodCallVisibilityDirective
 The output stream for writing the attributes of a user-defined type back to the database. This interface, used only for custom mapping, is used by the driver, and its methods are never directly invoked by a programmer.	__label__MethodCallVisibilityDirective
 Clients may neither instantiate nor extend this class.	__label__MethodCallVisibilityDirective
 It should never be accessed by application code.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 This class may be used as is	__label__MethodCallVisibilityDirective
 Clients may call this framework method	__label__MethodCallVisibilityDirective
 It is generally true of all the reading routines in this class that if end-of-file is reached before the desired number of bytes has been read, an EOFException (which is a kind of IOException) is thrown.	__label__ExceptionRaisingDirective
 @exception IOException if an I/O error occurs.	__label__ExceptionRaisingDirective
 @exception SQLException if the parameterIndex is not valid; if a database access error occurs or this method is called on a closed CallableStatement	__label__ExceptionRaisingDirective
 @throws SQLException if a database access error occurs	__label__ExceptionRaisingDirective
 @exception SocketException if there is an error in the underlying protocol, such as a TCP error.	__label__ExceptionRaisingDirective
 @exception IOException if an I/O error occurs	__label__ExceptionRaisingDirective
 @throws IllegalFormatException If a format string contains an illegal syntax, a format specifier that is incompatible with the given arguments, insufficient arguments given the format string, or other illegal conditions. For specification of all possible formatting errors, see the Details section of the Formatter class specification.	__label__ExceptionRaisingDirective
 @throws IllegalFormatException If a format string contains an illegal syntax, a format specifier that is incompatible with the given arguments, insufficient arguments given the format string, or other illegal conditions. For specification of all possible formatting errors, see the Details section of the formatter class specification.	__label__ExceptionRaisingDirective
 @throws SecurityException If a required system property value cannot be accessed.	__label__ExceptionRaisingDirective
 @exception NoSuchFieldException if a field with the specified name is not found. @exception NullPointerException if name is null @exception SecurityException If a security manager, s, is present and any of the following conditions is met:      invocation of {@link SecurityManager#checkMemberAccess s.checkMemberAccess(this, Member.PUBLIC)} denies access to the field     the caller's class loader is not the same as or an ancestor of the class loader for the current class and invocation of {@link SecurityManager#checkPackageAccess s.checkPackageAccess()} denies access to the package of this class	__label__ExceptionRaisingDirective
 all such elements must be mutually comparable: { e1.compareTo(e2)} must not throw a { ClassCastException} for any elements { e1} and { e2} in the set.	__label__ExceptionRaisingDirective
 Checked exception types thrown by underlying scripting implementations must be wrapped in instances of ScriptException.	__label__ExceptionRaisingDirective
 @throws org.eclipse.swt.SWTException in these cases:      * {@link org.eclipse.swt.SWT#ERROR_WIDGET_DISPOSED} - if the receiver has been disposed     * {@link org.eclipse.swt.SWT#ERROR_THREAD_INVALID_ACCESS} - if not called from the thread that created the receiver	__label__ExceptionRaisingDirective
 @throws Throwable the exception to throw from the method invocation on the proxy instance. The exception's type must be assignable either to any of the exception types declared in the throws clause of the interface method or to the unchecked exception types java.lang.RuntimeException or java.lang.Error.	__label__ExceptionRaisingDirective
 Some provider implementations may encounter unrecoverable internal errors during their operation, for example a failure to communicate with a security token. A {@link ProviderException} should be used to indicate such errors.	__label__ExceptionRaisingDirective
 @throws InvalidPreferencesFormatException Data on input stream does not constitute a valid XML document with the mandated document type.	__label__ExceptionRaisingDirective
 @throws IllegalStateException implementations may, but are not required to, throw this exception if the entry has been removed from the backing map.	__label__ExceptionRaisingDirective
 @exception SQLException if the columnLabel is not valid; if a database access error occurs; the result set concurrency is CONCUR_READ_ONLY or this method is called on a closed result set @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an IllegalStateException if no space is currently available	__label__ExceptionRaisingDirective
 There are several restrictions on the parameters that may be passed to Proxy.getProxyClass: * All of the Class objects in the interfaces array must represent interfaces, not classes or primitive types. * No two elements in the interfaces array may refer to identical Class objects. * All of the interface types must be visible by name through the specified class loader. In other words, for class loader cl and every interface i, the following expression must be true: Class.forName(i.getName(), false, cl) == i * All non-public interfaces must be in the same package; otherwise, it would not be possible for the proxy class to implement all of the interfaces, regardless of what package it is defined in. * For any set of member methods of the specified interfaces that have the same signature: o If the return type of any of the methods is a primitive type or void, then all of the methods must have that same return type. o Otherwise, one of the methods must have a return type that is assignable to all of the return types of the rest of the methods.	__label__MiscellaneousMethodCallDirective
 @param actions currently unused and must be set to null	__label__MiscellaneousMethodCallDirective
 @param map the map to copy, must be size 1	__label__MiscellaneousMethodCallDirective
 The argument must be a two-dimensional array of strings of size n by m, where m is at least 5. Each of the n rows is an entry containing the localized names for a single TimeZone.	__label__MiscellaneousMethodCallDirective
 Which commands are valid is system-dependent, but at the very least the command must be a non-empty list of non-null strings	__label__MiscellaneousMethodCallDirective
 The range must be sorted (as by the {@link #sort(float[], int, int)} method) prior to making this call.	__label__MiscellaneousMethodCallDirective
 @param foreignSchema a schema name; must match the schema name as it is stored in the database;	__label__MiscellaneousMethodCallDirective
 The map must not be null and must be empty.	__label__MiscellaneousMethodCallDirective
 @param table a table name; must match the table name as it is stored in this database	__label__MiscellaneousMethodCallDirective
 @param b The bytes that make up the class data. The bytes in positions off through off+len-1 should have the format of a valid class file as defined by the Java Virtual Machine Specification.	__label__MiscellaneousMethodCallDirective
 @param caller the principal invoking this method. It must be an owner of this ACL.	__label__MiscellaneousMethodCallDirective
 @param hyperlinkDetectors the array of hyperlink detectors, must not be empty	__label__MiscellaneousMethodCallDirective
 This class is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be subclassed outside of the JFace viewers framework.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 This interface is not intended to be implemented by clients	__label__ExtensibleClassIdentificationDirective
 This interface should never be directly implemented.	__label__ExtensibleClassIdentificationDirective
 Because reference objects are implemented in close cooperation with the garbage collector, this class may not be subclassed directly.	__label__ExtensibleClassIdentificationDirective
 Clients may implement or extend this class.	__label__ExtensibleClassIdentificationDirective
 it may also be subclassed.	__label__ExtensibleClassIdentificationDirective
 This concrete dialog class can be further subclassed as required.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 The interface can be implemented by clients. By default, clients use {@link QuickAssistAssistant} as the standard implementer of this interface.	__label__ExtensibleClassIdentificationDirective
 This interface must be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 This interface must be implemented by clients that want to let one of their model elements be part of a reconcile step result.	__label__ExtensibleClassIdentificationDirective
 Clients can implement that interface and its extension interfaces.	__label__ExtensibleClassIdentificationDirective
 Clients must implement this interface in order to equip an information control manager accordingly.	__label__ExtensibleClassIdentificationDirective
 Key-value entries are stored in instances of the HashEntry class, which can be overridden and replaced. The iterators can similarly be replaced, without the need to replace the KeySet, EntrySet and Values view classes.	__label__ExtensibleClassIdentificationDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 A stream protocol handler for a protocol that has a different syntax must override this routine.	__label__MethodOverridingDirective
 All CertStore implementations must include a class (the SPI class) that extends this class (CertStoreSpi)	__label__MethodOverridingDirective
 They should also extend {@link #computeTrim()} if they create a content area with additional trim (e.g. scrollbars)	__label__MethodOverridingDirective
 configureShell- extend or reimplement to set shell properties before window opens	__label__MethodOverridingDirective
 Subclasses may also extend or reimplement.	__label__MethodOverridingDirective
 extend dispose	__label__MethodOverridingDirective
 Subclasses may reimplement.	__label__MethodOverridingDirective
 setTitle - may be extended	__label__MethodOverridingDirective
 Subclasses should reimplement this method if they want to delay creating one or more of the pages lazily.	__label__MethodOverridingDirective
 Subclasses should reimplement this method if they need to perform any special cancel processing for their wizard.	__label__MethodOverridingDirective
 This method may be extended (super.close must be called).	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 The createControl framework method must be implemented by concrete subclasses.	__label__MethodOverridingDirective
 This framework method must be implemented by concrete subclasses.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 . Subclasses should override this method if they do not need information from the triggering event, or override runWithEvent(Event) if they do.	__label__MethodOverridingDirective
 This should be overridden by subclasses that add properties.	__label__MethodOverridingDirective
 Subclasses may override this method, but typically do not.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses should override this method.	__label__MethodOverridingDirective
 Subclasses must implement this method.	__label__MethodOverridingDirective
 Subclasses must implement this method to create the controls for this field editor.	__label__MethodOverridingDirective
 May be extended or replaced by subclasses.	__label__MethodOverridingDirective
 May be replaced or extended by subclasses.	__label__MethodOverridingDirective
 May be extended by subclasses.	__label__MethodOverridingDirective
 Subclasses of FilterReader should override some of these methods	__label__MethodOverridingDirective
 Subclasses that intend to support efficient single-character input should override this method.	__label__MethodOverridingDirective
 Subclasses of Thread should override this method. @see #start() @see #stop() @see #Thread(ThreadGroup, Runnable, String)	__label__MethodOverridingDirective
 To customize the text Subclasses may override the following methods      * {@link #getStyle(Event)}     * {@link #getBackgroundColor(Event)}     * {@link #getForegroundColor(Event)}     * {@link #getFont(Event)}     * {@link #getImage(Event)}     * {@link #getText(Event)}     * {@link #getBackgroundImage(Event)}	__label__MethodOverridingDirective
 Subclasses may overwrite to implement custom positioning.	__label__MethodOverridingDirective
 Implementators of {@link ColumnViewer} should overwrite this method if their widget supports reordered columns	__label__MethodOverridingDirective
 Subclasses may overwrite this to get custom behavior	__label__MethodOverridingDirective
 The network class loader subclass must define the methods {@link #findClass findClass} and loadClassData to load a class from the network.	__label__MethodOverridingDirective
 This method should be overriden by subclasses to test for equality.	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Overriding this method is generally not required; however, if overriding in a subclass, super.setContentProvider must be invoked.	__label__MethodOverridingDirective
 Subclasses should override this method to perform any additional cleanup of resources;	__label__MethodOverridingDirective
 This class and all of its methods may be overridden or extended.	__label__MethodOverridingDirective
 Override if you need a different strategy.	__label__MethodOverridingDirective
 It may be overridden if necessary.	__label__MethodOverridingDirective
 Subclasses could override to fully control removals from the map.	__label__MethodOverridingDirective
 Subclasses can override this to implement caching (override clear as well).	__label__MethodOverridingDirective
 This can be overriden in a subclass.	__label__MethodOverridingDirective
 Standard customers should not overwrite this method but {@link #setValue(Object, Object)}	__label__MethodOverridingDirective
 @nooverride This method is not intended to be re-implemented or extended by clients.	__label__MethodOverridingDirective
 Clients should not override it.	__label__MethodOverridingDirective
 Note: This method is not intended to be referenced or overridden by clients.	__label__MethodOverridingDirective
 f override this, be sure to call super.	__label__MethodExtensionDirective
 Subclasses which override this method should make sure they call super	__label__MethodExtensionDirective
 Subclasses may wish to conditionally call super with a different location	__label__MethodExtensionDirective
 extend addPages	__label__MethodExtensionDirective
 Subclasses can extend this method to add additional trim	__label__MethodExtensionDirective
 however, super.hookControl must be invoked.	__label__MethodExtensionDirective
 super.setContentProvider must be invoked.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkCreateClassLoader at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkDelete at the point the overridden method would normally throw an exception	__label__MethodExtensionDirective
 For each button a subclass contributes, it must also increase the parent's grid layout number of columns by one; that is,   ((GridLayout) parent.getLayout()).numColumns++);	__label__CallContractSubclassingDirective
 Subclasses need to call {@link #clearPositionCache()} after modifying the partitioner's positions.	__label__CallContractSubclassingDirective
 If a connection cannot be established to a proxy (PROXY or SOCKS) servers then the caller should call the proxy selector's {@link #connectFailed connectFailed} method to notify the proxy selector that the proxy server is unavailable.	__label__CallContractSubclassingDirective
 If this method is overridden, the method that overrides it should additionally check to see if the calling thread has the RuntimePermission("modifyThread") permission, and if so, return silently.	__label__CallContractSubclassingDirective
 Subclasses are required to call {@link #create()} at the end of their constructor.	__label__CallContractSubclassingDirective
 May be called from subclasses that override {@link #initialize(ColumnViewer, ViewerColumn)} but want to customize whether owner draw will be enabled.	__label__CallContractSubclassingDirective
 Implementors are responsible for ensuring that the created control can be accessed via getControl	__label__CallContractSubclassingDirective
 However, all instances representing a type variable must be equal() to each other.	__label__MethodImplementationDirective
 This map enforces the restriction that there is a 1:1 relation between keys and values, meaning that multiple keys cannot map to the same value. This is required so that "inverting" the map results in a map without duplicate keys.	__label__MethodImplementationDirective
 The general contract of flush is that calling it is an indication that, if any bytes previously written have been buffered by the implementation of the output stream, such bytes should immediately be written to their intended destination.	__label__MethodImplementationDirective
 A PKIXCertPathChecker must support reverse checking and may support forward checking.	__label__MethodImplementationDirective
 @param input the object to be transformed, should be left unchanged	__label__MethodImplementationDirective
 The retransformation must not add, remove or rename fields or methods, change the signatures of methods, or change inheritance.	__label__MethodImplementationDirective
 To help ensure portability of Java programs, the definitions of some of the numeric functions in this package require that they produce the same results as certain published algorithms. These algorithms are available from the well-known network library netlib as the package "Freely Distributable Math Library," fdlibm.	__label__MethodImplementationDirective
 Note that the ordering maintained by a sorted map (whether or not an explicit comparator is provided) must be consistent with equals if the sorted map is to correctly implement the Map interface.	__label__MethodImplementationDirective
 All general-purpose sorted map implementation classes should provide four "standard" constructors:	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if toElement cannot be compared to elements currently in the set. @throws NullPointerException if toElement is null and this set does not permit null elements	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if toKey cannot be compared to keys currently in the map.	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if { fromElement} or { toElement} cannot be compared to elements currently in the set.	__label__MethodImplementationDirective
 Note that the default uncaught exception handler should not usually defer to the thread's ThreadGroup object, as that could cause infinite recursion.	__label__MethodImplementationDirective
 The only requirement enforced by this facility is that provider classes must have a zero-argument constructor so that they can be instantiated during loading.	__label__MethodImplementationDirective
 The programmer should generally provide a void (no argument) and map constructor, as per the recommendation in the Map interface specification.	__label__MethodImplementationDirective
 In order to guarantee this property, particular algorithms are specified for the class { Random}. Java implementations must use all the algorithms shown here for the class { Random}, for the sake of absolute portability of Java code.	__label__MethodImplementationDirective
 To implement clone(), a subclass must implement the Cloneable interface and make this method public.	__label__MethodImplementationDirective
 Implementations should seek to avoid creating a new object every time this method is called. See AbstractMap.values() etc. Calling this method on the inverse map should return the original.	__label__MethodImplementationDirective
 If no such object exists, the list should be "wrapped" using the {@link Collections#synchronizedList Collections.synchronizedList} method.	__label__MethodImplementationDirective
 The ACL Entries in each ACL observe the following rules:      Each principal can have at most one positive ACL entry and one negative entry; that is, multiple positive or negative ACL entries are not allowed for any principal. Each entry specifies the set of permissions that are to be granted (if positive) or denied (if negative).      If there is no entry for a particular principal, then the principal is considered to have a null (empty) permission set.      If there is a positive entry that grants a principal a particular permission, and a negative entry that denies the principal the same permission, the result is as though the permission was never granted or denied.      Individual permissions always override permissions of the group(s) to which the individual belongs. That is, individual negative permissions (specific denial of permissions) override the groups' positive permissions. And individual positive permissions override the groups' negative permissions.	__label__MethodImplementationDirective
 Note: Support for the rowDeleted method is optional with a result set concurrency of CONCUR_READ_ONLY	__label__MethodImplementationDirective
 For a given subclass of ObjectInputStream that overrides this method, the annotateProxyClass method in the corresponding subclass of ObjectOutputStream must write any data or objects read by this method	__label__Non-localConsistencySubclassingDirective
 Subclasses wishing to perform validation should override both this method and refreshValidState.	__label__Non-localConsistencySubclassingDirective
 When reading the value of an out parameter, you must use the getXXX method whose Java type XXX corresponds to the parameter's registered SQL type.	__label__Non-localConsistencySubclassingDirective
 Implementations should seek to make this method perform equally as well as get(Object).	__label__Non-localConsistencySubclassingDirective
 Using this abstract class involves defining a concrete subclass and providing an implementation for the getImageData method.	__label__MiscellaneousSubclassingDirective
 It is subclass responsibility to specify how dirty regions are processed.	__label__MiscellaneousSubclassingDirective
 Subclasses must provide the storage and accessor methods for the additional arguments or parameters.	__label__MiscellaneousSubclassingDirective
 An activation group must be registered with the ActivationSystem before objects can be registered within that group	__label__MethodCallSequenceDirective
 When the client no longer has any references to a specific remote object, it must schedule a clean call for the object ID associated with the reference	__label__MethodCallSequenceDirective
 The value actually set in the accepted socket must be determined by calling {@link Socket#getReceiveBufferSize()} after the socket is returned by {@link #accept()}.	__label__MethodCallSequenceDirective
 f preferenceStore is set to null, getPreferenceStore will invoke doGetPreferenceStore the next time it is called	__label__MethodCallSequenceDirective
 Only listeners registered at the time this method is called are notified.	__label__MethodCallSequenceDirective
 If fork is set to false, the runnable will run in the UI thread and it is the runnable's responsibility to call Display.readAndDispatch() to ensure UI responsiveness.	__label__MethodCallSequenceDirective
 This thread group must be empty, indicating that all threads that had been in this thread group have since stopped.	__label__MethodCallSequenceDirective
 It must be connected to a piped reader, either by the receiver or the sender, before being used.	__label__MethodCallSequenceDirective
 Subclasses should check this method before loading or saving.	__label__MethodCallSequenceDirective
 The instance specific getRequestProperty method should be used after an appropriate instance of URLConnection is obtained.	__label__MethodCallSequenceDirective
 It must be {@linkplain java.io.PipedOutputStream#connect( java.io.PipedInputStream) connected} to a PipedOutputStream before being used.	__label__MethodCallSequenceDirective
 All the data in the returned stream must be read prior to getting the value of any other column.	__label__MethodCallSequenceDirective
 All streams must be closed before execute() occurs or an SQLException will be thrown.	__label__MethodCallSequenceDirective
 Once engineDigest has been called, the engine should be reset (see {@link #engineReset() engineReset}).	__label__MethodCallSequenceDirective
 This method can only be called if next() was called, but not after hasNext(), because the hasNext() call changes the base iterator.	__label__MethodCallSequenceDirective
 this method must allocate a new array even if this set is backed by an array	__label__MethodCallSequenceDirective
 In other words, this method must allocate a new array even if this collection is backed by an array	__label__MethodCallSequenceDirective
 Before obtaining an item each thread must acquire a permit from the semaphore, guaranteeing that an item is available for use.	__label__MethodCallSequenceDirective
 As of JDK 1.1, the Calendar class should be used to convert between dates and time fields and the DateFormat class should be used to format and parse date strings.	__label__MethodCallSequenceDirective
 @throws IllegalStateException if the next or previous method has not yet been called, or the remove method has already been called after the last call to next or previous.	__label__MethodCallSequenceDirective
 @throws IllegalStateException if the next method has not yet been called, or the remove method has already been called after the last call to the next method.	__label__MethodCallSequenceDirective
 If an activatable object requires restart services, use one of the ActivationDesc constructors that takes a boolean parameter, restart.	__label__MethodCallSequenceDirective
 When the data is later uncompressed with Inflater.inflate(), Inflater.getAdler() can be called in order to get the Adler-32 value of the dictionary required for decompression.	__label__MethodCallSequenceDirective
 @throws IllegalStateException If {@link #next()} or {@link #previous()} haven't been called, or if the node has been removed with {@link #remove()} or a new node added with {@link #add(Object)}.	__label__MethodCallSequenceDirective
 Returns the index of the element that would be returned by a subsequent call to {@link #next}.	__label__MethodCallSequenceDirective
 It is allowed to call this method after this hyperlink manger has been installed.	__label__MethodCallSequenceDirective
 Register an object to be validated before the graph is returned. While similar to resolveObject these validations are called after the entire graph has been reconstituted.	__label__MethodCallSequenceDirective
 It can be called at most once by an application.	__label__MethodCallSequenceDirective
 Once a node has been removed, attempting any method other than {@link #name()}, {@link #absolutePath()}, {@link #isUserNode()}, {@link #flush()} or {@link #node(String) nodeExists("")} on the corresponding Preferences instance will fail with an IllegalStateException	__label__MethodCallSequenceDirective
 Write the data and fields to the specified ObjectOutput stream, which must be the same stream that produced this PutField object.	__label__NonCall-basedStateDirective
 The current thread must own this object's monitor.	__label__NonCall-basedStateDirective
 This method should only be called by a thread that is the owner of this object's monitor.	__label__NonCall-basedStateDirective
 Note that IndexOutOfBoundsException IS returned for invalid negative indices.	__label__NonCall-basedStateDirective
 Once compare has been called, the FixedOrderComparator is locked and attempts to modify it yield an UnsupportedOperationException.	__label__NonCall-basedStateDirective
 Therefore, if the reading of one ResultSet object is interleaved with the reading of another, each must have been generated by different Statement objects.	__label__NonCall-basedStateDirective
 @throws ArithmeticException if the rounding mode is { UNNECESSARY} and the { BigDecimal} operation would require rounding.	__label__NonCall-basedStateDirective
 @exception SecurityException if a security manager exists and if the caller does not have LoggingPermission("control").	__label__NonCall-basedStateDirective
 @exception SecurityException if a security manager exists and its checkMulticast method doesn't allow the join.	__label__NonCall-basedStateDirective
 The current thread is assumed to hold the lock associated with this { Condition} when this method is called.	__label__NonCall-basedStateDirective
 Subclasses that require a different dialog area may either override this method, or call the super implementation and add controls to the created composite.	__label__AlternativeDirective
 Subclasses must implement createControl rather than overriding this method.	__label__AlternativeDirective
 Subclasses should override createCustomArea to add contents below the message.	__label__AlternativeDirective
 As SO_SNDBUF is a hint, applications that want to verify what size the buffer is should call {@link #getSendBufferSize()}.	__label__AlternativeDirective
 If arbitrary parameter type conversions are required, the method setObject should be used with a target SQL type.	__label__AlternativeDirective
 Not all databases allow for a non-typed Null to be sent to the backend. For maximum portability, the setNull or the setObject(String parameterName, Object x, int sqlType) method should be used instead of setObject(String parameterName, Object x).	__label__AlternativeDirective
 If a new Float instance is not required, this method should generally be used in preference to the constructor {@link #Float(float)}, as this method is likely to yield significantly better space and time performance by caching frequently requested values.	__label__AlternativeDirective
 Most programmers should use the {@link #toString} method in preference to this one, as the toString method may return a more user-friendly name.	__label__AlternativeDirective
 The {@link java.nio.charset.CharsetDecoder} class should be used when more control over the decoding process is required.	__label__AlternativeDirective
 If a new Boolean instance is not required, this method should generally be used in preference to the constructor {@link #Boolean(boolean)}, as this method is likely to yield significantly better space and time performance.	__label__AlternativeDirective
 In general, {@link java.lang.String#toUpperCase()} should be used to map characters to uppercase.	__label__AlternativeDirective
 Content providers for tree viewers must implement either the {@link ITreeContentProvider} interface, (as of 3.2) the {@link ILazyTreeContentProvider} interface, or (as of 3.3) the {@link ILazyTreePathContentProvider}.	__label__AlternativeDirective
 An alternative to this method is to use {@link #keySet()}.	__label__AlternativeDirective
 Note that Flat3Map is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 Note that PredicatedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 Under many circumstances, linking Iterators together in this manner is more efficient (and convenient) than reading out the contents of each Iterator into a List and creating a new Iterator.	__label__AlternativeDirective
 Because a Locale object is just an identifier for a region, no validity check is performed when you construct a Locale. If you want to see whether particular resources are available for the Locale you construct, you must query those resources.	__label__AlternativeDirective
 Implementations typically return null from a subsequant get(Object), however they may choose to return an empty collection.	__label__AlternativeDirective
 For random access data (such as an array), AbstractList should be used in preference to this class.	__label__AlternativeDirective
 If multiple threads access a tree set concurrently, and at least one of the threads modifies the set, it must be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the set. If no such object exists, the set should be "wrapped" using the {@link Collections#synchronizedSortedSet Collections.synchronizedSortedSet} method.	__label__AlternativeDirective
 The following extension interfaces exist:      {@link org.eclipse.jface.text.IInformationControlCreatorExtension} since version 3.0 introducing checks of whether existing information control can be reused and whether information control creators can replace each other.	__label__AlternativeDirective
 Programmers do not normally create ManagementPermission objects directly. Instead they are created by the security policy code based on reading the security policy file.	__label__AlternativeDirective
 Note that the current contents of the MemoryHandler buffer are not written out. That requires a "push".	__label__AlternativeDirective
 It is recommended that getFontDataArray is used instead.	__label__AlternativeDirective
 @deprecated This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.	__label__AlternativeDirective
 StringTokenizer is a legacy class that is retained for compatibility reasons although its use is discouraged in new code. It is recommended that anyone seeking this functionality use the split method of String or the java.util.regex package instead.	__label__AlternativeDirective
 This factory, whose parameter list uses the varargs feature, may be used to create an enum set initially containing an arbitrary number of elements, but it is likely to run slower than the overloadings that do not use varargs.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of updateCharacterStream which takes a length parameter.	__label__AlternativeDirective
 If a pattern is to be used multiple times, compiling it once and reusing it will be more efficient than invoking this method each time.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of updateBinaryStream which takes a length parameter.	__label__AlternativeDirective
 The style bit SWT.WRAP should be used if a larger message area is desired.	__label__AlternativeDirective
 Since 3.3, an alternative API is available, see {@link ViewerColumn#setEditingSupport(EditingSupport)} for a more flexible way of editing values in a column viewer.	__label__AlternativeDirective
 Since 3.3, an alternative API is available, see {@link ViewerColumn#setEditingSupport(EditingSupport)} for a more flexible way of editing values in a column viewer.	__label__AlternativeDirective
 Dialog does not use the following images in the registry DLG_IMG_ERROR DLG_IMG_INFO DLG_IMG_QUESTION DLG_IMG_WARNING They are now coming directly from SWT, see ImageRegistry. For backwards compatibility they are still supported, however new code should use SWT for these.	__label__AlternativeDirective
 When possible, this method checks for write permissions and other operating system restrictions and will therefore usually provide a more accurate estimate of how much new data can actually be written than {@link #getFreeSpace}.	__label__AlternativeDirective
 Since the order of format elements in a pattern string often changes during localization, it is generally better to use the {@link #setFormatsByArgumentIndex setFormatsByArgumentIndex} method, which assumes an order of formats corresponding to the order of elements in the arguments array passed to the format methods or the result array returned by the parse methods.	__label__AlternativeDirective
 @deprecated Since 3.4, the default implementation of {@link CellLabelProvider#initialize(ColumnViewer, ViewerColumn)} in this class will set up the necessary owner draw callbacks automatically. Calls to this method can be removed.	__label__AlternativeDirective
 When using a capacity-restricted queue, this method is generally preferable to {@link #add}, which can fail to insert an element only by throwing an exception.	__label__AlternativeDirective
 When using a capacity-restricted deque, it is generally preferable to use {@link #offerLast(Object) offerLast}.	__label__AlternativeDirective
 implementations must synchronized on the hierarchy lock and "children" protected field	__label__SynchronizationDirective
 In all cases, before this method can return the current thread must re-acquire the lock associated with this condition.	__label__SynchronizationDirective
 f multiple threads access a format concurrently, it must be synchronized externally.	__label__SynchronizationDirective
 This method is NOT thread-safe in any special way. You must manually synchronize on either this class or the stream as required.	__label__SynchronizationDirective
 Instances of ComparatorChain are not synchronized. The class is not thread-safe at construction time, but it is thread-safe to perform multiple comparisons after all the setup operations are complete.	__label__SynchronizationDirective
 The cursor enables iteration and list changes to occur in any order without invalidating the iterator (from one thread).	__label__SynchronizationDirective
 You must manually synchronize on the returned buffer's iterator to avoid non-deterministic behavior:   Map m = MapUtils.synchronizedSortedMap(myMap);  Set s = m.keySet();  // outside synchronized block  synchronized (m) {  // synchronized on MAP!      Iterator i = s.iterator();      while (i.hasNext()) {          process (i.next());      }  }	__label__SynchronizationDirective
 It is recommended that to avoid confusion you never use { Lock} instances in this way, except within their own implementation.	__label__SynchronizationDirective
 It is imperative that the user manually synchronize on the returned sorted map when iterating over any of its collection views, or the collections views of any of its subMap, headMap or tailMap views.    SortedMap m = Collections.synchronizedSortedMap(new TreeMap());       ...   Set s = m.keySet();  // Needn't be in synchronized block       ...   synchronized(m) {  // Synchronizing on m, not s!       Iterator i = s.iterator(); // Must be in synchronized block       while (i.hasNext())           foo(i.next());   }	__label__SynchronizationDirective
 All CertPath objects must be thread-safe. That is, multiple threads may concurrently invoke the methods defined in this class on a single CertPath object (or more than one) with no ill effects.	__label__SynchronizationDirective
 Threads that need to access a single CertPathValidatorSpi instance concurrently should synchronize amongst themselves and provide the necessary locking before calling the wrapping CertPathValidator object.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 Note that PredicatedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. T	__label__SynchronizationDirective
 Generally, semaphores used to control resource access should be initialized as fair, to ensure that no thread is starved out from accessing a resource.	__label__SynchronizationDirective
 Note that passing in an invalid id results in unspecified behavior.	__label__SynchronizationDirective
 A ResourceBundle.Control instance must be thread-safe if it's simultaneously used by multiple threads.	__label__SynchronizationDirective
 This method should query if the state of the object permits it to be acquired in the exclusive mode, and if so to acquire it.	__label__SynchronizationDirective
 An implementation is required to clearly document the semantics and guarantees provided by each of the waiting methods	__label__MiscellaneousDirective
 For indeterminate progress, we don't have to know the total amount of work in advance and no worked method needs to be called.	__label__MiscellaneousDirective
 The instanceof operator should be used to determine the specific kind of object returned.	__label__MiscellaneousDirective
 As a matter of style, programmers should always use this annotation on the most deeply nested element where it is effective.	__label__MiscellaneousDirective
 Any restrictions and the exception type must be documented by that { Lock} implementation.	__label__MiscellaneousDirective
 As in the one argument version, interrupts and spurious wakeups are possible, and this method should always be used in a loop:       synchronized (obj) {          while (<condition does not hold>)              obj.wait(timeout, nanos);          ... // Perform action appropriate to condition      }	__label__MiscellaneousDirective
 The StringBuilder class should generally be used in preference to this one, as it supports all of the same operations but it is faster, as it performs no synchronization.	__label__MiscellaneousDirective
 he class remained source and test compatible, so if you can recompile all your classes and dependencies everything is OK.	__label__MiscellaneousDirective
 Implementations should allow a value to be looked up from a key and a key to be looked up from a value with equal performance.	__label__MiscellaneousDirective
 The {@link #atomic(Runnable)} method is provided to allow atomic iterations and bulk operations; however, overuse of {@link #atomic(Runnable) atomic} will basically result in a map that's slower than an ordinary synchronized {@link java.util.HashMap}.	__label__MiscellaneousDirective
 The add methods are affected by this class. Thus objects must be removed or searched for using their transformed form. For example, if the transformation converts Strings to Integers, you must use the Integer form to remove objects.	__label__MiscellaneousDirective
 Note that the amount of memory required to hold an object of any given type may be implementation-dependent.	__label__MiscellaneousDirective
 Note that this implementation requires linear time in the size of the map;	__label__MiscellaneousDirective
 When a TCP connection is closed the connection may remain in a timeout state for a period of time after the connection is closed (typically known as the TIME_WAIT state or 2MSL wait state). For applications using a well known socket address or port it may not be possible to bind a socket to the required SocketAddress if there is a connection in the timeout state involving the socket address or port.	__label__MiscellaneousDirective
 Sets a new selection for this viewer and optionally makes it visible. The TableViewer implementation of this method is inefficient for the ILazyContentProvider as lookup is done by indices rather than elements and may require population of the entire table in worse case.  Use Table#setSelection(int[] indices) and Table#showSelection() if you wish to set selection more efficiently when using a ILazyContentProvider.	__label__MiscellaneousDirective
 Due to the inherently imprecise nature of the result, it is recommended that this method only be used for informational purposes.	__label__MiscellaneousDirective
return group code location	__label__nonDir
notifies registered listener rowset object given rowsetevent object ha populated number additional row	__label__nonDir
addition standard arithmetic operation biginteger provides modular arithmetic gcd calculation primality testing prime generation bit manipulation miscellaneous operation	__label__nonDir
information stub file see generated file stub	__label__nonDir
servant manager supply poa ability activate object demand poa receives request targeted inactive object	__label__nonDir
class forkjoinpool provides executor primarily designed processing instance forkjointask subclass	__label__nonDir
ease-of-use constant getalignmenty	__label__nonDir
information holder file see generated file holder file	__label__nonDir
org/omg/iop/taggedprofilehelper.java	__label__nonDir
constant microsoft window context menu key	__label__nonDir
holder boolean	__label__nonDir
release socket option defined used network channel channel package	__label__nonDir
check duration equal specified duration	__label__nonDir
represents formal type parameter generic class interface method constructor element	__label__nonDir
contains class interface used jfilechooser component	__label__nonDir
process event window	__label__nonDir
language model follows mirror-based design see gilad bracha david ungar	__label__nonDir
package includes small standardized extensible framework well class provide useful functionality otherwise tedious difficult implement	__label__nonDir
return true jcombobox editable	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
framework allows client framework locate run compiler program	__label__nonDir
namingcontextext extension namingcontext contains set name binding name unique part interoperable naming service	__label__nonDir
core responsibility focustraversalpolicy provide algorithm determining next previous component focus traversing forward backward ui	__label__nonDir
bigdecimal give user complete control rounding behavior allowing user choose comprehensive set eight rounding mode	__label__nonDir
helper policytype	__label__nonDir
return string representation jtextpane	__label__nonDir
determines component one immediate subcomponents contains x location return containing component	__label__nonDir
return resultset object containing original value current row cachedrowset object	__label__nonDir
holder class java.io.serializable used store inout parameter idl method	__label__nonDir
mbean whose management interface determined reflection java interface	__label__nonDir
determines preferred size container argument using card layout	__label__nonDir
represents exception thrown mbean server performing operation mbeans	__label__nonDir
package also support secure stream sealed object	__label__nonDir
return collection containing thread may waiting acquire shared mode	__label__nonDir
cachedrowset object syncprovider contains connection object resultset jdbc property passed constructor	__label__nonDir
information holder file see generated file holder file	__label__nonDir
call revalidate come within textfield handled validating textfield unless textfield contained within jviewport case return false	__label__nonDir
used avoid throwing exception	__label__nonDir
package specification java™ cryptography architecture jca reference guide rfc internet x.509 public key infrastructure certificate certificate revocation list crl profile rfc x.509 internet public key infrastructure online certificate status protocol ocsp java™ cryptography architecture standard algorithm name documentation related documentation information x.509 certificate crls please see http www.ietf.org/rfc/rfc5280.txt java™ pki programmer guide x.509 certificate certificate revocation list crls	__label__nonDir
description copied class number	__label__nonDir
standard posture upright	__label__nonDir
constructor concrete subclass call us null default value	__label__nonDir
contains collection framework legacy collection class event model date time facility internationalization miscellaneous utility class string tokenizer random-number generator bit array	__label__nonDir
array service context forming service context list	__label__nonDir
type-safe enumeration possible dialog display user	__label__nonDir
determines offset start given line	__label__nonDir
example might query check date day february leap year calculates number day next birthday	__label__nonDir
dom-specific class javax.xml.crypto package	__label__nonDir
paint renderer part row	__label__nonDir
constant old persian unicode character block	__label__nonDir
information holder file see generated file holder file	__label__nonDir
set attribute control output printed page	__label__nonDir
org/omg/corba/policytypehelper.java generated idl-to-java compiler portable version src/share/classes/org/omg/portableserver/corba.idl saturday july pdt	__label__nonDir
return advance imagegraphicattribute	__label__nonDir
attribute key swapping foreground background paint	__label__nonDir
store date-time like	__label__nonDir
visit double value annotation	__label__nonDir
creates new atomicreference given initial value	__label__nonDir
description copied class basicscrollbarui	__label__nonDir
store date like	__label__nonDir
skip character	__label__nonDir
signal error sort ha occurred reading writing jar file	__label__nonDir
creates jcombobox contains element specified vector	__label__nonDir
return white color current theme	__label__nonDir
visitor program element based kind default behavior appropriate release_7 source version	__label__nonDir
draw bit special highlighting progress bar	__label__nonDir
name immutableinfo field	__label__nonDir
information helper file see generated file helper file	__label__nonDir
assigns default position glyph glyphvector	__label__nonDir
using sequential group label text field positioned vertically one another	__label__nonDir
exception indicates internal failure orb example orb ha detected corruption internal data structure	__label__nonDir
graphicsconfigtemplate class used obtain valid graphicsconfiguration	__label__nonDir
displaymode class encapsulates bit depth height width refresh rate graphicsdevice	__label__nonDir
may also contain string describing exception	__label__nonDir
creates spliterator element collection	__label__nonDir
package specification precise list supported section official specification java tm platform standard edition orb complies see official specification corba support java se	__label__nonDir
information operation built-in jpeg plug-in see jpeg metadata format specification usage note	__label__nonDir
number row make visible one time	__label__nonDir
provides exposed attribute action dynamic mbean using mbeaninfo object	__label__nonDir
class providing apis corba object request broker feature	__label__nonDir
typically choose previous valid date would last valid day february example	__label__nonDir
servant manager supply poa ability activate object demand poa receives request targeted inactive object	__label__nonDir
audioclip interface simple abstraction playing sound clip	__label__nonDir
return next pseudorandom uniformly distributed boolean value random number generator sequence	__label__nonDir
interface used imagewriter implementation notify caller image thumbnail reading method warning non-fatal error	__label__nonDir
default keyboardfocusmanager awt application	__label__nonDir
provides interface enable development input method used java runtime environment	__label__nonDir
org/omg/iop/codecfactorypackage/unknownencodinghelper.java	__label__nonDir
used large model mark validcachedpreferredsize invalid component move	__label__nonDir
information holder file see generated file holder file	__label__nonDir
provides service allow java programming language agent instrument program running jvm	__label__nonDir
related documentation overview tutorial example guide tool documentation please see writing event listener section java tutorial	__label__nonDir
return string representation jcombobox	__label__nonDir
class awt permission	__label__nonDir
implementation scrollbar	__label__nonDir
encapsulates processing state poa associated	__label__nonDir
object used dii dsi describe argument return value	__label__nonDir
return mouse button ha changed state	__label__nonDir
document interface represents entire html xml document	__label__nonDir
interface used imagereader implementation notify caller image thumbnail reading method warning non-fatal error	__label__nonDir
return next layout update current position	__label__nonDir
aligns origin graphic center baseline line	__label__nonDir
information helper file see generated file helper file	__label__nonDir
report bound property change	__label__nonDir
cipheroutputstream composed outputstream cipher write method first process data writing underlying outputstream	__label__nonDir
row edited	__label__nonDir
class classloader process processbuilder runtime securitymanager system provide system operation manage dynamic loading class creation external process host environment inquiry time day enforcement security policy	__label__nonDir
appends given text end document	__label__nonDir
constant miscellaneous technical unicode character block	__label__nonDir
method change layout-related information therefore invalidates component hierarchy	__label__nonDir
alias iso_c0	__label__nonDir
filehandler either write specified file write rotating set file	__label__nonDir
cardlayout object layout manager container	__label__nonDir
fetch configured path-qualified java command name	__label__nonDir
notification class represents notification emitted mbean	__label__nonDir
permission class reflective operation	__label__nonDir
mark first integer id range paint event id	__label__nonDir
type include primitive type declared type class interface type array type type variable null type	__label__nonDir
produce following xml output math add add math	__label__nonDir
return left top side bearing glyph	__label__nonDir
represents primitive type	__label__nonDir
emits audio beep depending native system setting hardware capability	__label__nonDir
used base class implementation local idl interface java language mapping	__label__nonDir
holder floatseq	__label__nonDir
transparent stream update associated message digest using bit going stream	__label__nonDir
summary typically line	__label__nonDir
return whether layout container validated dynamically resizing statically resizing complete	__label__nonDir
return concurrency rowset object	__label__nonDir
holder class string used store inout parameter idl operation	__label__nonDir
also high-performance implementation imageinputstream example native implementation particular platform installed used transparently application	__label__nonDir
adapter activator supply poa ability create child poa demand side-effect receiving request name child poa one child find_poa called activate parameter value true	__label__nonDir
entry keystore identified alias string	__label__nonDir
imageinputstream interface unifies streaming file-based operation	__label__nonDir
constant half-width character function key	__label__nonDir
holder ushortseq	__label__nonDir
used xmlelement.type signal type inferred signature property	__label__nonDir
single global logmanager object used maintain set shared state logger log service	__label__nonDir
see package specification javax.xml.bind.package javadoc additional common information	__label__nonDir
set designated parameter given blob object java programming language	__label__nonDir
skeletal visitor type default behavior appropriate release_6 source version	__label__nonDir
semaphore classic concurrency tool	__label__nonDir
reflection allows programmatic access information field method constructor loaded class use reflected field method constructor operate underlying counterpart within security restriction	__label__nonDir
holder current	__label__nonDir
provides service allow java programming language agent instrument program running jvm	__label__nonDir
return contextual shaper provided unicode range	__label__nonDir
return command name action event fired tray icon	__label__nonDir
glyph property	__label__nonDir
org/omg/iop/iorhelper.java	__label__nonDir
creates volatile off-screen drawable image used double buffering	__label__nonDir
protected do-nothing constructor use subclass	__label__nonDir
determines color model toolkit screen	__label__nonDir
array tagged component forming multiple component profile	__label__nonDir
return collection containing thread may waiting acquire	__label__nonDir
feature supported package include selection/highlighting editing style key mapping	__label__nonDir
retrieves rowset object current setting fetch direction	__label__nonDir
contains component layout manager event event listener adapter	__label__nonDir
return window involved focus activation change	__label__nonDir
contains portability apis rmi-iiop	__label__nonDir
request object consists name operation invoked nvlist containing argument operation	__label__nonDir
fetch named non-null style previously added	__label__nonDir
constant kharoshthi unicode character block	__label__nonDir
thrown invalid expression passed method constructing query	__label__nonDir
orb pass instance implementation interface parameter iorinterceptor.establish_components	__label__nonDir
invoked window activated	__label__nonDir
protectionparameter encapsulating callbackhandler	__label__nonDir
creates toolkit implementation scrollbar using specified peer interface	__label__nonDir
thrown application attempt access sequence class object corresponding typemirror	__label__nonDir
constant define public member valuemember class	__label__nonDir
example see example xmlenumvalue	__label__nonDir
constant non-numpad left arrow key	__label__nonDir
package provides interface used implementing pluggable authentication module	__label__nonDir
cvt preprogram	__label__nonDir
idassignmentpolicyvalue following value	__label__nonDir
construct mouseevent object specified source component type time modifier coordinate absolute coordinate click count popuptrigger flag button number	__label__nonDir
annotation associate value element annotation type	__label__nonDir
return layoutstyle implementing java look feel design guideline specified http java.sun.com/products/jlf/ed2/book/hig.visual2.html	__label__nonDir
method change layout-related information therefore invalidates component hierarchy	__label__nonDir
character encoding specification java.nio.charset.charset class describes naming convention character encoding well set standard encoding must supported every implementation java platform	__label__nonDir
visit type parameter element	__label__nonDir
reset stream	__label__nonDir
get range valid value field using temporal object refine result	__label__nonDir
bean context container bean defines execution environment bean contains	__label__nonDir
description copied class abstractborder	__label__nonDir
set value cell table model row column	__label__nonDir
alistener receive one two itemevents selected item change	__label__nonDir
return list method element	__label__nonDir
object-oriented programming system language application october	__label__nonDir
color pink	__label__nonDir
creates return updater object given field	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
interface intended drag gesture recognition implementation	__label__nonDir
modelmbeanconstructorinfo object describes constructor modelmbean	__label__nonDir
org/omg/iop/taggedprofileholder.java	__label__nonDir
release native screen resource used window subcomponents owned child	__label__nonDir
invoked window ha closed	__label__nonDir
package specification jaxb specification related documentation overview tutorial example guide tool documentation please see jaxb website	__label__nonDir
get vertical gap component	__label__nonDir
example jar url refers jar entry	__label__nonDir
return descent shapegraphicattribute	__label__nonDir
cause current thread wait signalled interrupted	__label__nonDir
