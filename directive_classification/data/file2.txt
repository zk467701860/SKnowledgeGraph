 @param iterator the iterator to add to the collation, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if list is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the buffer is null	__label__NotNullDirective
 @throws IllegalArgumentException if list is null	__label__NotNullDirective
 @param iterator the iterator to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param entry the entry to copy, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @throws NullPointerException if name is null.	__label__NotNullDirective
 @param put to wrap, must not be null	__label__NotNullDirective
 @param predicates a collection of predicates to check, may not be null	__label__NotNullDirective
 @throws IllegalArgumentException if any predicate in the collection is null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param coll2 the first collection, must not be null	__label__NotNullDirective
 @param collection the collection to add to, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param b the second collection, must not be null	__label__NotNullDirective
 @param transformer the transformer for the buffer, must not be null	__label__NotNullDirective
 @param a the first collection, must not be null	__label__NotNullDirective
 @param predicate the predicate for the bag, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the SortedMap is null	__label__NotNullDirective
 @throws NullPointerException if the key is null and null keys are invalid	__label__NotNullDirective
 . @param map the map to synchronize, must not be null	__label__NotNullDirective
 @param map the map to synchronize, must not be null	__label__NotNullDirective
 @param transformerFactory the factory for creating new objects, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param factory the factory for creating new objects, must not be null	__label__NotNullDirective
 @param transformer the transformer for the list, must not be null	__label__NotNullDirective
 @param a the first collection, must not be null	__label__NotNullDirective
 @param predicates array of predicates, cloned, no nulls	__label__NotNullDirective
 @throws NullPointerException if the entry is null	__label__NotNullDirective
 @throws IllegalArgumentException if the prototype is null	__label__NotNullDirective
 @throws IllegalArgumentException if the classToInstantiate is null	__label__NotNullDirective
 @throws NullPointerException if either srcCspace or dstCspace is null	__label__NotNullDirective
 @throws NullPointerException if array is null	__label__NotNullDirective
 @param out the stream to print to, must not be null	__label__NotNullDirective
 @throws NullPointerException if the stream is null	__label__NotNullDirective
 Insert the specified contents into the control's current contents. Must not be null.	__label__NotNullDirective
 @throws NullPointerException if { b} is null	__label__NotNullDirective
 @param value the value for the entry, may be null	__label__NullSemanticsDirective
 If this parameter is null, then only a specified keyStroke will invoke content proposal	__label__NullSemanticsDirective
 @param key the key to use when persisting the user's preference; null if you don't want it persisted.	__label__NullSemanticsDirective
 @param store the IPreference store in which the user's preference should be persisted; null if you don't want it persisted automatically.	__label__NullSemanticsDirective
 the font or null to use the default font	__label__NullSemanticsDirective
 If subjectKeyID is not null, it should contain a single DER encoded value corresponding to the contents of the extension value (not including the object identifier, criticality setting, and encapsulating OCTET STRING) for a SubjectKeyIdentifier extension.	__label__NullSemanticsDirective
 If key is not null, it should contain a single DER encoded SubjectPublicKeyInfo structure, as defined in X.509.	__label__NullSemanticsDirective
 Specify null to return all Certificates (if supported).	__label__NullSemanticsDirective
 @param dir the working directory of the subprocess, or null if the subprocess should inherit the working directory of the current process.	__label__NullSemanticsDirective
 @param outputCollection the collection to output into, may not be null	__label__NullSemanticsDirective
 @param valueTransformer the transformer for the map values, null means no transformation	__label__NullSemanticsDirective
 @param keyTransformer the transformer to use for key conversion, null means no conversion	__label__NullSemanticsDirective
 @param valueTransformer the predicate to validate to values, null means no transformation	__label__NullSemanticsDirective
 @param valuePredicate the predicate to validate to values, null means no check	__label__NullSemanticsDirective
 @param object the object to add, if null it will not be added @return true if the collection changed	__label__NullSemanticsDirective
 @param valuePredicate the predicate to validate to values, null means no check	__label__NullSemanticsDirective
 @param comparator the comparator used to order the elements, null means use natural order	__label__NullSemanticsDirective
 A null value indicates that the elements' {@linkplain Comparable natural ordering} should be used.	__label__NullSemanticsDirective
 If the number of formal parameters required by the underlying constructor is 0, the supplied initargs array may be of length 0 or null.	__label__NullSemanticsDirective
 @param resourceBundleName name of ResourceBundle to be used for localizing messages for this logger. May be null if none of the messages require localization.	__label__NullSemanticsDirective
 @param key the key for the entry, may be null	__label__NullSemanticsDirective
 @param text the text to be shown in the info hover, or null if no text should be shown.	__label__NullSemanticsDirective
 @param annotationHover the hover to be used, null is a valid argument	__label__NullSemanticsDirective
 @param newSelection the selection after the update, or null if none	__label__NullSemanticsDirective
 The block increment must be greater than zero	__label__NumberRangeDirective
 The ttl must be in the range 0 <= ttl <= 255	__label__NumberRangeDirective
 The timeout must be > 0.	__label__NumberRangeDirective
 @param size the size to which to set the send buffer size. This value must be greater than 0.	__label__NumberRangeDirective
 Specifying a port number of -1 indicates that the URL should use the default port for the protocol.	__label__NumberRangeDirective
 This value may be negative, in which case releases must occur before any acquires will be granted.	__label__NumberRangeDirective
 @param length the number of consecutive bytes to be copied; the value for length must be 0 or greater	__label__NumberRangeDirective
 @param kind the kind of dialog to open, one of {@link #ERROR}, {@link #INFORMATION}, {@link #QUESTION}, {@link #WARNING}, {@link #CONFIRM}, or {#QUESTION_WITH_CANCEL}.	__label__NumberRangeDirective
 A valid port value is between 0 and 65535.	__label__NumberRangeDirective
 The name must conform to RFC 2965.	__label__StringFormatDirective
 The prefix argument must be at least three characters long.	__label__StringFormatDirective
 It also understands the continental U.S. time-zone abbreviations, but for general use, a time-zone offset should be used: "Sat, 12 Aug 1995 13:30:00 GMT+0430" (4 hours, 30 minutes west of the Greenwich meridian).	__label__StringFormatDirective
 @param header a String specifying the set-cookie header. The header should start with "set-cookie", or "set-cookie2" token; or it should have no leading token at all.	__label__StringFormatDirective
 The World Wide Web Consortium Recommendation states that UTF-8 should be used. Not doing so may introduce incompatibilites.	__label__StringFormatDirective
 If the conversion is 'a' or 'A', then the precision must not be specified.	__label__StringFormatDirective
 For ignorable characters, the first rule must start with a relation (the examples we have used above are really fragments; "a < b" really should be "< a < b").	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 If a name is specified as a byte array, it should contain a single DER encoded distinguished name, as defined in X.501.	__label__StringFormatDirective
 For a user-named parameter the fully-qualified SQL type name of the parameter should also be given, while a REF parameter requires that the fully-qualified type name of the referenced type be given. A JDBC driver that does not need the type code and type name information may ignore it. To be portable, however, applications should always provide these values for user-named and REF parameters.	__label__StringFormatDirective
 Valid strings are Base64 encoded binary data, as defined in RFC 2045, Section 6.8, with one minor change: the string must consist solely of characters from the Base64 Alphabet; no newline characters or extraneous characters are permitted.	__label__StringFormatDirective
 HTTP requires all request properties which can legally have multiple instances with the same key to use a comma-seperated list syntax which enables multiple properties to be appended into a single property.	__label__StringFormatDirective
 The recommended encoding scheme to use is UTF-8. However, for compatibility reasons, if an encoding is not specified, then the default encoding of the platform is used.	__label__StringFormatDirective
 A URL can optionally specify a "port", which is the port number to which the TCP connection is made on the remote host machine. If the port is not specified, the default port for the protocol is used instead. For example, the default port for http is 80. An alternative port could be specified as:           http://www.socs.uts.edu.au:80/MosaicDocs-old/url-primer.html	__label__StringFormatDirective
 All elements in the collection must be mutually comparable by the specified comparator (that is, comp.compare(e1, e2) must not throw a ClassCastException for any elements e1 and e2 in the collection).	__label__MethodParameterTypeDirective
 Furthermore, all such elements must be mutually comparable: e1.compareTo(e2) (or comparator.compare(e1, e2)) must not throw a ClassCastException for any elements e1 and e2 in the sorted set.	__label__MethodParameterTypeDirective
 All keys and values must implement Comparable	__label__MethodParameterTypeDirective
 Both key and value must implement Comparable.	__label__MethodParameterTypeDirective
 The second argument must be an object type; for integral values, the java.lang equivalent objects should be used.	__label__MethodParameterTypeDirective
 @param insertPos the position in the text where the character was inserted. Must not be less than the start of newParagraph, and must be less than the end of newParagraph.	__label__MethodParameterCorrelationDirective
 In that case, the number of bands in the source Raster must match the number of components in srcCspace, and the number of bands in the destination Raster must match the number of components in dstCspace	__label__MethodParameterCorrelationDirective
 If the protected key is of type java.security.PrivateKey, it must be accompanied by a certificate chain certifying the corresponding public key	__label__MethodParameterCorrelationDirective
 The length argument must be less than or equal to buf.length	__label__MethodParameterCorrelationDirective
 Ideally, you should choose a value to accommodate as many threads as will ever concurrently modify the table.	__label__MethodParameterCorrelationDirective
 @throws IllegalArgumentException if end is before start	__label__MethodParameterCorrelationDirective
 If the JDBC type expected to be returned to this output parameter is specific to this particular database, sqlType should be java.sql.Types.OTHER.	__label__MethodParameterCorrelationDirective
 The range must be sorted (as by the {@link #sort(double[], int, int)} method) prior to making this call.	__label__MethodParameterCorrelationDirective
 The range must be sorted (as by the {@link #sort(float[], int, int)} method) prior to making this call.	__label__MethodParameterCorrelationDirective
 The bytes in positions off through off+len-1 should have the format of a valid class file as defined by the Java Virtual Machine Specification	__label__MethodParameterCorrelationDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__MethodParameterCorrelationDirective
 @param b the bytes that make up the class data. The bytes from positions b.position() through b.position() + b.limit() -1 should have the format of a valid class file as defined by the Java Virtual Machine Specification.	__label__MethodParameterCorrelationDirective
 If the second argument is an InputStream then the stream must contain the number of bytes specified by scaleOrLength.	__label__MethodParameterCorrelationDirective
 Note that thes margins will be added to the ones specified by {@link #margins(int, int)}.	__label__MethodParameterCorrelationDirective
 @return the dialog, after being closed by the user, which the client can only call getReturnCode() or getToggleState()	__label__Post-CallDirective
 If it is not then it must not be changed.	__label__Post-CallDirective
 To achieve laziness the actual work of parsing the available provider-configuration files and instantiating providers must be done by the iterator itself.	__label__Post-CallDirective
 @return The SWT look-up table for key stroke format information; never null.	__label__ReturnValueDirective
 @return The singleton instance; this value is never null.	__label__ReturnValueDirective
 If createButton was never called with this parameter, or if createButton is overridden, getOKButton will return null. @return the OK button or null	__label__ReturnValueDirective
 @return the OID (never null)	__label__ReturnValueDirective
 @return the number of processors available to the virtual machine; never smaller than one.	__label__ReturnValueDirective
 Results must be semi-monotonic	__label__ReturnValueDirective
 Ranges must be in ascending order and must not overlap.	__label__ReturnValueDirective
 It must contain at least a Locale instance equal to {@link java.util.Locale#US Locale.US}.	__label__ReturnValueDirective
 Thus, a custom equals method for a collection class that implements neither the List nor Set interface must return false when this collection is compared to any list or set.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.	__label__ReturnValueDirective
 by subclasses to use an alternate loading mechanism but must return a Class object	__label__ReturnValueDirective
 The List returned must be immutable and thread-safe.	__label__ReturnValueDirective
 f this operation is supported, the returned set of permissions must be a new mutable instance and it must support heterogeneous Permission types.	__label__ReturnValueDirective
 the returned set of permissions must be a new mutable instance and it must support heterogeneous Permission types.	__label__ReturnValueDirective
 All results returned by the {@link CertPathValidator#validate CertPathValidator.validate} method must implement this interface.	__label__ReturnValueDirective
 @return a new looping iterator	__label__ReturnValueDirective
 It must contain at least a Locale instance equal to {@link java.util.Locale#US Locale.US}.	__label__ReturnValueDirective
 Gets the previous key before the key specified, always null.	__label__ReturnValueDirective
 Since this method always increases the size of the bag, according to the {@link Collection#add(Object)} contract, it should always return true.	__label__ReturnValueDirective
 In other words, this method must allocate a new array	__label__ReturnValueDirective
 In other words, this method must allocate a new array	__label__ReturnValueDirective
 The iterator returned by the iterator method must implement hasNext and next.	__label__ReturnValueDirective
 This is not intended to be called outside of the workbench.	__label__MethodCallVisibilityDirective
 This constructor should only be used for serialization.	__label__MethodCallVisibilityDirective
 Denigrated, replaced by {@linkplain #getSubjectX500Principal()}. This method returns the subject as an implementation specific Principal object, which should not be relied upon by portable code.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL TIME values do not have a month component.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL Date values do not have a time component.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL Date values do not have a time component.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 The string representation of this binding -- for debugging purposes only.	__label__MethodCallVisibilityDirective
 An application should not normally try to catch ThreadDeath unless it must do some extraordinary cleanup operation (note that the throwing of ThreadDeath causes finally clauses of try statements to be executed before the thread officially dies). If a catch clause catches a ThreadDeath object, it is important to rethrow the object so that the thread actually dies.	__label__MethodCallVisibilityDirective
 A more complete and consistent set of LIFO stack operations is provided by the {@link Deque} interface and its implementations, which should be used in preference to this class.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 @deprecated As of 3.3, this class is no longer necessary.	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 This concrete dialog class can be instantiated as is	__label__MethodCallVisibilityDirective
 @throws ZipException if a compression (ZIP) format error occurs	__label__ExceptionRaisingDirective
 @exception SQLException if the columnIndex is not valid; if a database access error occurs; the result set concurrency is CONCUR_READ_ONLY or this method is called on a closed result set @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @exception IOException if an I/O error occurs. @exception SocketTimeoutException if setSoTimeout was previously called and the timeout has expired. @exception PortUnreachableException may be thrown if the socket is connected to a currently unreachable destination. Note, there is no guarantee that the exception will be thrown. @exception java.nio.channels.IllegalBlockingModeException if this socket has an associated channel, and the channel is in non-blocking mode	__label__ExceptionRaisingDirective
 @throws SQLException if parameterName does not correspond to a named parameter; if the driver does not support national character sets; if the driver can detect that a data conversion error could occur; if a database access error occurs or this method is called on a closed CallableStatement @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @exception SQLException if a database access error occurs	__label__ExceptionRaisingDirective
 If a security manager exists, its {@link SecurityManager#checkPermission checkPermission} method is called with a {@link RuntimePermission}("getenv."+name) permission. This may result in a {@link SecurityException} being thrown. If no exception is thrown the value of the variable name is returned.	__label__ExceptionRaisingDirective
 @param filename the file to load. @exception SecurityException if a security manager exists and its checkLink method doesn't allow loading of the specified dynamic library @exception UnsatisfiedLinkError if the file does not exist.	__label__ExceptionRaisingDirective
 @throws IllegalMonitorStateException if exclusive synchronization is not held @throws IllegalArgumentException if the given condition is not associated with this synchronizer @throws NullPointerException if the condition is null	__label__ExceptionRaisingDirective
 @exception SecurityException If a security manager, s, is present and any of the following conditions is met	__label__ExceptionRaisingDirective
 @throws IllegalFormatException If a format string contains an illegal syntax, a format specifier that is incompatible with the given arguments, insufficient arguments given the format string, or other illegal conditions. For specification of all possible formatting errors, see the Details section of the formatter class specification.	__label__ExceptionRaisingDirective
 Throws CloneNotSupportedException. This guarantees that enums are never cloned, which is necessary to preserve their "singleton" status. @return (never returns)	__label__ExceptionRaisingDirective
 @exception IOException If an I/O error occurs	__label__ExceptionRaisingDirective
 @exception EOFException if this input stream has reached the end. @exception IOException the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs.	__label__ExceptionRaisingDirective
 @exception IllegalArgumentException - if the array is null, or if any of the indices is not between 0 and the number of elements in the list minus 1 (inclusive)	__label__ExceptionRaisingDirective
 This exception must be thrown in a consistent fashion for synchronization to work correctly.	__label__ExceptionRaisingDirective
 Note that null is not an instance of any class, and e.compareTo(null) should throw a NullPointerException even though e.equals(null) returns false.	__label__ExceptionRaisingDirective
 For many such operations it is possible to return a value that indicates timeout; when that is not possible or desirable then TimeoutException should be declared and thrown.	__label__ExceptionRaisingDirective
 Generally speaking, this method should not throw an exception under any circumstances.	__label__ExceptionRaisingDirective
 Generally speaking, these SPI methods should not throw exceptions.	__label__ExceptionRaisingDirective
 There is one circumstance under which putSpi, removeSpi and childSpi should throw an exception: if the caller lacks sufficient privileges on the underlying operating system to perform the requested operation.	__label__ExceptionRaisingDirective
 @exception SQLException if there is an error accessing the length of the BLOB @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 The url argument that is passed as an argument must specify an absolute URL.	__label__MiscellaneousMethodCallDirective
 The file component must be specified.	__label__MiscellaneousMethodCallDirective
 The given CompositeData must contain the following attributes:	__label__MiscellaneousMethodCallDirective
 The name is provided as a byte array. This byte array should contain a single DER encoded distinguished name, as defined in X.501.	__label__MiscellaneousMethodCallDirective
 The keys should be immutable If they are not then they must not be changed after adding to the MultiKey.	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog;	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database;"" retrieves those without a catalog; null means catalog name should not be used to narrow down the search.	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param procedureNamePattern a procedure name pattern; must match the procedure name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param schema a schema name; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in this database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param columnNamePattern a parameter name pattern; must match the parameter or column name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in this database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 The range must be sorted (as by the {@link #sort(long[], int, int)} method) prior to making this call	__label__MiscellaneousMethodCallDirective
 This implementation of IRunnableContext#run(boolean, boolean, IRunnableWithProgress) blocks until the runnable has been run, regardless of the value of fork. It is recommended that fork is set to true in most cases. If fork is set to false, the runnable will run in the UI thread and it is the runnable's responsibility to call Display.readAndDispatch() to ensure UI responsiveness.	__label__MiscellaneousMethodCallDirective
 In the event of an error, a default image is returned if returnMissingImageOnError is true, otherwise null is returned.  Note: Even if returnMissingImageOnError is true, it is still possible for this method to return null in extreme cases, for example if SWT runs out of image handles.	__label__MiscellaneousMethodCallDirective
 Do not subclass.	__label__ExtensibleClassIdentificationDirective
 Note: this class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 This class is neither intended to be instantiated nor subclassed.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 Not intended to be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be subclassed outside the viewer framework.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 This interface is internal to the framework; it should not be implemented outside the framework.	__label__ExtensibleClassIdentificationDirective
 Clients may extend this class.	__label__ExtensibleClassIdentificationDirective
 it may also be subclassed.	__label__ExtensibleClassIdentificationDirective
 Clients may subclass this class but should expect some breakage by future releases.	__label__ExtensibleClassIdentificationDirective
 The interface can be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 The interface can be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 This interface must be implemented by clients. Implementers should be registered with a reconciler in order get involved in the reconciling process.	__label__ExtensibleClassIdentificationDirective
 This interface may be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 The interface can be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 A runtime exception for Provider exceptions (such as misconfiguration errors or unrecoverable internal errors), which may be subclassed by Providers to throw specialized, provider-specific runtime errors.	__label__ExtensibleClassIdentificationDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 Subclasses may extend this method	__label__MethodOverridingDirective
 Subclasses may extend this method.	__label__MethodOverridingDirective
 subclasses must override this method	__label__MethodOverridingDirective
 They should override {@link #getInformationPresenterControlCreator()}.	__label__MethodOverridingDirective
 Subclasses should extend if extra pages need to be added before the wizard opens.	__label__MethodOverridingDirective
 Concrete subclasses must implement three methods:     1. format(Object obj, StringBuffer toAppendTo, FieldPosition pos)    2. formatToCharacterIterator(Object obj)    3. parseObject(String source, ParsePosition pos)	__label__MethodOverridingDirective
 Subclasses may reimplement this method to provide a more optimized implementation.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses must implement the IAction.run method to carry out the action's semantics.	__label__MethodOverridingDirective
 Subclasses may override this method to update additional buttons.	__label__MethodOverridingDirective
 Subclasses should override this method when an alternate default size is desired, rather than overriding {@link #getInitialSize()}.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override this method, but typically do not.	__label__MethodOverridingDirective
 Subclasses must implement this method to save the entered value into the preference store.	__label__MethodOverridingDirective
 May be extended by subclasses.	__label__MethodOverridingDirective
 May be replaced or extended by subclasses.	__label__MethodOverridingDirective
 May be replaced or extended by subclasses.	__label__MethodOverridingDirective
 May be replaced or extended by subclasses.	__label__MethodOverridingDirective
 Hook method to format the given single message.  Subclasses can change this to create a different format like HTML.	__label__MethodOverridingDirective
 Subclasses should override the default implementation, which returns null.	__label__MethodOverridingDirective
 Subclasses of FilterWriter should override some of these methods	__label__MethodOverridingDirective
 Subclasses may override this method to customize the cool bar manager.	__label__MethodOverridingDirective
 Subclasses may override this method to provide an alternative implementation for the tool bar manager.	__label__MethodOverridingDirective
 This framework method must be implemented by concrete subclasses.	__label__MethodOverridingDirective
 Subclasses should overwrite.	__label__MethodOverridingDirective
 Subclasses should overwrite this method, which has a default implementation (returning 0) for API backwards compatility reasons	__label__MethodOverridingDirective
 Subclasses of class Permission should override this if they need to store their permissions in a particular PermissionCollection object in order to provide the correct semantics when the PermissionCollection.implies method is called.	__label__MethodOverridingDirective
 Otherwise, it calls {@link #identityEquals(Identity) identityEquals}, which subclasses should override.	__label__MethodOverridingDirective
 Subclasses may override any of the following methods:      * isLabelProperty     * getImage     * getText     * dispose	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Overriding this method is generally not required; however, if overriding in a subclass, super.updateSelection must be invoked.	__label__MethodOverridingDirective
 Applications that want a stricter policy should override this method.	__label__MethodOverridingDirective
 Clients are expected to override the creation of the main dialog area, and may optionally override the creation of the title area and info area in order to add content.	__label__MethodOverridingDirective
 Implementors must either use the dialog font or override {@link #computeSizeConstraints(int, int)}.	__label__MethodOverridingDirective
 Subclasses can override this to match differently.	__label__MethodOverridingDirective
 Subclasses may override if the subclass has a specific field that must be present before put() or calculateThreshold() will work correctly.	__label__MethodOverridingDirective
 Subclasses may override if they have a specific field that must be present on read before this implementation will work.	__label__MethodOverridingDirective
 Subclasses can override this to return iterators with different properties.	__label__MethodOverridingDirective
 Override to transform the value when using setValue.	__label__MethodOverridingDirective
 Your subclasses must override two methods: handleGetObject and getKeys().	__label__MethodOverridingDirective
 Implementors must override the nine abstract service-provider interface (SPI) methods:	__label__MethodOverridingDirective
 Subclasses must override getContents and provide an array, where each item in the array is a pair of objects.	__label__MethodOverridingDirective
 To implement a modifiable collection, the programmer must additionally override this class's add method (which otherwise throws an UnsupportedOperationException),	__label__MethodOverridingDirective
 May be overidden by handlers for other protocols that have different requirements for hashCode calculation.	__label__MethodOverridingDirective
 It is recommended that subclasses override this method.	__label__MethodOverridingDirective
 This method is meant to be overidden by handlers with default port numbers.	__label__MethodOverridingDirective
 It can be overriden in a subclass.	__label__MethodOverridingDirective
 Subclasses may override this method to invoke completion callbacks or perform bookkeeping.	__label__MethodOverridingDirective
 Subclasses are encouraged to provide a more efficient implementation of this method.	__label__MethodOverridingDirective
 Note: This default is incorrect but cannot be changed in order not to break any existing clients. Subclasses should overwrite this method and use {@link #getIndentPrefixesForTab(int)} if applicable.	__label__MethodOverridingDirective
 The class FilterInputStream itself simply overrides all methods of InputStream with versions that pass all requests to the contained input stream. Subclasses of FilterInputStream may further override some of these methods and may also provide additional methods and fields.	__label__MethodOverridingDirective
 Subclasses typically need not override this method,	__label__MethodOverridingDirective
 Do neither call nor override.	__label__MethodOverridingDirective
 Subclasses should always call super.getForegroundColorExclusions to aggregate the list.	__label__MethodExtensionDirective
 Subclasses call super.dispose	__label__MethodExtensionDirective
 Any subclass of RequiredModelMBean overloading or overriding this method should call super.preDeregister()	__label__MethodExtensionDirective
 Subclasses may call super as in the following example	__label__MethodExtensionDirective
 Subclasses can override or extend.	__label__MethodExtensionDirective
 close- extend to free other SWT resources	__label__MethodExtensionDirective
 extend dispose	__label__MethodExtensionDirective
 This method may be extended (super.close must be called).	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkListen at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkAccept at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If this method is overridden, then super.checkPackageDefinition should be called as the first line in the overridden method.	__label__MethodExtensionDirective
 If this method is overridden, then a call to super.checkMemberAccess cannot be made, as the default implementation of checkMemberAccess relies on the code being checked being at a stack depth of 4.	__label__MethodExtensionDirective
 Subclasses must call this method at the end of their constructor(s)	__label__CallContractSubclassingDirective
 The default implementation of this method should call getContent() and screen the return type for a match of the suggested types.	__label__CallContractSubclassingDirective
 The first serializable subclass must call this method from writeObject.	__label__CallContractSubclassingDirective
 Implementation of this method must finish their computation by setting the computation results using setInformation.	__label__CallContractSubclassingDirective
 . Should only succeed once per remote call.	__label__MethodImplementationDirective
 The implementation of the method must follow this protocol: * It must read each of the attributes or elements of the SQL type from the given input stream. This is done by calling a method of the input stream to read each item, in the order that they appear in the SQL definition of the type. * The method readSQL then assigns the data to appropriate fields or elements (of this or other objects). Specifically, it must call the appropriate reader method (SQLInput.readString, SQLInput.readBigDecimal, and so on) method(s) to do the following: for a distinct type, read its single data element; for a structured type, read a value for each attribute of the SQL type.	__label__MethodImplementationDirective
 Marking a closed stream should not have any effect on the stream.	__label__MethodImplementationDirective
 The driver shall submit a query on the connection or use some other mechanism that positively verifies the connection is still valid when this method is called.  The query submitted by the driver to validate the connection shall be executed in the context of the current transaction.	__label__MethodImplementationDirective
 It is strongly recommended, but not strictly required that (x.compareTo(y)==0) == (x.equals(y)).	__label__MethodImplementationDirective
 Therefore, most methods with more than 0.5 ulp errors are required to be semi-monotonic: whenever the mathematical function is non-decreasing, so is the floating-point approximation, likewise, whenever the mathematical function is non-increasing, so is the floating-point approximation.	__label__MethodImplementationDirective
 All general-purpose map implementation classes should provide two "standard" constructors: a void (no arguments) constructor which creates an empty map, and a constructor with a single argument of type Map, which creates a new map with the same key-value mappings as its argument.	__label__MethodImplementationDirective
 A single call to { add(int, E)} or { remove(int)} must add no more than one to this field, or the iterators (and list iterators) will throw bogus { ConcurrentModificationExceptions}.	__label__MethodImplementationDirective
 Two possibly null elements e1 and e2 are deeply equal if any of the following conditions hold:      e1 and e2 are both arrays of object reference types, and Arrays.deepEquals(e1, e2) would return true     e1 and e2 are arrays of the same primitive type, and the appropriate overloading of Arrays.equals(e1, e2) would return true.     e1 == e2     e1.equals(e2) would return true.   Note that this definition permits null elements at any depth.	__label__MethodImplementationDirective
 Generic list algorithms are encouraged to check whether the given list is an instanceof this interface before applying an algorithm that would provide poor performance if it were applied to a sequential access list, and to alter their behavior if necessary to guarantee acceptable performance.	__label__MethodImplementationDirective
 Assumes that all annotations are represented using the same height.	__label__MethodImplementationDirective
 This set will not contain the element once the call returns	__label__MethodImplementationDirective
 If you reimplement this method, you should also reimplement createContents.	__label__Non-localConsistencySubclassingDirective
 All CertPathBuilder implementations must include a class (the SPI class) that extends this class (CertPathBuilderSpi) and implements all of its methods.	__label__Non-localConsistencySubclassingDirective
 If this method returns true then calling unwrap with the same argument should succeed.	__label__Non-localConsistencySubclassingDirective
 The readExternal method must read the values in the same sequence and with the same types as were written by writeExternal.	__label__Non-localConsistencySubclassingDirective
 In order for the data structure to serialize successfully, the comparator (if provided) must implement Serializable.	__label__Non-localConsistencySubclassingDirective
 The reader must present a serialized form as produced by the save method.	__label__Non-localConsistencySubclassingDirective
 These methods must explicitly coordinate with the supertype to save its state.	__label__MiscellaneousSubclassingDirective
 Subclasses that hook their own focus listener should override this method and return false.	__label__MiscellaneousSubclassingDirective
 Most Deque implementations place no fixed limits on the number of elements they may contain, but this interface supports capacity-restricted deques as well as those with no fixed size limit.	__label__MiscellaneousSubclassingDirective
 This method must be called to release any resources associated with the stream.	__label__MethodCallSequenceDirective
 Must be called to release any resources associated with the stream	__label__MethodCallSequenceDirective
 Must be called to release any resources associated with the stream.	__label__MethodCallSequenceDirective
 All the data in the returned stream must be read prior to getting the value of any other column	__label__MethodCallSequenceDirective
 Note that you must first call one of the getter methods on a column to try to read its value and then call the method wasNull to see if the value read was SQL NULL	__label__MethodCallSequenceDirective
 This method may only be called once; the call must occur before JFaceResources.getFontRegistry is invoked	__label__MethodCallSequenceDirective
 The option must be set prior to entering a blocking operation to take effect	__label__MethodCallSequenceDirective
 This method must be called before the URLConnection is connected.	__label__MethodCallSequenceDirective
 Because isShowing returns false when the applet's start is first called, methods requiring isShowing to return true should be called from a ComponentListener.	__label__MethodCallSequenceDirective
 This method may only be called after initializeDialogUnits has been called.	__label__MethodCallSequenceDirective
 Done should only be called if the invoke returns successfully (non-exceptionally) to the stub.	__label__MethodCallSequenceDirective
 All OUT parameters must be registered before a stored procedure is executed.	__label__MethodCallSequenceDirective
 The getKeyStore method must be invoked before this method may be called.	__label__MethodCallSequenceDirective
 This means that you don't have to wrap instances of this class with {@link java.util.Collections#synchronizedMap(Map)}; instances are already thread-safe.	__label__MethodCallSequenceDirective
 Purges stale mappings from this map before write operations.	__label__MethodCallSequenceDirective
 An unused ExecutorService should be shut down to allow reclamation of its resources.	__label__MethodCallSequenceDirective
 @throws IllegalStateException if the next method has not yet been called, or the remove method has already been called after the last call to the next method.	__label__MethodCallSequenceDirective
 	__label__MethodCallSequenceDirective
 When waiting upon a { Condition}, a "spurious wakeup" is permitted to occur, in general, as a concession to the underlying platform semantics. This has little practical impact on most application programs as a { Condition} should always be waited upon in a loop, testing the state predicate that is being waited for.	__label__MethodCallSequenceDirective
 This can be used prior to a sequence of additions to avoid memory reallocation.	__label__MethodCallSequenceDirective
 Returns the SWT menu, created as a pop up menu parented by the given control. In most cases, this menu can be created once, cached and reused when the pop-up/drop-down action occurs. If the menu must be dynamically created (i.e., each time it is popped up or dropped down), the old menu should be disposed of before replacing it with the new menu.	__label__MethodCallSequenceDirective
 This method takes the Device that created the Image as an argument, allowing the original Image to be reused if the descriptor is asked for another Image on the same device.	__label__MethodCallSequenceDirective
 Painters are informed about changes to the viewer content and state and can take the necessary action in responds to the notification.	__label__MethodCallSequenceDirective
 This method will be called before any other method and can be called multiple times.	__label__MethodCallSequenceDirective
 Must be called before paint is called the first time.	__label__MethodCallSequenceDirective
 If no TableColumns were created by the programmer, this method will throw ERROR_INVALID_RANGE despite the fact that a single column of data may be visible in the table.	__label__MethodCallSequenceDirective
 Must be called before start. May again be called between start and stop.	__label__MethodCallSequenceDirective
 TableViewer#replace(Object, int) is not called before returning from this method selections may have missing or stale elements. In this situation it is suggested that the selection is asked for again after he update.	__label__MethodCallSequenceDirective
 This feature is only supported if the underlying list's {@link List#listIterator} method returns an implementation that supports it.	__label__NonCall-basedStateDirective
 The setValue() method on iterators will succeed only if the new value being set is not already in the bidimap.	__label__NonCall-basedStateDirective
 This version of registerOutParameter should be used when the parameter is of JDBC type NUMERIC or DECIMAL.	__label__NonCall-basedStateDirective
 ComparatorChains cannot be modified once they have performed a comparison.	__label__NonCall-basedStateDirective
 @throws IndexOutOfBoundsException if the index is out of range (index < 0 || index > size()).	__label__NonCall-basedStateDirective
 For each certificate cert in a certification path certPath, cert.getType().equals(certPath.getType()) must be true.	__label__NonCall-basedStateDirective
 A PKIX CertPathBuilder instance must not build paths longer than the length specified.	__label__NonCall-basedStateDirective
 The hover information control which is used to display the information must be able process the given object.	__label__NonCall-basedStateDirective
 If the current thread is the holder of this lock then the hold count is decremented. If the hold count is now zero then the lock is released. If the current thread is not the holder of this lock then {@link IllegalMonitorStateException} is thrown. @throws IllegalMonitorStateException if the current thread does not hold this lock.	__label__NonCall-basedStateDirective
 However, a call to set(Calendar.DAY_OF_MONTH, 30) before the call to getTime() sets the date to September 30, 1999, since no recomputation occurs after set() itself.	__label__NonCall-basedStateDirective
 After this method returns, the next character to be read will have the value cbuf[off], the character after that will have the value cbuf[off+1], and so forth.	__label__NonCall-basedStateDirective
 Subclassers are advised to override inputChanged rather than this method	__label__AlternativeDirective
 You must call either the method getResultSet or getUpdateCount to retrieve the result	__label__AlternativeDirective
 Client implementations of dispatchEvent and client-defined KeyEventDispatchers must call redispatchEvent(target, e) instead of target.dispatchEvent(e) to dispatch an event.	__label__AlternativeDirective
 The new {@link #setScale(int, RoundingMode)} method should be used in preference to this legacy method.	__label__AlternativeDirective
 When a { double} must be used as a source for a { BigDecimal}, note that this constructor provides an exact conversion; it does not give the same result as converting the { double} to a { String} using the {@link Double#toString(double)} method and then using the {@link #BigDecimal(String)} constructor. To get that result, use the { static} {@link #valueOf(double)} method.	__label__AlternativeDirective
 An application does not generally call the getContent method in this class directly. Instead, an application calls the getContent method in class URL or in URLConnection.	__label__AlternativeDirective
 It is recommended to use ViewerComparator instead.	__label__AlternativeDirective
 This method clears the existing bindings, but does not trigger a recomputation (other method calls are required to do that).	__label__AlternativeDirective
 Subclasses must either override this method or implement {@link IInformationControlExtension2}.	__label__AlternativeDirective
 A subclass should therefore use the object in this field rather than this or a synchronized method.	__label__AlternativeDirective
 If an application absolutely must call a getPermissions method, it should call getPermissions(ProtectionDomain).	__label__AlternativeDirective
 Denigrated, use {@linkplain #getIssuer()} or {@linkplain #getIssuerAsBytes()} instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.	__label__AlternativeDirective
 Denigrated, replaced by {@linkplain #getIssuerX500Principal()}. This method returns the issuer as an implementation specific Principal object, which should not be relied upon by portable code.	__label__AlternativeDirective
 In general, instances of this class should only be accessed through the CertStore class.	__label__AlternativeDirective
 Clients may use the standard implementation {@link org.eclipse.jface.text.TextViewer}.	__label__AlternativeDirective
 This method is no longer called by the framework and clients should overwrite {@link #apply(ITextViewer, char, int, int)} instead	__label__AlternativeDirective
 In general, {@link java.lang.String#toLowerCase()} should be used to map characters to lowercase.	__label__AlternativeDirective
 An alternative to this method is to use the better named {@link #keyList()} or {@link #keySet()}.	__label__AlternativeDirective
 This map is designed for performance and can outstrip HashMap. It also has good garbage collection characteristics.      * Optimised for operation at size 3 or less.     * Still works well once size 3 exceeded.     * Gets at size 3 or less are about 0-10% faster than HashMap,     * Puts at size 3 or less are over 4 times faster than HashMap.     * Performance 5% slower than HashMap once size 3 exceeded once.	__label__AlternativeDirective
 Note that TransformedSortedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedSortedMap}.	__label__AlternativeDirective
 Note that CompositeMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 WARNING: This method is binary incompatible with Commons Collections 2.1 and 2.1.1. Use new ArrayIterator(array,start,end) for compatability.	__label__AlternativeDirective
 If the last value for a key is removed, implementations typically return null from a subsequant get(Object), however they may choose to return an empty collection.	__label__AlternativeDirective
 @return the Collection of values, implementations should return null for no mapping, but may return an empty collection	__label__AlternativeDirective
 Unless prompt output is required, it is advisable to wrap a BufferedWriter around any Writer whose write() operations may be costly, such as FileWriters and OutputStreamWriters.	__label__AlternativeDirective
 If no such object exists, the map should be "wrapped" using the {@link Collections#synchronizedSortedMap Collections.synchronizedSortedMap} method.	__label__AlternativeDirective
 If you would like to ensure that unreferenced pools are reclaimed even if users forget to call {@link ThreadPoolExecutor#shutdown}, then you must arrange that unused threads eventually die, by setting appropriate keep-alive times, using a lower bound of zero core threads and/or setting {@link ThreadPoolExecutor#allowCoreThreadTimeOut(boolean)}.	__label__AlternativeDirective
 If {@link ICompletionProposalExtension5} is implemented, this method should not be called any longer.	__label__AlternativeDirective
 It is recommended to use setComparator() instead.	__label__AlternativeDirective
 This is not recommended and is included for backwards compatability. It is recommended to use the default font provided by SWT (that is, do not set the font).	__label__AlternativeDirective
 @deprecated as this method only checks or unchecks visible items is is recommended that {@link #setSubtreeChecked(Object, boolean)} is used instead.	__label__AlternativeDirective
 It is recommended that the {@link #probablePrime probablePrime} method be used in preference to this constructor unless there is a compelling need to specify a certainty.	__label__AlternativeDirective
 Subclasses of ClassLoader are encouraged to override {@link #findClass(String)}, rather than this method.	__label__AlternativeDirective
 May fail spuriously and does not provide ordering guarantees, so is only rarely an appropriate alternative to { compareAndSet}.	__label__AlternativeDirective
 If multiple threads access a hash set concurrently, and at least one of the threads modifies the set, it must be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the set. If no such object exists, the set should be "wrapped" using the {@link Collections#synchronizedSet Collections.synchronizedSet} method. This is best done at creation time, to prevent accidental unsynchronized access to the set:     Set s = Collections.synchronizedSet(new HashSet(...));	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of setClob which takes a length parameter.	__label__AlternativeDirective
 The default CertPathValidator type can be changed by setting the value of the "certpathvalidator.type" security property (in the Java security properties file) to the desired type.	__label__AlternativeDirective
 When using a capacity-restricted deque, it is generally preferable to use method {@link #offerLast}.	__label__AlternativeDirective
 For a one time comparison, this method has the best performance. If a given String will be involved in multiple comparisons, CollationKey.compareTo has the best performance.	__label__AlternativeDirective
 A subclass should therefore use the object in this field rather than this or a synchronized method.	__label__SynchronizationDirective
 Note that this implementation is not synchronized.	__label__SynchronizationDirective
 Instances of FixedOrderComparator are not synchronized. The class is not thread-safe at construction time, but it is thread-safe to perform multiple comparisons after all the setup operations are complete.	__label__SynchronizationDirective
 In either case the implementation must ensure that the signal is redirected to another waiting thread, if there is one.	__label__SynchronizationDirective
 Instances of this class need not be protected against concurrent access from multiple threads. Threads that need to access a single CertPathBuilderSpi instance concurrently should synchronize amongst themselves and provide the necessary locking before calling the wrapping CertPathBuilder object.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 Returns an iterator that does not support concurrent modification.  If the underlying list is modified while iterating using this iterator a ConcurrentModificationException will occur.	__label__SynchronizationDirective
 Note that DefaultedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 Note that IdentityMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 If multiple threads access a hash set concurrently, and at least one of the threads modifies the set, it must be synchronized externally.	__label__SynchronizationDirective
 If multiple threads access an identity hash map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally.	__label__SynchronizationDirective
 Note that this implementation is not synchronized. Multiple threads should not access a { PriorityQueue} instance concurrently if any of the threads modifies the queue.	__label__SynchronizationDirective
 The public methods of all CertStoreSpi objects must be thread-safe.	__label__SynchronizationDirective
 @param map the map to transform, must not be null, typically empty	__label__SynchronizationDirective
 When threads must repeatedly count down in this way, instead use a {@link CyclicBarrier}.	__label__SynchronizationDirective
 This method should only be called from the UI thread. If you are not on the UI thread then wrap the call with a PlatformUI.getWorkbench().getDisplay().synchExec() in order to guarantee the correct result. Failure to do this may result in an {@link SWTException} being thrown.	__label__SynchronizationDirective
 If this write lock is not held when any {@link Condition} method is called then an {@link IllegalMonitorStateException} is thrown. (Read locks are held independently of write locks, so are not checked or affected. However it is essentially always an error to invoke a condition waiting method when the current thread has also acquired read locks, since other threads that could unblock it will not be able to acquire the write lock.)	__label__SynchronizationDirective
 The JSR-181 tool must provide feedback if the service implementation bean is inconsistent with the portType and bindings declared in this WSDL.	__label__MiscellaneousDirective
 Typically, an exception will be thrown (such as {@link IllegalMonitorStateException}) and the implementation must document that fact.	__label__MiscellaneousDirective
 This constructor should only be used for serialization.	__label__MiscellaneousDirective
 Each class that implements PrivilegedAction should document what (if anything) this value represents.	__label__MiscellaneousDirective
 Not all databases allow for a non-typed Null to be sent to the backend. For maximum portability, the setNull or the setObject(int parameterIndex, Object x, int sqlType) method should be used instead of setObject(int parameterIndex, Object x).	__label__MiscellaneousDirective
 Not all databases allow for a non-typed Null to be sent to the backend. For maximum portability, the setNull or the setObject(String parameterName, Object x, int sqlType) method should be used instead of setObject(String parameterName, Object x).	__label__MiscellaneousDirective
 Generally speaking, any class that implements the Comparable interface and violates this condition should clearly indicate this fact.	__label__MiscellaneousDirective
 This method may be called frequently, so implementors should ensure it returns quickly, e.g. by caching the returned creator.	__label__MiscellaneousDirective
 Under many circumstances, linking Iterators together in this manner is more efficient (and convenient) than reading out the contents of each Iterator into a List and creating a new Iterator.	__label__MiscellaneousDirective
 Therefore, if a logging Handler wants to pass off a LogRecord to another thread, or to transmit it over RMI, and if it wishes to subsequently obtain method name or class name information it should call one of getSourceClassName or getSourceMethodName to force the values to be filled in.	__label__MiscellaneousDirective
 Compilers must ignore any warning names they do not recognize.	__label__MiscellaneousDirective
 For some memory pools, this method may be an expensive operation that requires some computation to determine the estimate.	__label__MiscellaneousDirective
 Beware that, unlike in most collections, the size method is not a constant-time operation. Because of the asynchronous nature of these sets, determining the current number of elements requires a traversal of the elements.	__label__MiscellaneousDirective
 Beware that, unlike in most collections, this method is NOT a constant-time operation. Because of the asynchronous nature of these queues, determining the current number of elements requires an O(n) traversal.	__label__MiscellaneousDirective
 Note that this implementation requires linear time in the size of the map.	__label__MiscellaneousDirective
 It is a compile-time error for a single ElementType constant to appear more than once in a Target annotation.	__label__MiscellaneousDirective
opportunity lazily evaluate desktop property value	__label__nonDir
provides interface class transferring data within application	__label__nonDir
orb responsible creating embodiment request delivering dynamic implementation routine dir	__label__nonDir
return location along x-axis render particular row	__label__nonDir
feature supported package include selection/highlighting editing style key mapping	__label__nonDir
indicates unknown kind type wa encountered	__label__nonDir
defines contract user-interface component assistive technology provides access component	__label__nonDir
attribute key paint used render text	__label__nonDir
return component tooltip applies	__label__nonDir
message digest secure one-way hash function take arbitrary-sized data output fixed-length hash value	__label__nonDir
also possible manually add service provider found automatically well remove using interface serviceregistry class	__label__nonDir
return preferred size dimension needed textfield	__label__nonDir
add specified action listener receive action event textfield	__label__nonDir
vertical metric header	__label__nonDir
helper doubleseq	__label__nonDir
return dialog plain	__label__nonDir
constant miscellaneous symbol pictograph unicode character block	__label__nonDir
constant public_member	__label__nonDir
point representing location x coordinate space specified integer precision	__label__nonDir
see package specification javax.xml.bind.package javadoc additional common information	__label__nonDir
return control info color current theme	__label__nonDir
class represents metadata set modelmbean element	__label__nonDir
provides class interface locating servant	__label__nonDir
multiplexing ui used combine comboboxuis	__label__nonDir
package specification collection framework overview collection framework annotated outline related documentation overview tutorial example guide tool documentation please see collection framework tutorial collection framework design faq	__label__nonDir
parameterizedtype represents parameterized type collection string	__label__nonDir
provides library support java programming language annotation facility	__label__nonDir
tell whether stream ready read	__label__nonDir
set element position given value	__label__nonDir
multiplexing ui used combine internalframeuis	__label__nonDir
object responsible handling sizing expanded issue	__label__nonDir
information helper file see generated file helper file	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
path searched order listed	__label__nonDir
visit byte value annotation	__label__nonDir
utility method operating program element	__label__nonDir
set designated parameter given java double value	__label__nonDir
provides portability layer set orb apis make possible code generated one vendor run another vendor orb	__label__nonDir
set field given object managed updater given updated value	__label__nonDir
description copied class abstractbutton	__label__nonDir
serialization note logrecord class serializable	__label__nonDir
request information accessible interceptor	__label__nonDir
implemented wide variety way even populate caller row nonrelational data source	__label__nonDir
similarly callables submitted executorservice	__label__nonDir
return height text	__label__nonDir
alias iso_c3	__label__nonDir
construct keyevent object	__label__nonDir
set designated parameter reader object	__label__nonDir
return array containing class object representing public class interface member class represented class object	__label__nonDir
constant f21 function key	__label__nonDir
column approximate average character width platform-dependent	__label__nonDir
get accessiblecontext associated jtogglebutton	__label__nonDir
org/omg/corba/octetseqholder.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00	__label__nonDir
construct query object constraint	__label__nonDir
description copied class number	__label__nonDir
writes data property metadata webrowset object given writer object xml format	__label__nonDir
provides class interface relating font	__label__nonDir
org/omg/corba/booleanseqhelper.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00 class definition ha modified conform following omg specification orb core defined corba formal/99-10-07 idl/java language mapping defined ptc/00-01-08	__label__nonDir
case bmp image writer select compression type support encoding given image without loss color resolution	__label__nonDir
extend class abstractownablesynchronizer simple class help record thread currently holding exclusive synchronization	__label__nonDir
provides class creating modifying image	__label__nonDir
panel simplest container class	__label__nonDir
computes hash code color	__label__nonDir
defines factory api enables application obtain parser produce dom object tree xml document	__label__nonDir
attribute key user-defined glyph display lieu font standard glyph character	__label__nonDir
visit executable element	__label__nonDir
return leading text	__label__nonDir
array wstrings	__label__nonDir
check field supported temporal object	__label__nonDir
scanning visitor program element default behavior appropriate release_8 source version	__label__nonDir
retrieves active filter filteredrowset object	__label__nonDir
class used prevent unauthorized access logging stream associated drivermanager may contain information table name column data	__label__nonDir
constant transport map symbol unicode character block	__label__nonDir
skeletal visitor program element default behavior appropriate release_6 source version	__label__nonDir
provides user interface object built according basic look feel	__label__nonDir
provides class performing arbitrary-precision integer arithmetic biginteger arbitrary-precision decimal arithmetic bigdecimal	__label__nonDir
holder	__label__nonDir
populates table system color	__label__nonDir
propagates row update insert delete change made cachedrowset object underlying data source	__label__nonDir
helper interface run nested event loop	__label__nonDir
return string describing keycode home f1	__label__nonDir
contains support representing type type multiple master font opentype font truetype font	__label__nonDir
add listener registered mbean	__label__nonDir
state change reported either object adapter adapter manager	__label__nonDir
information helper file see generated file helper file	__label__nonDir
indicates mouse button used getbutton	__label__nonDir
key indicating shape filled	__label__nonDir
initializes newly created sequenceinputstream remembering argument must enumeration produce object whose run-time type inputstream	__label__nonDir
description copied class componentui	__label__nonDir
information holder file see generated file holder file short used store inout parameter idl operation	__label__nonDir
creates new serializablepermission specified name	__label__nonDir
security reason often desirable use activeevent avoid calling untrusted code critical thread	__label__nonDir
subtracts object specified temporal object	__label__nonDir
sole constructor	__label__nonDir
inputstream provides reading mapped idl type stream	__label__nonDir
indicates mouse button used getbutton	__label__nonDir
kind notype void corresponds keyword void	__label__nonDir
standard system exception time-to-live qos applied invocation	__label__nonDir
org/omg/portableinterceptor/location_forward.java	__label__nonDir
class used request operation describe context need resolved sent invocation	__label__nonDir
constructor concrete subclass us null default value	__label__nonDir
org/omg/corba/wrongtransactionhelper.java generated idl-to-java compiler portable version corba.idl thursday august pm pdt	__label__nonDir
lowest justification priority	__label__nonDir
array string	__label__nonDir
org/omg/corba/shortseqhelper.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00 class definition ha modified conform following omg specification orb core defined corba formal/99-10-07 idl/java language mapping defined ptc/00-01-08	__label__nonDir
add path specified row current selection	__label__nonDir
provides class interface describe type javatm print service attribute collected attribute set	__label__nonDir
package implemented mime-based package processor enables interpretation creation optimized binary data within mime-based package format	__label__nonDir
process element calling e.accept p method may overridden subclass	__label__nonDir
multiplexing ui used combine slideruis	__label__nonDir
package contains messaging module specified omg corba messaging specification http cgi.omg.org/cgi-bin/doc formal/99-10-07	__label__nonDir
axis variation	__label__nonDir
method invocation return orb fill value corresponding value returned server	__label__nonDir
class implement notificationfilter interface attribute change notification	__label__nonDir
eventqueue platform-independent class queue event underlying peer class trusted application class	__label__nonDir
editing fail celleditor wo n't allow selected item	__label__nonDir
provides interface class i/o sequencing synthesis midi musical instrument digital interface data	__label__nonDir
get current value held field given object managed updater	__label__nonDir
return dialog bold	__label__nonDir
see also java.util.concurrent.locks java.util.concurrent.atomic package	__label__nonDir
return shape whose interior corresponds visual representation specified glyph within glyphvector	__label__nonDir
return supported cursor dimension closest desired size	__label__nonDir
multiplexing ui used combine desktopiconuis	__label__nonDir
return list item specified index	__label__nonDir
deprecated	__label__nonDir
return array containing constructor object reflecting public constructor class represented class object	__label__nonDir
holder valuebase	__label__nonDir
construct activationexception	__label__nonDir
notifies listener registered rowset object one row ha changed	__label__nonDir
return baseline	__label__nonDir
lifespanpolicy specifies lifespan object implemented created poa	__label__nonDir
creates new color brighter version color	__label__nonDir
implement characteriterator.last string	__label__nonDir
context property represent portion client application environment meant propagated made implicitly part server environment	__label__nonDir
paint vertical line	__label__nonDir
implementation may optionally support zip64 tm format extension defined pkware zip file format specification	__label__nonDir
object-oriented programming system language application october	__label__nonDir
following build panel consisting two label one column followed two textfields next column jcomponent panel grouplayout layout new grouplayout panel panel.setlayout layout turn automatically adding gap component layout.setautocreategaps true turn automatically creating gap component touch edge container container	__label__nonDir
retrieves index match column set rowset object method setmatchcolumn int columnidxes	__label__nonDir
package contains helper class including support bootstrapping sax-based application	__label__nonDir
preferredsize valid	__label__nonDir
report bound property change	__label__nonDir
visit type mirror passing type mirror accept method	__label__nonDir
creates toolkit implementation popupmenu using specified peer interface	__label__nonDir
description copied class abstractborder	__label__nonDir
immediately revers last update operation row ha modified	__label__nonDir
created stub satisfy interface	__label__nonDir
horizontal device metric	__label__nonDir
interface provides dispatching mechanism incoming call	__label__nonDir
adjusts specified temporal object	__label__nonDir
return right bottom side bearing glyph	__label__nonDir
return accelerator selected foreground color current theme	__label__nonDir
visit declared type	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
class describing stream encoded	__label__nonDir
object reference template	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
grouplayout layoutmanager hierarchically group component order position container	__label__nonDir
return preferred size textarea	__label__nonDir
interface implemented modelmbeaninfo every modelmbean	__label__nonDir
date time instance composed field conveniently made available apis	__label__nonDir
addcomponent label1 addcomponent label2 hgroup.addgroup layout.createparallelgroup	__label__nonDir
poa ha retain policy us servant manager servantactivators	__label__nonDir
set image displayed icon window	__label__nonDir
constant telugu unicode character block	__label__nonDir
contains three exception thrown orb machinery unmarshalling	__label__nonDir
variable nv represents newly-created nvlist object contains description argument method described given operationdef object	__label__nonDir
information helper file see generated file helper file	__label__nonDir
provides class interface javatm platform core logging facility	__label__nonDir
org/omg/corba/longseqholder.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00	__label__nonDir
followed filler glyph remaining character	__label__nonDir
get accessiblecontext associated window	__label__nonDir
constant key	__label__nonDir
exception thrown jmx implementation	__label__nonDir
creates new atomicinteger initial value	__label__nonDir
return image get pixel data specified url	__label__nonDir
package specification pkcs rsa encryption standard version november pkcs private-key information syntax standard version november federal information processing standard publication fips pub digital signature standard ds related documentation documentation includes information algorithm parameter key specification please see javatm cryptography architecture api specification reference implement provider javatm cryptography architecture	__label__nonDir
constant inscriptional parthian unicode character block	__label__nonDir
equivalent seconds.convert duration	__label__nonDir
cryptographic operation defined package include encryption key generation key agreement message authentication code mac generation	__label__nonDir
par text string produce date	__label__nonDir
alias iso_c8	__label__nonDir
see http www.saxproject.org information sax	__label__nonDir
value true considered false	__label__nonDir
class used reporting application level exception orb stub	__label__nonDir
class encapsulating single jpeg quantization table	__label__nonDir
constant runic unicode character block	__label__nonDir
holder serviceinformation	__label__nonDir
construct new empty textfield specified number column	__label__nonDir
creates new custom cursor object	__label__nonDir
update event type	__label__nonDir
return enum constant type specified name	__label__nonDir
constant non-numpad right arrow key	__label__nonDir
constant miscellaneous mathematical symbols-a unicode character block	__label__nonDir
information holder file see generated file holder file	__label__nonDir
return control text color current theme	__label__nonDir
ensures node specified row collapsed	__label__nonDir
package specification javatm cryptography architecture standard algorithm name documentation	__label__nonDir
class defines service provider interface spi policy class	__label__nonDir
return array awteventlisteners registered toolkit	__label__nonDir
