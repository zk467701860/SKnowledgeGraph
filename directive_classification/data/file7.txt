 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param activeChecker The callback mechanism for checking whether a command is active; must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be nul	__label__NotNullDirective
 @param factory the factory to use for creation, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @throws IllegalArgumentException if map is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param predicate the predicate to use as a filter, not null	__label__NotNullDirective
 @param listIterator the list iterator to use, not null	__label__NotNullDirective
 @throws NullPointerException if the list is null	__label__NotNullDirective
 @param predicates a collection of predicates to check, may not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the predicates collection is null	__label__NotNullDirective
 @throws IllegalArgumentException if the predicates array is nul	__label__NotNullDirective
 @throws NullPointerException if the map is null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param elements the array of elements to add, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param buffer the buffer to predicate, must not be null	__label__NotNullDirective
 @param a the first collection, must not be null	__label__NotNullDirective
 @param b the second collection, must not be null	__label__NotNullDirective
 @param b the collection to subtract, must not be null	__label__NotNullDirective
 @param predicate the predicate for the collection, must not be null	__label__NotNullDirective
 @param closure the closure to call repeatedly, not null	__label__NotNullDirective
 @throws NullPointerException if either parameter is null	__label__NotNullDirective
 @throws NullPointerException the specified map is null,	__label__NotNullDirective
 @throws IllegalArgumentException if collection is null	__label__NotNullDirective
 @param list the list to synchronize, must not be nul	__label__NotNullDirective
 @throws IllegalArgumentException if the set is null	__label__NotNullDirective
 @param bag the bag to predicate, must not be null	__label__NotNullDirective
 @param set the set to transform, must not be null	__label__NotNullDirective
 @param entry the entry to query, must not be null	__label__NotNullDirective
 @param factory the factory for creating new objects, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param predicates array of predicates, not cloned, no nulls	__label__NotNullDirective
 @param transformers matching array of transformers, cloned, no nulls	__label__NotNullDirective
 @param closures the closures to chain, copied, no nulls	__label__NotNullDirective
 @throws NullPointerException if array is null	__label__NotNullDirective
 @throws IllegalArgumentException if the Buffer or Predicate is null	__label__NotNullDirective
 @throws IllegalArgumentException if the closure is null	__label__NotNullDirective
 @throws IllegalArgumentException if the factory is null	__label__NotNullDirective
 @throws IllegalArgumentException if the classToInstantiate is null	__label__NotNullDirective
 @param defaultLookup the default look-up. Must not be null.	__label__NotNullDirective
 @param out the stream to print to, must not be null	__label__NotNullDirective
 @param text the text to be displayed, must not be null	__label__NotNullDirective
 @param action the action. Must not be null.	__label__NotNullDirective
 @return The object representing an input event that will trigger this binding; must not be null.	__label__NotNullDirective
 @param keyStroke a single key stroke. Must not be null.	__label__NotNullDirective
 Cannot be null.	__label__NotNullDirective
 @throws NullPointerException if the specified element is null	__label__NotNullDirective
 @param exception The NotEnabledException, never null.	__label__NotNullDirective
 @param labelProvider the label provider, or null if none	__label__NullSemanticsDirective
 @return a MemoryNotificationInfo object represented by cd if cd is not null; null otherwise.	__label__NullSemanticsDirective
 @param label The label to be used, may be null. If null, the label is not output.	__label__NullSemanticsDirective
 param map The map to print, may be null. If null, the text 'null' is output.	__label__NullSemanticsDirective
 Specify null to return all CRLs (if supported).	__label__NullSemanticsDirective
 @param outputCollection the collection to output into, may not be null	__label__NullSemanticsDirective
 Neither map is validated, so nulls may be passed in.	__label__NullSemanticsDirective
 @param keyPredicate the predicate to validate the keys, null means no check	__label__NullSemanticsDirective
 @param suffix The suffix string to be used in generating the file's name; may be null, in which case the suffix ".tmp" will be used	__label__NullSemanticsDirective
 @param q the queue with which the reference is to be registered, or null if registration is not required	__label__NullSemanticsDirective
 @param maximumSize the maximum size, must be size one or greater	__label__NumberRangeDirective
 The port must be between 0 and 65535, inclusive.	__label__NumberRangeDirective
 The local port must be between 0 and 65535 inclusive.	__label__NumberRangeDirective
 The backlog argument must be a positive value greater than 0.	__label__NumberRangeDirective
 The mode argument must be either OPEN_READ or OPEN_READ | OPEN_DELETE.	__label__NumberRangeDirective
 @throws IllegalArgumentException if the maximum size is zero or less	__label__NumberRangeDirective
 At a minimum, the unpacker must set progress to 0 at the beginning of a packing operation, and to 100 at the end.	__label__NumberRangeDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__NumberRangeDirective
 @param keyType the type of reference to use for keys; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param keyType the type of reference to use for keys; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param valueType the type of reference to use for values; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 This value is always in the range 0 through count. If it is less than count, then buf[pos] is the next byte to be supplied as input; if it is equal to count, then the next read or skip operation will require more bytes to be read from the contained input stream.	__label__NumberRangeDirective
 @param tabWidth the tabulator width in space equivalents, must be >=0	__label__NumberRangeDirective
 @param dialogImageType one of the following values:      MessageDialog.NONE for a dialog with no image     MessageDialog.ERROR for a dialog with an error image     MessageDialog.INFORMATION for a dialog with an information image     MessageDialog.QUESTION for a dialog with a question image     MessageDialog.WARNING for a dialog with a warning image	__label__NumberRangeDirective
 @param nanos 0-999999 additional nanoseconds to wait. @exception IllegalArgumentException if the value of millis is negative the value of nanos is not in the range 0-999999.	__label__NumberRangeDirective
 @throws IllegalArgumentException If the given string violates RFC 2396	__label__StringFormatDirective
 The algorithm name must be specified, as there is no default.	__label__StringFormatDirective
 This byte array should contain the DER encoded name, as it would appear in the GeneralName structure defined in RFC 2459 and X.509. The encoded byte array should only contain the encoded value of the name, and should not include the tag associated with the name in the GeneralName structure. The ASN.1 definition of this structure appears below.	__label__StringFormatDirective
 The family should have a default resource bundle which simply has the same name as its family - "MyResources" - and will be used as the bundle of last resort if a specific locale is not supported.	__label__StringFormatDirective
 The range may no only contain complete partitions but starts at the beginning of a line in the middle of a partition of the given content type. This requires that a partition delimiter can not contain a line delimiter.	__label__StringFormatDirective
 @param nameConstraints a byte array containing the ASN.1 DER encoding of a NameConstraints extension to be used for checking name constraints. Only the value of the extension is included, not the OID or criticality flag.	__label__StringFormatDirective
 The group class specified by the ActivationGroupDesc must be a concrete subclass of ActivationGroup and have a public constructor that takes two arguments: the ActivationGroupID for the group and the MarshalledObject containing the group's initialization data (obtained from the ActivationGroupDesc	__label__MethodParameterTypeDirective
 created SequenceInputStream by remembering the argument, which must be an Enumeration that produces objects whose run-time type is InputStream	__label__MethodParameterTypeDirective
 Furthermore, all elements in this range must be mutually comparable (that is, e1.compareTo(e2) must not throw a ClassCastException for any elements e1 and e2 in the array).	__label__MethodParameterTypeDirective
 All elements in the range must be mutually comparable by the specified comparator (that is, c.compare(e1, e2) must not throw a ClassCastException for any elements e1 and e2 in the range).	__label__MethodParameterTypeDirective
 Furthermore, all such keys must be mutually comparable: k1.compareTo(k2) (or comparator.compare(k1, k2)) must not throw a ClassCastException for any keys k1 and k2 in the sorted map.	__label__MethodParameterTypeDirective
 @param className the class name of the preference page; this class must implement IPreferencePage	__label__MethodParameterTypeDirective
 @param strategy The master formatting strategy, must implement {@link IFormattingStrategyExtension}	__label__MethodParameterTypeDirective
 All of the elements in an enum set must come from a single enum type that is specified, explicitly or implicitly, when the set is created.	__label__MethodParameterTypeDirective
 Copies all of the keys and values from the specified map to this map. Each key must be non-null and a MultiKey object.	__label__MethodParameterTypeDirective
 All keys inserted into the map must implement the {@link Comparable} interface.	__label__MethodParameterTypeDirective
 The property must implement java.util#Map.	__label__MethodParameterTypeDirective
 The property must implement org.eclipse.jface.text#IDocument.	__label__MethodParameterTypeDirective
 One version of the format method in the various Format classes requires a FieldPosition object as an argument.	__label__MethodParameterTypeDirective
 The second parameter must be of type Object; therefore, the java.lang equivalent objects should be used for built-in types.	__label__MethodParameterTypeDirective
 The length must be lesser or equal to the offset plus the length of the packet's buffer.	__label__MethodParameterCorrelationDirective
 The source and destination must have the same number of bands.	__label__MethodParameterCorrelationDirective
 The length argument must be less than or equal to buf.length.	__label__MethodParameterCorrelationDirective
 @param deletePos the position in the text where the character was removed. Must not be less than the start of newParagraph, and must not be greater than the end of newParagraph.	__label__MethodParameterCorrelationDirective
 The length argument must be less than or equal to buf.length.	__label__MethodParameterCorrelationDirective
 The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case 0L is placed in all elements of the copy whose index is greater than or equal to original.length - from.	__label__MethodParameterCorrelationDirective
 The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case '\\u000' is placed in all elements of the copy whose index is greater than or equal to original.length - from.	__label__MethodParameterCorrelationDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__MethodParameterCorrelationDirective
 The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case (byte)0 is placed in all elements of the copy whose index is greater than or equal to original.length - from.	__label__MethodParameterCorrelationDirective
 @param b The bytes that make up the class data. The bytes from positions b.position() through b.position() + b.limit() -1 should have the format of a valid class file as defined by the Java Virtual Machine Specification.	__label__MethodParameterCorrelationDirective
 The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case 0d is placed in all elements of the copy whose index is greater than or equal to original.length - from.	__label__MethodParameterCorrelationDirective
 The two maps must be a matching pair, normal and reverse.	__label__MethodParameterCorrelationDirective
 The method readObject is used to read an object from the stream. Java's safe casting should be used to get the desired type.	__label__Post-CallDirective
 callers can only use the viewer row locally and until the next call to this method.	__label__Post-CallDirective
 The keys should be immutable If they are not then they must not be changed after adding to the MultiKey.	__label__Post-CallDirective
 If uppercase letters are desired, the {@link java.lang.String#toUpperCase()} method may be called on the result:       Integer.toHexString(n).toUpperCase()	__label__Post-CallDirective
 @return The scheme identifier; never null.	__label__ReturnValueDirective
 The returned control's layout data must be an instance of GridData.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.	__label__ReturnValueDirective
 Any subclass returning a Composite object whose Layout has default margins (for example, a GridLayout) are expected to set the margins of this Layout to 0 pixels.	__label__ReturnValueDirective
 @return a new synchronized Bag	__label__ReturnValueDirective
 @return a new transformed Bag	__label__ReturnValueDirective
 This method should return the object to be substituted or the original object.	__label__ReturnValueDirective
 Note that there must be at least one nonzero digit in a subnormal significand.	__label__ReturnValueDirective
 A certificate factory for X.509 must return certificates that are an instance of java.security.cert.X509Certificate, and CRLs that are an instance of java.security.cert.X509CRL.	__label__ReturnValueDirective
 @return the predicate as the only element in an array	__label__ReturnValueDirective
 In dialogs implemented by JFace, this will be an IDialogPage.	__label__ReturnValueDirective
 The array returned must contain at least a Locale instance equal to {@link java.util.Locale#US Locale.US}.	__label__ReturnValueDirective
 If the given locale is equal to Locale.ROOT (the root locale), a List containing only the root Locale must be returned.	__label__ReturnValueDirective
 Subsets of any { NavigableSet} must implement the { NavigableSet} interface.	__label__ReturnValueDirective
 This set should not support the add or remove methods, and its iterator should not support the remove method.	__label__ReturnValueDirective
 In other words, this method must allocate a new array	__label__ReturnValueDirective
 @return never @throws FunctorException always	__label__ReturnValueDirective
 This is not intended to be called outside of the workbench.	__label__MethodCallVisibilityDirective
 Note: Using the Activatable constructors that both register and export an activatable remote object is strongly discouraged because the actions of registering and exporting the remote object are not guaranteed to be atomic.	__label__MethodCallVisibilityDirective
 Denigrated, use {@linkplain #setSubject(X500Principal)} or {@linkplain #setSubject(byte[])} instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.	__label__MethodCallVisibilityDirective
 Denigrated, use {@linkplain #addIssuer(X500Principal)} or {@linkplain #addIssuerName(byte[])} instead. This method should not be relied on as it can fail to match some CRLs because of a loss of encoding information in the RFC 2253 String form of some distinguished names.	__label__MethodCallVisibilityDirective
 Constructor only used in deserialization, do not use otherwise.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL TIME values do not have a year component.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 @noreference This method is not intended to be referenced by clients.	__label__MethodCallVisibilityDirective
 @noreference This method is not intended to be referenced by clients.	__label__MethodCallVisibilityDirective
 As of 3.4, you should only call this method if you want to override the {@link JFacePreferences#CONTENT_ASSIST_BACKGROUND_COLOR}.	__label__MethodCallVisibilityDirective
 Since changing the default locale may affect many different areas of functionality, this method should only be used if the caller is prepared to reinitialize locale-sensitive code running within the same Java Virtual Machine.	__label__MethodCallVisibilityDirective
 Note: This is an internal framework method and must not be called by clients.	__label__MethodCallVisibilityDirective
 Note: This method is not intended to be referenced or overridden by clients.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 @deprecated no replacement. Skeletons are no longer required for remote method calls in the Java 2 platform v1.2 and greater.	__label__MethodCallVisibilityDirective
 @deprecated no replacement. Skeletons are no longer required for remote method calls in the Java 2 platform v1.2 and greater.	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 Clients may instantiate this class	__label__MethodCallVisibilityDirective
 This method may be called from subclasses to enable or disable owner draw dynamically.	__label__MethodCallVisibilityDirective
 @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @throws IOException if an I/O error occurs or this stream is already closed	__label__ExceptionRaisingDirective
 @exception SQLException if a database access error occurs or this method is called on a closed Statement	__label__ExceptionRaisingDirective
 The view's iterator is a "weakly consistent" iterator that will never throw {@link ConcurrentModificationException}, and guarantees to traverse elements as they existed upon construction of the iterator, and may (but is not guaranteed to) reflect any modifications subsequent to construction.	__label__ExceptionRaisingDirective
 @exception SecurityException If a security manager, s, is present and any of the following conditions is met	__label__ExceptionRaisingDirective
 @throws IllegalMonitorStateException if this lock is not held @throws IllegalArgumentException if the given condition is not associated with this lock @throws NullPointerException if the condition is null	__label__ExceptionRaisingDirective
 @throws IOException If an I/O error occurs, which is possible because the construction of the canonical pathname may require filesystem queries @throws SecurityException If a required system property value cannot be accessed, or if a security manager exists and its {@link java.lang.SecurityManager#checkRead} method denies read access to the file	__label__ExceptionRaisingDirective
 @exception NullPointerException If b is null. @exception IndexOutOfBoundsException If off is negative, len is negative, or len is greater than b.length - off	__label__ExceptionRaisingDirective
 @exception IOException If an I/O error occurs	__label__ExceptionRaisingDirective
 @exception IOException if an I/O error occurs.	__label__ExceptionRaisingDirective
 @exception SQLException if the parameterIndex is not valid; if a database access error occurs or this method is called on a closed CallableStatement	__label__ExceptionRaisingDirective
 @exception IllegalArgumentException - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)	__label__ExceptionRaisingDirective
 @throws IllegalStateException implementations may, but are not required to, throw this exception if the entry has been removed from the backing map.	__label__ExceptionRaisingDirective
 all such elements must be mutually comparable: { e1.compareTo(e2)} must not throw a { ClassCastException} for any elements { e1} and { e2} in the set	__label__ExceptionRaisingDirective
 This implies that compare(x, y) must throw an exception if and only if compare(y, x) throws an exception.	__label__ExceptionRaisingDirective
 @throws CertPathValidatorException if this PKIXCertPathChecker is unable to check certificates in the specified order; it should never be thrown if the forward flag is false since reverse checking must be supported	__label__ExceptionRaisingDirective
 that is, e1.compareTo(e2) must not throw a ClassCastException for any elements e1 and e2 in the list	__label__ExceptionRaisingDirective
 @exception InvalidKeyException if the public key in the certificate is not encoded properly or does not include required parameter information or cannot be used for digital signature purposes.	__label__ExceptionRaisingDirective
 @exception IllegalArgumentException if the specified object is not an instance of the class or interface declaring the underlying field (or a subclass or implementor thereof)	__label__ExceptionRaisingDirective
 @exception SQLException if parameterName does not correspond to a named parameter; if a database access error occurs or this method is called on a closed CallableStatement @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @exception SQLException if the columnLabel is not valid; if a database access error occurs; the result set concurrency is CONCUR_READ_ONLY or this method is called on a closed result set @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 The input object should be immutable to maintain the contract of Transformer (although this is not checked).	__label__MiscellaneousMethodCallDirective
 The Transformer must return either Boolean.TRUE or Boolean.FALSE otherwise a PredicateException will be thrown.	__label__MiscellaneousMethodCallDirective
 The range must be sorted (as by the {@link #sort(char[], int, int)} method) prior to making this call.	__label__MiscellaneousMethodCallDirective
 The specified list must be modifiable, but need not be resizable.	__label__MiscellaneousMethodCallDirective
 @param tableNamePattern a table name pattern; must match the table name as it is stored in the database @return ResultSet - each row is a table privilege description	__label__MiscellaneousMethodCallDirective
 The XML document must have the following DOCTYPE declaration:	__label__MiscellaneousMethodCallDirective
 The method must return either a boolean or a non-null Boolean, and have no parameters.	__label__MiscellaneousMethodCallDirective
 The agent should take care to ensure that the JAR does not contain any classes or resources other than those to be defined by the bootstrap class loader for the purpose of instrumentation. Failure to observe this warning could result in unexpected behaviour that is difficult to diagnose.	__label__MiscellaneousMethodCallDirective
 @param schemaPattern a schema name pattern; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 Otherwise, the specified collection must contain at least one element (in order to determine the new enum set's element type)	__label__MiscellaneousMethodCallDirective
 @param schemaPattern a schema pattern name; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param functionNamePattern a procedure name pattern; must match the function name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param table a table name; must match the table name as it is stored in this database	__label__MiscellaneousMethodCallDirective
 The certificates supplied must be of a type supported by the CertificateFactory	__label__MiscellaneousMethodCallDirective
 In the even of an error, a default image is returned if returnMissingImageOnError is true, otherwise null is returned.	__label__MiscellaneousMethodCallDirective
 @param timeout This parameter is ignored as the method never blocks	__label__MiscellaneousMethodCallDirective
 @param unit This parameter is ignored as the method never blocks	__label__MiscellaneousMethodCallDirective
 The constructors of this class assume that the default character encoding and the default byte-buffer size are appropriate.	__label__MiscellaneousMethodCallDirective
 Clients are not permitted to extend this class.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noimplement This interface is not intended to be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 @noimplement This interface is not intended to be implemented by clients	__label__ExtensibleClassIdentificationDirective
 Clients may extend this class	__label__ExtensibleClassIdentificationDirective
 Clients may extend this class.	__label__ExtensibleClassIdentificationDirective
 Clients should subclass this class instead of implementing IConcurrentModel directly.	__label__ExtensibleClassIdentificationDirective
 Clients may subclass.	__label__ExtensibleClassIdentificationDirective
 It is recommended to subclass this class instead of Dialog in all cases except where the dialog should never show a tray.	__label__ExtensibleClassIdentificationDirective
 This dialog class may be subclassed.	__label__ExtensibleClassIdentificationDirective
 This concrete dialog class can be further subclassed as required.	__label__ExtensibleClassIdentificationDirective
 This class may be  subclassed as required.	__label__ExtensibleClassIdentificationDirective
 This class may be subclassed as required	__label__ExtensibleClassIdentificationDirective
 This class and all of its methods may be overridden or extended.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 This interface must be implemented by clients. Implementers should be registered with a content formatter in order get involved in the formatting process.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 This interface may be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 This interface may be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 This interface should be implemented by classes that wish to act as cell modifiers.	__label__ExtensibleClassIdentificationDirective
 This interface should be implemented by classes that wish to act as cell editor validators.	__label__ExtensibleClassIdentificationDirective
 Key-value entries are stored in instances of the ReferenceEntry class which can be overridden and replaced.	__label__ExtensibleClassIdentificationDirective
 The subclass of ActivationGroup must override this method and unexport the object.	__label__MethodOverridingDirective
 Subclasses may extend	__label__MethodOverridingDirective
 Subclasses may extend this method.	__label__MethodOverridingDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 Subclasses may extend	__label__MethodOverridingDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 Subclasses may extend it	__label__MethodOverridingDirective
 Subclasses should extend the doComputeSize framework method to compute the size of the page's control.	__label__MethodOverridingDirective
 reimplement performCancel	__label__MethodOverridingDirective
 Subclasses may reimplement or extend.	__label__MethodOverridingDirective
 Subclasses can extend this method to add additional trim	__label__MethodOverridingDirective
 Subclasses may reimplement.	__label__MethodOverridingDirective
 Subclasses may reimplement.	__label__MethodOverridingDirective
 Subclasses typically need not override this method, but may do so.	__label__MethodOverridingDirective
 Subclasses should override this method.	__label__MethodOverridingDirective
 This is a framework hook method for subclasses to return a page-specific preference store.	__label__MethodOverridingDirective
 This is a framework hook method for subclasses to do special things when the Cancel button has been pressed.	__label__MethodOverridingDirective
 Hook for subclasses which want to perform some action as soon as reconciliation is needed.	__label__MethodOverridingDirective
 Subclasses should replace - the default implementation returns the empty string.	__label__MethodOverridingDirective
 Subclasses of FilterOutputStream should provide a more efficient implementation of this method.	__label__MethodOverridingDirective
 Subclasses may override these methods if required:	__label__MethodOverridingDirective
 Subclasses may override this method to customize the cool bar manager.	__label__MethodOverridingDirective
 This framework method must be implemented by concrete subclasses.	__label__MethodOverridingDirective
 Subclasses that wish to support indirect CRLs should override this method.	__label__MethodOverridingDirective
 Subclasses must implement the following methods:      * validateDrop - identifies valid drop targets in viewer     * performDrop - carries out a drop into a viewer	__label__MethodOverridingDirective
 Subclasses should override to set their selection based on the given list of elements.	__label__MethodOverridingDirective
 Subclasses should override.	__label__MethodOverridingDirective
 Override this method to provide your own object used to handle progress.	__label__MethodOverridingDirective
 Subclasses can override this to return alternate hash codes.	__label__MethodOverridingDirective
 Subclasses could override to handle changes to the map.	__label__MethodOverridingDirective
 This can be overridden by subclasses to provide a different map implementation.	__label__MethodOverridingDirective
 This method exists for subclasses to override. A subclass may wish to provide cleanup of resources when an entry is removed.	__label__MethodOverridingDirective
 May be overidden by handlers for other protocols that have different requirements for equals().	__label__MethodOverridingDirective
 Subclasses are encouraged to provide a more efficient implementation of this method.	__label__MethodOverridingDirective
 Subclasses typically do not override method.	__label__MethodOverridingDirective
 Clients may call this framework method, but should not override it.	__label__MethodOverridingDirective
 Clients should not override it.	__label__MethodOverridingDirective
 This method is not intended to be overridden by subclasses.	__label__MethodOverridingDirective
 This method is not intended to be referenced or overridden by clients.	__label__MethodOverridingDirective
 Subclasses must call the super implementationcall	__label__MethodExtensionDirective
 All pages should call super.doComputeSize.	__label__MethodExtensionDirective
 Any subclass of RequiredModelMBean overloading or overriding this method should call super.postRegister(registrationDone)	__label__MethodExtensionDirective
 super.setLabelProvider must be invoked.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkPrintJobAccess at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkExit at the point the overridden method would normally throw an exception. @param status the exit status.	__label__MethodExtensionDirective
 A concrete subclass of this class must call this constructor when it is activated via the two parameter constructor described above.	__label__CallContractSubclassingDirective
 Subclasses wishing a preference page without these buttons should call this framework method before the page's control has been created.	__label__CallContractSubclassingDirective
 Subclasses should overwrite this method and use {@link #getIndentPrefixesForTab(int)} if applicable.	__label__CallContractSubclassingDirective
 Subclasses may call the following methods to configure the wizard page:      * setDescription     * setErrorMessage     * setImageDescriptor     * setMessage     * setPageComplete     * setPreviousPage     * setTitle	__label__CallContractSubclassingDirective
 It is recommended that this method be used by subclasses to determine whether the viewer is busy to return early from state-changing methods.	__label__CallContractSubclassingDirective
 This method should normally be invoked within an {@link AccessController#doPrivileged} action to create callables that will, if possible, execute under the selected permission settings holding within that action; or if not possible, throw an associated {@link AccessControlException}.	__label__CallContractSubclassingDirective
 The implementation of the method must follow this protocol: It must write each of the attributes of the SQL type to the given output stream. This is done by calling a method of the output stream to write each item, in the order that they appear in the SQL definition of the type. Specifically, it must call the appropriate SQLOutput writer method(s) (writeInt, writeString, and so on) to do the following: for a Distinct Type, write its single data element; for a Structured Type, write a value for each attribute of the SQL type.	__label__CallContractSubclassingDirective
 This method must not modify the parent's layout.	__label__MethodImplementationDirective
 In other words, this method must allocate a new array	__label__MethodImplementationDirective
 They therefore must either be parsed as such or treated as an error.	__label__MethodImplementationDirective
 The implementor must also ensure that the relation is transitive	__label__MethodImplementationDirective
 Two hosts are considered equivalent if both host names can be resolved into the same IP addresses; else if either host name can't be resolved, the host names must be equal without regard to case; or both host names equal to null.	__label__MethodImplementationDirective
 The implementation of the method must follow this protocol: It must write each of the attributes of the SQL type to the given output stream. This is done by calling a method of the output stream to write each item, in the order that they appear in the SQL definition of the type. Specifically, it must call the appropriate SQLOutput writer method(s) (writeInt, writeString, and so on) to do the following: for a Distinct Type, write its single data element; for a Structured Type, write a value for each attribute of the SQL type.	__label__MethodImplementationDirective
 Calling disconnect() should not imply that this HttpURLConnection instance can be reused for other requests.	__label__MethodImplementationDirective
 Drivers are not required to support these properties however if the driver supports a client info property that can be described by one of the standard properties, the standard property name should be used.	__label__MethodImplementationDirective
 If the required access and argument checks succeed and the instantiation will proceed, the constructor's declaring class is initialized if it has not already been initialized.	__label__MethodImplementationDirective
 Note that unlike the {@link StrictMath#copySign(float, float) StrictMath.copySign} method, this method does not require NaN sign arguments to be treated as positive values; implementations are permitted to treat some NaN arguments as positive and other NaN arguments as negative to allow greater performance.	__label__MethodImplementationDirective
 Note that unlike the {@link StrictMath#copySign(double, double) StrictMath.copySign} method, this method does not require NaN sign arguments to be treated as positive values; implementations are permitted to treat some NaN arguments as positive and other NaN arguments as negative to allow greater performance.	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if { fromKey} or { toKey} cannot be compared to keys currently in the map.	__label__MethodImplementationDirective
 The equals method implements an equivalence relation on non-null object references: * It is reflexive: for any non-null reference value x, x.equals(x) should return true. * It is symmetric: for any non-null reference values x and y, x.equals(y) should return true if and only if y.equals(x) returns true. * It is transitive: for any non-null reference values x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true. * It is consistent: for any non-null reference values x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified. * For any non-null reference value x, x.equals(null) should return false.	__label__MethodImplementationDirective
 This method should query if the state of the object permits it to be acquired in the exclusive mode, and if so to acquire it.	__label__MethodImplementationDirective
 It must also obey the interruption semantics as defined in this interface, to the extent that interruption of lock acquisition is supported: which is either totally, or only on method entry.	__label__MethodImplementationDirective
 All { Lock} implementations must enforce the same memory synchronization semantics as provided by the built-in monitor lock, as described in The Java Language Specification, Third Edition (17.4 Memory Model)	__label__MethodImplementationDirective
 Normally this means {@link #setQuickFixable(boolean)} has been called at least once but it can also be hard-coded, e.g. always return true.	__label__MethodImplementationDirective
 The setter methods (setShort, setString, and so on) for setting IN parameter values must specify types that are compatible with the defined SQL type of the input parameter. For instance, if the IN parameter has SQL type INTEGER, then the method setInt should be used.	__label__Non-localConsistencySubclassingDirective
 All CertPathValidator implementations must include a class (the SPI class) that extends this class (CertPathValidatorSpi)	__label__Non-localConsistencySubclassingDirective
 The formats returned by the {@link Control#getFormats(String) getFormats} method and candidate locales returned by the {@link ResourceBundle.Control#getCandidateLocales(String, Locale) getCandidateLocales} method must be consistent in all ResourceBundle.getBundle invocations for the same base bundle.	__label__Non-localConsistencySubclassingDirective
 Must have the same effect as getBindings(ScriptContext.ENGINE_SCOPE).get	__label__Non-localConsistencySubclassingDirective
 The Bindings instances that are returned must be identical to those returned by the getBindings method of ScriptContext called with corresponding arguments on the default ScriptContext of the ScriptEngine.	__label__Non-localConsistencySubclassingDirective
 If true is returned, the JDBC driver must support the returning of auto-generated keys for at least SQL INSERT statements	__label__Non-localConsistencySubclassingDirective
 The equivalent of a default constructor called by any constructor and by readObject.	__label__Non-localConsistencySubclassingDirective
 It is strongly recommended (though not required) that natural orderings be consistent with equals.	__label__Non-localConsistencySubclassingDirective
 ColumnViewer implementors have to subclass this class and implement the missing methods	__label__MiscellaneousSubclassingDirective
 Subclass implementations of this abstract class must provide a public constructor that takes a Policy.Parameters object as an input parameter.	__label__MiscellaneousSubclassingDirective
 Bags or multisets (unordered collections that may contain duplicate elements) should implement this interface directly.	__label__MiscellaneousSubclassingDirective
 Note: Support for the rowUpdated method is optional with a result set concurrency of CONCUR_READ_ONLY	__label__MiscellaneousSubclassingDirective
 A remote object implementation must call Activatable's inactive method when that object deactivates (the object deems that it is no longer active)	__label__MethodCallSequenceDirective
 Packages must be created before the class is defined	__label__MethodCallSequenceDirective
 All of the columns in a result set must be given a value each time this method is called before calling insertRow.	__label__MethodCallSequenceDirective
 you must call getMoreResults to move to any subsequent result(s).	__label__MethodCallSequenceDirective
 Calls to setText(String text) and setImage(Image image) are required in order to fill the message area.	__label__MethodCallSequenceDirective
 The caller must validate it using {@link #isSurrogatePair(char, char) isSurrogatePair} if necessary.	__label__MethodCallSequenceDirective
 All OUT parameters must be registered before a stored procedure is executed.	__label__MethodCallSequenceDirective
 The type of all OUT parameters must be registered prior to executing the stored procedure; their values are retrieved after execution via the get methods provided here.	__label__MethodCallSequenceDirective
 All the data in the returned stream must be read prior to getting the value of any other column	__label__MethodCallSequenceDirective
 The execute method executes an SQL statement and indicates the form of the first result. You must then use the methods getResultSet or getUpdateCount to retrieve the result, and getMoreResults to move to any subsequent result(s).	__label__MethodCallSequenceDirective
 To instantiate a PKIXParameters object, an application must specify one or more most-trusted CAs as defined by the PKIX certification path validation algorithm.	__label__MethodCallSequenceDirective
 The "last used" Iterator is the Iterator upon which next() or hasNext() was most recently called used for the remove() operation only	__label__MethodCallSequenceDirective
 This method may only be called once, otherwise an IllegalStateException will occur.	__label__MethodCallSequenceDirective
 Use {@link #hasNext} to avoid this error.	__label__MethodCallSequenceDirective
 Purges stale mappings from this map before read operations.	__label__MethodCallSequenceDirective
 Using this constructor, the iterator is equivalent to an empty iterator until {@link #setArray} is called to establish the array to iterate over.	__label__MethodCallSequenceDirective
 Events are not generated when preferences are modified in descendants of this node; a caller desiring such events must register with each descendant.	__label__MethodCallSequenceDirective
 There must be an SWT Display created in the current thread before calling this method.	__label__MethodCallSequenceDirective
 This method will be called before any other method and can be called multiple times.	__label__MethodCallSequenceDirective
 lients should typically call this method once, create a color from the RGB provided, and dispose of the color when finished using it.	__label__MethodCallSequenceDirective
 Clients who created this column are responsible to call this method once the column is no longer used.	__label__MethodCallSequenceDirective
 Note: This method must be called at most once per reconcile step.	__label__MethodCallSequenceDirective
 It is important not to use the original bag after invoking this method, as it is a backdoor for adding untransformed objects.	__label__MethodCallSequenceDirective
 @param value if true, execute after shutdown, else don't. @see #getExecuteExistingDelayedTasksAfterShutdownPolicy	__label__MethodCallSequenceDirective
 After the group is created, the ActivationSystem is informed that the group is active by calling the activeGroup method which returns the ActivationMonitor for the group.	__label__MethodCallSequenceDirective
 Once the shutdown sequence has begun it can be stopped only by invoking the {@link #halt halt} method, which forcibly terminates the virtual machine.  Once the shutdown sequence has begun it is impossible to register a new shutdown hook or de-register a previously-registered hook. Attempting either of these operations will cause an {@link IllegalStateException} to be thrown.	__label__MethodCallSequenceDirective
 This thread group must be empty, indicating that all threads that had been in this thread group have since stopped.	__label__NonCall-basedStateDirective
 The current thread must own this object's monitor.	__label__NonCall-basedStateDirective
 The caller principal must be an owner of the ACL in order to invoke this method.	__label__NonCall-basedStateDirective
 @param caller the principal invoking this method. It must be an owner of this ACL.	__label__NonCall-basedStateDirective
 This feature is only supported if the underlying collection's {@link Collection#iterator iterator} method returns an implementation that supports it.	__label__NonCall-basedStateDirective
 This method should be used only when auto-commit mode has been disabled.	__label__NonCall-basedStateDirective
 @return the dialog, after being closed by the user, which the client can only call getReturnCode() or getToggleState()	__label__NonCall-basedStateDirective
 This value is computed once and then cached, so elements should not change their hash codes once created	__label__NonCall-basedStateDirective
 The hashcode is calculated once here in this method. Therefore, changing the array passed in would not change the hashcode but would change the equals method, which is a bug.	__label__NonCall-basedStateDirective
 This field should be true if this node did not exist in the backing store prior to the creation of this object.	__label__NonCall-basedStateDirective
 @throws ArithmeticException if { roundingMode==UNNECESSARY} and the specified scaling operation would require rounding.	__label__NonCall-basedStateDirective
 Replaces the given ranges in this presentation. Each range must be a subrange of the presentation's default range. The ranges must be ordered by increasing offset and must not overlap (but may be adjacent).	__label__NonCall-basedStateDirective
 This method should only be called from the UI thread. If you are not on the UI thread then wrap the call with a PlatformUI.getWorkbench().getDisplay().synchExec() in order to guarantee the correct result.	__label__NonCall-basedStateDirective
 Subclasses should either call the super implementation or, alternatively, {@link #initialize(ColumnViewer, ViewerColumn, boolean)}.	__label__AlternativeDirective
 The new {@link #divide(BigDecimal, int, RoundingMode)} method should be used in preference to this legacy method.	__label__AlternativeDirective
 It is recommended to subclass this class instead of Dialog in all cases except where the dialog should never show a tray.	__label__AlternativeDirective
 Subclasses typically need not override this method, but instead should use the constructor parameters showDialogMenu and showPersistAction to indicate whether a menu should be shown, and createTitleControl to to customize the presentation of the title.	__label__AlternativeDirective
 Instead, an application should register an activation descriptor and export a remote object separately, so that exceptions can be handled properly.	__label__AlternativeDirective
 Standard customers should not overwrite this method but {@link #setValue(Object, Object)}	__label__AlternativeDirective
 for distinguished names, use {@linkplain #addPathToName(int, byte[])} instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.	__label__AlternativeDirective
 Viewers who are not subclasses of {@link ColumnViewer} should consider using a widget relative implementation like {@link ColumnViewer#getItemAt(org.eclipse.swt.graphics.Point)}.	__label__AlternativeDirective
 In most cases, the Runnable interface should be used if you are only planning to override the run() method and no other Thread methods.	__label__AlternativeDirective
 The {@link java.nio.charset.CharsetEncoder} class should be used when more control over the encoding process is required.	__label__AlternativeDirective
 	__label__AlternativeDirective
 Completion proposals can implement {@link ICompletionProposalExtension6} to provide colored proposal labels.	__label__AlternativeDirective
 A Map implementation that is a general purpose alternative to HashMap.  This implementation improves on the JDK1.4 HashMap by adding the {@link org.apache.commons.collections.MapIterator MapIterator} functionality and many methods for subclassing.	__label__AlternativeDirective
 Note that IdentityMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 If you know that you have an object array, the {@link ObjectArrayListIterator} class is a better choice, as it will perform better.	__label__AlternativeDirective
 This iterator is a special version designed for maps. It can be more efficient to use this rather than an entry set iterator where the option is available, and it is certainly more convenient.	__label__AlternativeDirective
 A map iterator is an efficient way of iterating over maps. There is no need to access the entry set or use Map Entry objects.	__label__AlternativeDirective
 Under many circumstances, linking Iterators together in this manner is more efficient (and convenient) than using nested for loops to extract a list.	__label__AlternativeDirective
 Note that IdentityMap and ReferenceIdentityMap are unsuitable for use as the key comparison would work on the whole MultiKey, not the elements within.	__label__AlternativeDirective
 . You can use {@link java.util.Collections#synchronizedMap} to provide synchronized access to a ReferenceIdentityMap.	__label__AlternativeDirective
 Implementations typically return null if no values have been mapped to the key, however the implementation may choose to return an empty collection.	__label__AlternativeDirective
 The following extension interfaces exist:      {@link org.eclipse.jface.text.ITextOperationTargetExtension} since version 2.0 introducing text operation enabling/disabling.	__label__AlternativeDirective
 If the object has a custom mapping (is of a class implementing the interface SQLData), the JDBC driver should call the method SQLData.writeSQL to write it to the SQL data stream. If, on the other hand, the object is of a class implementing Ref, Blob, Clob, NClob, Struct, java.net.URL, or Array, the driver should pass it to the database as a value of the corresponding SQL type.	__label__AlternativeDirective
 It is recommended to use getComparator() instead.	__label__AlternativeDirective
 @deprecated This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.	__label__AlternativeDirective
 Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of updateAsciiStream which takes a length parameter.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of updateBlob which takes a length parameter.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of updateClob which takes a length parameter.	__label__AlternativeDirective
 Note that there is another method for efficiently processing the simultaneous removal of multiple elements.	__label__AlternativeDirective
 . Note that there is another method for efficiently processing the simultaneous removal of multiple elements.	__label__AlternativeDirective
 Since 3.3, an alternative API is available, see {@link ViewerColumn#setEditingSupport(EditingSupport)} for a more flexible way of editing values in a column viewer.	__label__AlternativeDirective
 Unicode-aware case-insensitive matching can be enabled by specifying the {@link #UNICODE_CASE} flag in conjunction with this flag.	__label__AlternativeDirective
 The following extension interfaces exist:      {@link org.eclipse.jface.text.source.IAnnotationHoverExtension} since version 3.0 allowing a text hover to provide a creator for the hover control. This allows for sophisticated hovers in a way that information computed by the hover can be displayed in the best possible form.	__label__AlternativeDirective
 It replaces {@link org.eclipse.jface.text.ITextViewer#setTextHover(ITextHover, String)} with a new method that allows to specify state masks for a better control of the hover behavior.	__label__AlternativeDirective
 Since the order of format elements in a pattern string often changes during localization, it's generally better to use the {@link #getFormatsByArgumentIndex getFormatsByArgumentIndex} method, which assumes an order of formats corresponding to the order of elements in the arguments array passed to the format methods or the result array returned by the parse methods.	__label__AlternativeDirective
 Note that this method does not clean up references between this cool bar manager and its associated contribution items. Use removeAll for that purpose.	__label__AlternativeDirective
 If multiple threads access a linked hash set concurrently, and at least one of the threads modifies the set, it must be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the set. If no such object exists, the set should be "wrapped" using the {@link Collections#synchronizedSet Collections.synchronizedSet} method. This is best done at creation time, to prevent accidental unsynchronized access to the set:     Set s = Collections.synchronizedSet(new LinkedHashSet(...));	__label__AlternativeDirective
 For efficiency, a character-stream object may use an object other than itself to protect critical sections.	__label__AlternativeDirective
 implementations must synchronized on the hierarchy lock	__label__SynchronizationDirective
 A subclass should therefore use the object in this field rather than this or a synchronized method.	__label__SynchronizationDirective
 This implementation is not synchronized. You can use {@link java.util.Collections#synchronizedMap} to provide synchronized access to a ReferenceIdentityMap. Remember that synchronization will not stop the garbage collecter removing entries.	__label__SynchronizationDirective
 If multiple threads access a format concurrently, it must be synchronized externally.	__label__SynchronizationDirective
 It is imperative that the user manually synchronize on the returned collection when iterating over it:    Collection c = Collections.synchronizedCollection(myCollection);      ...   synchronized(c) {       Iterator i = c.iterator(); // Must be in the synchronized block       while (i.hasNext())          foo(i.next());   }	__label__SynchronizationDirective
 It is imperative that the user manually synchronize on the returned map when iterating over any of its collection views:    Map m = Collections.synchronizedMap(new HashMap());       ...   Set s = m.keySet();  // Needn't be in synchronized block       ...   synchronized(m) {  // Synchronizing on m, not s!       Iterator i = s.iterator(); // Must be in synchronized block       while (i.hasNext())           foo(i.next());   }	__label__SynchronizationDirective
 All public methods of CertStore objects must be thread-safe.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this interface are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 Note that TransformedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 If multiple threads access a hash map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally.	__label__SynchronizationDirective
 This operation is not atomic and may have undesired effects.	__label__SynchronizationDirective
 In either case the implementation must ensure that the signal is redirected to another waiting thread, if there is one.	__label__SynchronizationDirective
 When locking and unlocking occur in different scopes, care must be taken to ensure that all code that is executed while the lock is held is protected by try-finally or try-catch to ensure that the lock is released when necessary.	__label__SynchronizationDirective
 Likewise any application that updates an IPreferenceStore from a Thread other than the UI Thread should be aware of any listeners that require an update in the UI Thread.	__label__SynchronizationDirective
 Note that in context based mode the content formatter is fully reentrant, but not thread-safe.	__label__SynchronizationDirective
 The ability to interrupt a lock acquisition in some implementations may not be possible, and if possible may be an expensive operation. The programmer should be aware that this may be the case.	__label__SynchronizationDirective
 Additionally, it is possible for the size to change during execution of this method, in which case the returned result will be inaccurate.	__label__SynchronizationDirective
 An application should catch instances of this class only if it must clean up after being terminated asynchronously.	__label__MiscellaneousDirective
 Classes that need to designate a replacement when an instance of it is read from the stream should implement this special method with the exact signature.   ANY-ACCESS-MODIFIER Object readResolve() throws ObjectStreamException;	__label__MiscellaneousDirective
 If auto-commit mode has been disabled, the method commit must be called explicitly in order to commit changes; otherwise, database changes will not be saved.	__label__MiscellaneousDirective
 No check is made that the object is immutable. In general, only immutable objects should use the constant factory.	__label__MiscellaneousDirective
 In this case, the caller can still decide to show the window, but the window should include some sort of visual warning.	__label__MiscellaneousDirective
 ArrayList is a good general purpose list implementation. It is faster than TreeList for most operations except inserting and removing in the middle of the list. ArrayList also uses less memory as TreeList uses one object per entry.	__label__MiscellaneousDirective
 Note that in this case, traversal to find that element takes linear time.	__label__MiscellaneousDirective
 Implementations should allow a value to be looked up from a key and a key to be looked up from a value with equal performance.	__label__MiscellaneousDirective
 The add and set methods are affected by this class. Thus objects must be removed or searched for using their transformed form. For example, if the transformation converts Strings to Integers, you must use the Integer form to remove objects.	__label__MiscellaneousDirective
 For example, some List implementations provide asymptotically linear access times if they get huge, but constant access times in practice. Such a List implementation should generally implement this interface.	__label__MiscellaneousDirective
 As a rule, the equals method should be used by implementations of this class to decide if two keys are the same.	__label__MiscellaneousDirective
 Beware that, unlike in most collections, the { size} method is NOT a constant-time operation. Because of the asynchronous nature of these queues, determining the current number of elements requires a traversal of the elements.	__label__MiscellaneousDirective
 It is recommended that this platform MBeanServer also be used to register other application managed beans besides the platform MXBeans.	__label__MiscellaneousDirective
 Disables randomization and enables additional runtime error checking. Severely degrades performance if set to true. Intended for use in test suites only.	__label__MiscellaneousDirective
 Specifying this flag may impose a performance penalty.	__label__MiscellaneousDirective
 Note: The object returned from this method may be an instance of an implementation-specific class. The RemoteObject class ensures serialization portability of its instances' remote references through the behavior of its custom writeObject and readObject methods. An instance of RemoteRef should not be serialized outside of its RemoteObject wrapper instance or the result may be unportable.	__label__MiscellaneousDirective
constant locking kana function key	__label__nonDir
set command name action event fired button	__label__nonDir
populates table mapping uiclassid fully qualified name ui class	__label__nonDir
indicates window currently opaque	__label__nonDir
identifies telugu range decimal base	__label__nonDir
return array containing element collection	__label__nonDir
information helper file see generated file helper file	__label__nonDir
creates tool tip	__label__nonDir
mediatype instance iso/din c0 x mm	__label__nonDir
actionlistener receive actionevent selection ha made	__label__nonDir
file resource named meta-inf/mimetypes.default usually found activation.jar file	__label__nonDir
helper octetseq	__label__nonDir
executor class provides factory method common kind configuration executor well utility method using	__label__nonDir
acquires read lock unless current thread interrupted	__label__nonDir
update componentlistener necessary	__label__nonDir
class represents builder creates default mbeanserver implementation	__label__nonDir
iduniquenesspolicy specifies whether servant activated created poa must unique object identity	__label__nonDir
perform loose tracking	__label__nonDir
multiplexing ui used combine textuis	__label__nonDir
represents runtime exception thrown agent performing operation mbeans	__label__nonDir
writes data property metadata webrowset object given outputstream object xml format	__label__nonDir
object containing modifiable list string object represent property name	__label__nonDir
implement characteriterator.getendindex string	__label__nonDir
return copy duration positive length	__label__nonDir
creates image decodes image stored specified byte array specified offset length	__label__nonDir
return class representing component type array	__label__nonDir
replaces text indicated start end position new text specified	__label__nonDir
return bufferstrategy used component	__label__nonDir
return shape whose interior corresponds visual representation glyphvector rendered x	__label__nonDir
visit int primitive type calling defaultaction	__label__nonDir
object describing structure metadata document returned iiometadata.getastree passed iiometadata.setfromtree mergetree	__label__nonDir
family ycbcr color space	__label__nonDir
retrieves boolean indicating whether row marked deletion appear set current row	__label__nonDir
mouse released event	__label__nonDir
calculates amount time two temporal object	__label__nonDir
holder octetseq	__label__nonDir
org/omg/corba/longlongseqhelper.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00 class definition ha modified conform following omg specification orb core defined corba formal/99-10-07 idl/java language mapping defined ptc/00-01-08	__label__nonDir
enumeration xml schema namespace qualification	__label__nonDir
related documentation overview tutorial example guide tool documentation please see use table section java tutorial	__label__nonDir
return float array containing color component color default srgb color space	__label__nonDir
api includes feature ability specify document type mechanism control page setup page format ability manage job control dialog	__label__nonDir
information holder file see generated file holder file	__label__nonDir
permission represents trust signer codebase	__label__nonDir
add rowset joinrowset object set designated column match column	__label__nonDir
package contains exception specified iop codefactory interface part portable interceptor spec	__label__nonDir
set property textfield match specified action	__label__nonDir
subclass object may override definition	__label__nonDir
org/omg/iop/servicecontext.java	__label__nonDir
information holder file see generated file holder file	__label__nonDir
paint event type	__label__nonDir
factory object generates preference object	__label__nonDir
however framework also support input method language use entirely different input mechanism handwriting speech recognition	__label__nonDir
handler publishes log record system.err	__label__nonDir
add actionlistener	__label__nonDir
service provider class class java.util package	__label__nonDir
creates return paintcontext used generate solid color field pattern	__label__nonDir
class provides method from_int given one int constant creates corresponding definitionkind instance	__label__nonDir
creates color specified colorspace color component specified float array specified alpha	__label__nonDir
invalidates layout indicating layout manager ha cached information discarded	__label__nonDir
add one rowset object contained given array rowset object joinrowset object set match column rowset object match column given array column name	__label__nonDir
org/omg/corba/_idltypestub.java generated idl-to-java compiler portable version ir.idl	__label__nonDir
awtkeystroke represents key action keyboard equivalent input device	__label__nonDir
information lock	__label__nonDir
set l f object render component	__label__nonDir
interface used imagereader implementation notify caller image thumbnail reading method pixel update	__label__nonDir
root class corba standard exception	__label__nonDir
description copied class abstractborder	__label__nonDir
constant katakana function key	__label__nonDir
give native peer ability query native container given native component eg direct parent may lightweight	__label__nonDir
service provider class class java.text package	__label__nonDir
helper anyseq	__label__nonDir
check whether component contains specified point x defined relative coordinate system component	__label__nonDir
provides event fired swing component	__label__nonDir
postscript information	__label__nonDir
class extends filetypemap provides data typing file via file extension	__label__nonDir
level class defines set standard logging level used control logging output	__label__nonDir
package specification java object serialization specification related documentation overview tutorial example guide tool documentation please see serialization enhancement	__label__nonDir
interface diffie-hellman key	__label__nonDir
return beginning date period year interpreted within	__label__nonDir
mediatype instance iso/din c6 x mm	__label__nonDir
invoked window de-iconified	__label__nonDir
return array action listener registered button	__label__nonDir
urldatasource simplifies handling data described url within javabeans activation framework class used create new datahandlers	__label__nonDir
containing line com.mycompany.imageio.myformatreaderspi	__label__nonDir
information holder file see generated file holder file	__label__nonDir
contains user apis rmi-iiop	__label__nonDir
constant f6 function key	__label__nonDir
return identical value similar commandenvironments	__label__nonDir
return table array byte specified tag	__label__nonDir
signal icmp port unreachable message ha received connected datagram	__label__nonDir
poa object manages implementation collection object	__label__nonDir
transforms jar file packed stream pack200 format	__label__nonDir
creates new jtextpane specified document model	__label__nonDir
may also contain string describing exception	__label__nonDir
index term view	__label__nonDir
return bound glyph	__label__nonDir
constant	__label__nonDir
constant kangxi radical unicode character block	__label__nonDir
ease-of-use constant getalignmentx	__label__nonDir
package provides number image producer consumer filter configure image processing need	__label__nonDir
array provides static method dynamically create access array	__label__nonDir
creates unselected toggle button specified text	__label__nonDir
provides equivalent safe behavior immutable mutable implementation	__label__nonDir
package contains utility class related kerberos network authentication protocol	__label__nonDir
see package example java.security.permission detail	__label__nonDir
return whether window receive focus subsequently shown call setvisible true moved front call tofront	__label__nonDir
construct fontrendercontext object optional affinetransform two boolean value determine newly constructed object ha anti-aliasing fractional metric	__label__nonDir
provides class interface accessing naming service	__label__nonDir
return integer keycode associated key event	__label__nonDir
return alignment along x axis	__label__nonDir
indicates whether designated column current row cachedrowset object ha updated	__label__nonDir
provides class interface key specification algorithm parameter specification	__label__nonDir
package contains key specification dsa public private key rsa public private key pkcs private key der-encoded format x.509 public private key der-encoded format	__label__nonDir
return shape represents region shapegraphicattribute render	__label__nonDir
naming table	__label__nonDir
algorithmparametergenerator class used generate set parameter used certain algorithm	__label__nonDir
helper ulongseq	__label__nonDir
please see use focus subsystem section java tutorial focus specification information	__label__nonDir
set auto-size property	__label__nonDir
supported operation include launching user-default browser show specified uri launching user-default mail client optional mailto uri launching registered application open edit print specified file	__label__nonDir
condensed predefined width	__label__nonDir
method graphics2d interface use outline shape returned stroke object include draw method implemented term method drawline drawrect drawroundrect drawoval drawarc drawpolyline drawpolygon	__label__nonDir
fetch current paragraph attribute effect location caret null none	__label__nonDir
constant microsoft window window key	__label__nonDir
represents mbean server management point view	__label__nonDir
description copied class number	__label__nonDir
constant unified canadian aboriginal syllabics unicode character block	__label__nonDir
org/omg/iop/codecpackage/typemismatch.java	__label__nonDir
equivalent minutes.convert duration	__label__nonDir
get visibility text field	__label__nonDir
add specified key set view mapping key default mapped value backing map defined	__label__nonDir
exception represents failure jaxb operation	__label__nonDir
org/omg/cosnaming/namingcontextpackage/invalidnameholder.java	__label__nonDir
constant tai viet unicode character block	__label__nonDir
provides class interface dealing javax.swing.jtable	__label__nonDir
xmladapter spec-defined sub-classes allow arbitrary java class used jaxb	__label__nonDir
provides interface document object model dom	__label__nonDir
creates trayicon specified image tooltip text	__label__nonDir
return sytem text font current theme	__label__nonDir
used minimizing drawing vertical line	__label__nonDir
return array containing selected item	__label__nonDir
optical bound	__label__nonDir
glyph variation	__label__nonDir
return new breakiterator instance line break given locale	__label__nonDir
metal look feel implementation toolbarui	__label__nonDir
domhandler implementation w3c dom org.w3c.dom package	__label__nonDir
multiplexing ui used combine popupmenuuis	__label__nonDir
construct windowevent object	__label__nonDir
package java image i/o api dealing low-level i/o file stream	__label__nonDir
provides method implementation access identity object method wa invoked	__label__nonDir
field provided standard table taken annex k jpeg specification	__label__nonDir
provides class htmleditorkit supporting class creating html text editor	__label__nonDir
creates new color darker version color	__label__nonDir
return maximum size separator	__label__nonDir
return ascent graphicattribute	__label__nonDir
base filename	__label__nonDir
description copied class container	__label__nonDir
creates listener responsible update ui based tree change	__label__nonDir
return first longest-waiting thread queue null thread currently queued	__label__nonDir
constant roman character function key	__label__nonDir
description copied class number	__label__nonDir
sole constructor	__label__nonDir
portable interceptor current also known picurrent merely slot table slot used service transfer context data context request reply service context	__label__nonDir
indicates whether fontrendercontext object measure text transformed render context	__label__nonDir
method public implementation side effect	__label__nonDir
check field represents component time	__label__nonDir
tracking	__label__nonDir
class parsing processing keyinfo element structure	__label__nonDir
jseparator provides general purpose component implementing divider line commonly used divider menu item break logical grouping	__label__nonDir
flip last card container	__label__nonDir
construct empty deque	__label__nonDir
small toolkit class support lock-free thread-safe programming single variable	__label__nonDir
return class id ui	__label__nonDir
extends class java.util.zip.zipoutputstream support writing optional manifest entry	__label__nonDir
return image get pixel data specified file	__label__nonDir
holder int	__label__nonDir
constructor concrete subclass call	__label__nonDir
make component displayable connecting native screen resource	__label__nonDir
information holder file see generated file holder file	__label__nonDir
visit uniontype element calling visitunknown	__label__nonDir
generated idl-to-java compiler portable version src/share/classes/org/omg/portableinterceptor/iop.idl monday january pm pst	__label__nonDir
service provider interface spi imageinputstreams	__label__nonDir
return new general-purpose numberformat instance specified locale	__label__nonDir
set attribute control print job	__label__nonDir
reset treestate instance based tree providing look feel	__label__nonDir
period added multiple unit	__label__nonDir
multiplexing ui used combine rootpaneuis	__label__nonDir
set designated parameter given reader object given number character long	__label__nonDir
obtains clock return current instant ticking whole minute using best available system clock	__label__nonDir
remove itemlistener	__label__nonDir
contains minor code give detailed information caused exception completion status	__label__nonDir
register observer called change happen content backing cursor	__label__nonDir
set scroll offset pixel	__label__nonDir
creates object responsible managing expanded well size node	__label__nonDir
return horizontal x position event relative source component	__label__nonDir
selects last item path try edit	__label__nonDir
standard way representing multicomponent profile	__label__nonDir
provides support rmi object activation	__label__nonDir
simple filter interface used serviceregistry.getserviceproviders select provider matching arbitrary criterion	__label__nonDir
dragsourcelistener defines event interface originator drag drop operation track state user gesture provide appropriate drag feedback user throughout drag drop operation	__label__nonDir
