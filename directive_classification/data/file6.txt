 @param entry the entry to query, must not be null	__label__NotNullDirective
 @param commandManager The command manager which will provide the callback; must not be null.	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param factory the factory to use for creation, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if list or factory is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if bag is null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param iterator the iterator to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if bag or transformer is null	__label__NotNullDirective
 @throws IllegalArgumentException if any predicate in the array is null	__label__NotNullDirective
 @throws IllegalArgumentException if any predicate in the collection is null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param collection the collection to add to, must not be null	__label__NotNullDirective
 @param iterator the iterator of elements to add, must not be null	__label__NotNullDirective
 @param coll the collection to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param b the second collection, must not be null	__label__NotNullDirective
 @param collection the collection to predicate, must not be null	__label__NotNullDirective
 @param collection the collection to predicate, must not be null	__label__NotNullDirective
 @param transformer the transformer for the collection, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the predicate or closure is null	__label__NotNullDirective
 @param map the map to invert, may not be null	__label__NotNullDirective
 @param bag the bag to synchronize, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the Buffer is null	__label__NotNullDirective
 @param collection the collection to synchronize, must not be null	__label__NotNullDirective
 @param set the sorted set to synchronize, must not be null	__label__NotNullDirective
 @param set the set to transform, must not be null	__label__NotNullDirective
 @param coll the BoundedCollection to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param entry the entry to query, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param collection the collection to make unmodifiable, must not be null	__label__NotNullDirective
 @param set the sorted set to make unmodifiable, must not be null	__label__NotNullDirective
 @param map the map to make lazy, must not be null	__label__NotNullDirective
 @param list the list to predicate, must not be null	__label__NotNullDirective
 @param map the map to order, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param predicates array of predicates, not cloned, no nulls	__label__NotNullDirective
 @return a predicated bag backed by the given bag @throws IllegalArgumentException if the Bag or Predicate is null	__label__NotNullDirective
 @param identifier The identifier of the item to which the listener should be attached; must not be null.	__label__NotNullDirective
 @throws NullPointerException If the format is null	__label__NotNullDirective
 @param action The action contribution that caused the exception, never null.	__label__NotNullDirective
 @param key the key for the entry, may be null	__label__NullSemanticsDirective
 Specifying a handler of null indicates that the URL should use a default stream handler for the protocol, as outlined for: java.net.URL#URL(java.lang.String, java.lang.String, int, java.lang.String)	__label__NullSemanticsDirective
 Specify null to return all Certificates (if supported).	__label__NullSemanticsDirective
 @param valueTransformer the transformer to use for value conversion, null means no conversion	__label__NullSemanticsDirective
 @param valueTransformer the transformer to use for value conversion, null means no transformation	__label__NullSemanticsDirective
 @param valueTransformer the transformer to use for value conversion, null means no transformation	__label__NullSemanticsDirective
 @param valuePred the predicate for values, null means no check	__label__NullSemanticsDirective
 @param keyTransformer the transformer to use for key conversion, null means no conversion	__label__NullSemanticsDirective
 @param defaultClosure the closure to use if no match, null means nop	__label__NullSemanticsDirective
 @param defaultTransformer the transformer to use if no match, null means return null @return the chained transformer	__label__NullSemanticsDirective
 @param key the key for the entry, may be null	__label__NullSemanticsDirective
 @param comment a description of the property list, or null if no comment is desired.	__label__NullSemanticsDirective
 @param context an access control context representing the restriction to be applied to the caller's domain's privileges before performing the specified action. If the context is null, then no additional restriction is applied.	__label__NullSemanticsDirective
 @param maximumSize the maximum size, must be size one or greater	__label__NumberRangeDirective
 Minutes must be between 00 to 59.	__label__NumberRangeDirective
 @exception IllegalArgumentException if pipeSize <= 0.	__label__NumberRangeDirective
 woDigitHours must be between 00 and 23. Other definitions are as for general time zones.	__label__NumberRangeDirective
 A negative value will result in an IllegalArgumentException being thrown	__label__NumberRangeDirective
 The number of buckets is never below 17, and is always an odd number (StaticBucketMap ensures this)	__label__NumberRangeDirective
 If the value of the len parameter is negative then no characters are written. This is contrary to the specification of this method in the {@linkplain java.io.Writer#write(java.lang.String,int,int) superclass}, which requires that an {@link IndexOutOfBoundsException} be thrown.	__label__NumberRangeDirective
 At a minimum, the unpacker must set progress to 0 at the beginning of a packing operation, and to 100 at the end.	__label__NumberRangeDirective
 @param steps the requested size, must be > 0	__label__NumberRangeDirective
 The string must contain at least one digit in either the integer or the fraction.	__label__StringFormatDirective
 The format of the IPv6reference should follow that specified in RFC 2732: Format for Literal IPv6 Addresses in URLs	__label__StringFormatDirective
 The characters in the string must all be digits, of the specified radix	__label__StringFormatDirective
 The characters in the string must all be digits, of the specified radix	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 This call is not required if the entire paragraph fits on one line.	__label__StringFormatDirective
 A character may start a Java identifier if and only if one of the following conditions is true:      {@link #isLetter(char) isLetter(ch)} returns true     {@link #getType(char) getType(ch)} returns LETTER_NUMBER     ch is a currency symbol (such as "$")     ch is a connecting punctuation character (such as "_").	__label__StringFormatDirective
 The key must implement Comparable.	__label__MethodParameterTypeDirective
 @param c Must implement Set	__label__MethodParameterTypeDirective
 The value must implement Comparable.	__label__MethodParameterTypeDirective
 @param the output type of the transformer - this extends O.	__label__MethodParameterTypeDirective
 The property must implement org.eclipse.jface.text#TypedPosition.	__label__MethodParameterTypeDirective
 To successfully store and retrieve objects from a hashtable, the objects used as keys must implement the hashCode method and the equals method.	__label__MethodParameterTypeDirective
 @param limit the index after the last character. Must be greater than start	__label__MethodParameterCorrelationDirective
 The length argument must be less than or equal to buf.length.	__label__MethodParameterCorrelationDirective
 The formats must be equal to one of {@link Control#FORMAT_PROPERTIES}, {@link Control#FORMAT_CLASS} or {@link Control#FORMAT_DEFAULT}.	__label__MethodParameterCorrelationDirective
 The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case null is placed in all elements of the copy whose index is greater than or equal to original.length - from.	__label__MethodParameterCorrelationDirective
 @throws IllegalArgumentException if end is before start	__label__MethodParameterCorrelationDirective
 When creating a ChoiceFormat, you must specify an array of formats and an array of limits. The length of these arrays must be the same.	__label__MethodParameterCorrelationDirective
 Furthermore, all elements in the list must be mutually comparable (that is, e1.compareTo(e2) must not throw a ClassCastException for any elements e1 and e2 in the list).	__label__MethodParameterCorrelationDirective
 The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case (short)0 is placed in all elements of the copy whose index is greater than or equal to original.length - from.	__label__MethodParameterCorrelationDirective
 The implementation assumes * a.size() and b.size() represent the total cardinality of a and b, resp. * a.size() < Integer.MAXVALUE	__label__MethodParameterCorrelationDirective
 @throws ArithmeticException if the result is inexact but the rounding mode is { UNNECESSARY}, or { mc.precision} {@literal >} 0 and the result of { this.divideToIntgralValue(divisor)} would require a precision of more than { mc.precision} digits.	__label__MethodParameterCorrelationDirective
 If the second argument is an InputStream then the stream must contain the number of bytes specified by scaleOrLength. If the second argument is a Reader then the reader must contain the number of characters specified by scaleOrLength.	__label__MethodParameterCorrelationDirective
 If both the language and country fields are missing, this function will return the empty string, even if the variant field is filled in (you can't have a locale with just a variant-- the variant must accompany a valid language or country code).	__label__MethodParameterCorrelationDirective
 @return the dialog, after being closed by the user, which the client can only call getReturnCode() or getToggleState()	__label__Post-CallDirective
 @return the dialog, after being closed by the user, which the client can only call getReturnCode() or getToggleState()	__label__Post-CallDirective
 Note: Clients must not make any assumptions about the returned proposals. This can change from release to release to adapt to changes made in {@link FindReplaceDocumentAdapter}.	__label__Post-CallDirective
 The method {@link Font#dispose()} must never be called directly on the returned font.	__label__Post-CallDirective
 @return the quick assist assistant or null if none is configured	__label__ReturnValueDirective
 Best effort method, meaning we may not be able to return the FQDN depending on the underlying system configuration.	__label__ReturnValueDirective
 Returns 0 after EOF has been reached, otherwise always return 1.	__label__ReturnValueDirective
 @return the type of Certificates in this certification path (never null)	__label__ReturnValueDirective
 @return The active locale; never null.	__label__ReturnValueDirective
 @return The context identifier; never null.	__label__ReturnValueDirective
 @return a ResultSet object that contains the data produced by the query; never null	__label__ReturnValueDirective
 Should return null if no value is returned by the script execution.	__label__ReturnValueDirective
 Returns an array of all locales for which the getInstance methods of this class can return localized instances. It must contain at least a Locale instance equal to {@link java.util.Locale#US Locale.US}	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.	__label__ReturnValueDirective
 How many digits must be printed for the fractional part of m or a? There must be at least one digit to represent the fractional part, and beyond that as many, but only as many, more digits as are needed to uniquely distinguish the argument value from adjacent values of type float. That is, suppose that x is the exact mathematical value represented by the decimal representation produced by this method for a finite nonzero argument f. Then f must be the float value nearest to x; or, if two float values are equally close to x, then f must be one of them and the least significant bit of the significand of f must be 0.	__label__ReturnValueDirective
 If a formal parameter type is a parameterized type, the Type object returned for it must accurately reflect the actual type parameters used in the source code.	__label__ReturnValueDirective
 If an exception type is a parameterized type, the Type object returned for it must accurately reflect the actual type parameters used in the source code.	__label__ReturnValueDirective
 keySpec identifies the specification class in which the key material should be returned. It could, for example, be DSAPublicKeySpec.class, to indicate that the key material should be returned in an instance of the DSAPublicKeySpec class.	__label__ReturnValueDirective
 @return the predicate as the only element in an array	__label__ReturnValueDirective
 Subclasses that hook their own focus listener should override this method and return false.	__label__ReturnValueDirective
 An implementation of this method must either return a proxy class that implements the named interfaces or throw an exception.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.	__label__ReturnValueDirective
 If the minimal days required must be a full week, this method returns 7.	__label__ReturnValueDirective
 @return never @throws FunctorException always	__label__ReturnValueDirective
 The List interface requires that this method returns true always.	__label__ReturnValueDirective
 Evaluates the rule by examining the characters available from the provided character scanner. The token returned by this rule returns true when calling isUndefined, if the text that the rule investigated does not match the rule's requirements	__label__ReturnValueDirective
 @return a constant indicating how keystrokes in the proposal popup affect filtering of the proposals shown. FILTER_NONE specifies that no filtering will occur in the content proposal list as keys are typed. FILTER_CHARACTER specifies the content of the popup will be filtered by the most recently typed character. FILTER_CUMULATIVE is deprecated and no longer recommended.	__label__ReturnValueDirective
 @return true if cool bar layout is locked, false otherwise	__label__ReturnValueDirective
 For instances where the viewer is displaying a tree containing a single 'root' element it is still necessary that the 'input' does not return itself from this method. This leads to recursion issues (see bug 9262).	__label__ReturnValueDirective
 it should not normally be necessary to use this method.	__label__MethodCallVisibilityDirective
 This field should not be referenced by subclasses.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL TIME values do not have a day component.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 This method should be used with extreme caution.	__label__MethodCallVisibilityDirective
 SplitMapUtils should not normally be instantiated.	__label__MethodCallVisibilityDirective
 This method should only be called from overriding methods or from setInformation.	__label__MethodCallVisibilityDirective
 This method is used only for debugging.	__label__MethodCallVisibilityDirective
 @noinstantiate This class is not intended to be instantiated by clients.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 @deprecated As of 3.3, this class is no longer necessary.	__label__MethodCallVisibilityDirective
 @deprecated This class incorrectly assumes that bytes adequately represent characters. As of JDK 1.1, the preferred way to operate on character streams is via the new character-stream classes, which include a class for counting line numbers.	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 Clients may instantiate this class	__label__MethodCallVisibilityDirective
 Clients may instantiate this class.	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 Clients may call this framework method	__label__MethodCallVisibilityDirective
 Clients may call this framework method	__label__MethodCallVisibilityDirective
 @exception IOException on encoding errors, or if this parameter object has not been initialized.	__label__ExceptionRaisingDirective
 @exception IOException if there is an error joining or when the address is not a multicast address.	__label__ExceptionRaisingDirective
 @exception SQLException if the parameterIndex is not valid; if a database access error occurs or this method is called on a closed CallableStatement @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @throws IllegalStateException if the element cannot be added at this time due to capacity restrictions @throws ClassCastException if the class of the specified element prevents it from being added to this queue @throws NullPointerException if the specified element is null and this queue does not permit null elements @throws IllegalArgumentException if some property of this element prevents it from being added to this queue	__label__ExceptionRaisingDirective
 @exception SecurityException If a security manager, s, is present and any of the following conditions is met	__label__ExceptionRaisingDirective
 @throws ClassCastException (runtime) if the input is the wrong class @throws IllegalArgumentException (runtime) if the input is invalid @throws FunctorException (runtime) if any other error occurs	__label__ExceptionRaisingDirective
 @throws IOException if an IO error occurs	__label__ExceptionRaisingDirective
 @exception SQLException if a database access error occurs; the result set concurrency is CONCUR_READ_ONLY, this method is called on a closed result set, if this method is called when the cursor is not on the insert row, or if not all of non-nullable columns in the insert row have been given a non-null value @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @throws org.eclipse.swt.SWTException in these cases:      * {@link org.eclipse.swt.SWT#ERROR_WIDGET_DISPOSED} - if the receiver has been disposed     * {@link org.eclipse.swt.SWT#ERROR_THREAD_INVALID_ACCESS} - if not called from the thread that created the receiver	__label__ExceptionRaisingDirective
 @exception IOException if there is an I/O or format problem with the keystore data, if a password is required but not given, or if the given password was incorrect. If the error is due to a wrong password, the {@link Throwable#getCause cause} of the IOException should be an UnrecoverableKeyException	__label__ExceptionRaisingDirective
 Applications should throw instances of this class to indicate other illegal uses of the null object.	__label__ExceptionRaisingDirective
 If a resource bundle can't be instantiated due to an unexpected error, the error must be reported by throwing an Error or Exception rather than simply returning null.	__label__ExceptionRaisingDirective
 @throws IllegalArgumentException if address is null or is a SocketAddress subclass not supported by this socket	__label__ExceptionRaisingDirective
 @exception SQLException if an error occurs while attempting to access the array @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @exception SQLException if a database access error occurs	__label__ExceptionRaisingDirective
 The XML document must have the following DOCTYPE declaration	__label__MiscellaneousMethodCallDirective
 @param table a table name; must match the table name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 Bear in mind that Sets require immutable objects to function correctly.	__label__MiscellaneousMethodCallDirective
 @param b The bytes that make up the class data. The bytes in positions off through off+len-1 should have the format of a valid class file as defined by the Java Virtual Machine Specification.	__label__MiscellaneousMethodCallDirective
 If issuerDN is not null, it should contain a single DER encoded distinguished name, as defined in X.501.	__label__MiscellaneousMethodCallDirective
 The range must be sorted (as by the {@link #sort(short[], int, int)} method) prior to making this call	__label__MiscellaneousMethodCallDirective
 The given CompositeData must contain the following attributes	__label__MiscellaneousMethodCallDirective
 @param table a table name; must match the table name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param name the new cursor name, which must be unique within a connection	__label__MiscellaneousMethodCallDirective
 The property file read with this constructor must be encoded in ISO-8859-1.	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param schemaPattern a schema name pattern; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param caller the principal invoking this method. It must be an owner of this ACL.	__label__MiscellaneousMethodCallDirective
 If the first entry in the object array implements {@link java.util.Map.Entry} or {@link KeyValue} then the key and value are added from that object. If the first entry in the object array is an object array itself, then it is assumed that index 0 in the sub-array is the key and index 1 is the value. Otherwise, the array is treated as keys and values in alternate indices.	__label__MiscellaneousMethodCallDirective
 @throws ClassCastException if the array contents is mixed	__label__MiscellaneousMethodCallDirective
 In addition, an application must specify constraints on the target certificate that the CertPathBuilder will attempt to build a path to. The constraints are specified as a CertSelector object. These constraints should provide the CertPathBuilder with enough search criteria to find the target certificate. Minimal criteria for an X509Certificate usually include the subject name and/or one or more subject alternative names. If enough criteria is not specified, the CertPathBuilder may throw a CertPathBuilderException.	__label__MiscellaneousMethodCallDirective
 @param schemaPattern a schema name pattern; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 The range must be sorted into ascending order according to the specified comparator (as by the {@link #sort(Object[], int, int, Comparator) sort(T[], int, int, Comparator)} method) prior to making this call	__label__MiscellaneousMethodCallDirective
 The array must be sorted (as by the {@link #sort(short[])} method) prior to making this call	__label__MiscellaneousMethodCallDirective
 The array must be sorted (as by the {@link #sort(int[])} method) prior to making this call	__label__MiscellaneousMethodCallDirective
 The doit field of the PageChangingEvent must be set to false to prevent the page from changing.	__label__MiscellaneousMethodCallDirective
 The default implementation of this framework method assumes that widget.getData() returns the element corresponding to the node.	__label__MiscellaneousMethodCallDirective
 If there is a marked position in the input stream, then buf[markpos] is the first byte to be supplied as input after a reset operation.	__label__MiscellaneousMethodCallDirective
 If the class name is misspelled, it will typically result in a compile-time error.	__label__MiscellaneousMethodCallDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be extended by clients.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be extended by clients.	__label__ExtensibleClassIdentificationDirective
 @noimplement This interface is not intended to be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 Clients may instantiate or extend this class.	__label__ExtensibleClassIdentificationDirective
 This concrete dialog class can be further subclassed as required.	__label__ExtensibleClassIdentificationDirective
 Clients are encouraged to subclass {@link AbstractInformationControl}, which does this for free.	__label__ExtensibleClassIdentificationDirective
 Clients can implement this interface and its extension interfaces, subclass {@link AbstractInformationControl}, or use the (text-based) default implementation {@link DefaultInformationControl}.	__label__ExtensibleClassIdentificationDirective
 This class is intended to be subclassed by implementors.	__label__ExtensibleClassIdentificationDirective
 This classes is intended to be subclassed	__label__ExtensibleClassIdentificationDirective
 Clients are expected to implement this interface when defining a {@link ContentProposalAdapter}, in order to specify how to retrieve and set the contents of the control being adapted.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 This interface can be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 This interface can be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 The interface can be implemented by clients. By default, clients use {@link org.eclipse.jface.text.information.InformationPresenter} as the standard implementer of this interface.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 Subclasses may extend	__label__MethodOverridingDirective
 Subclasses may extend	__label__MethodOverridingDirective
 Subclasses may extend or reimplement.	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses that require a different dialog area may either override this method	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses must override this method	__label__MethodOverridingDirective
 subclasses must override this method	__label__MethodOverridingDirective
 reimplement performFinish	__label__MethodOverridingDirective
 isPageComplete - may be extended	__label__MethodOverridingDirective
 Subclasses may override this method.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses should override this method to contribute buttons to this page's button bar.	__label__MethodOverridingDirective
 This framework method must be implemented by concrete subclasses.	__label__MethodOverridingDirective
 Subclasses may override if they wish to set the font themselves.	__label__MethodOverridingDirective
 Subclasses must implement the parseString, createList, and getNewInputObject framework methods.	__label__MethodOverridingDirective
 Usually, subclasses use this hook to inform all their reconciling strategies about the change.	__label__MethodOverridingDirective
 Subclasses can hook into the paint loop at three levels:      * Override {@link #paint(GC, ILineRange)} to control the entire painting of the ruler.     * Override {@link #paintLine(GC, int, int, int, int)} to control the painting of a line.     * Leave the painting to the default implementation, but override {@link #computeBackground(int)}, {@link #computeForeground(int)} and {@link #computeText(int)} to specify the ruler appearance for a line.	__label__MethodOverridingDirective
 Subclasses may replace this method to provide their own implementations.	__label__MethodOverridingDirective
 Subclasses should override this method and return the permission that best represents the permission required to make a a connection to the URL.	__label__MethodOverridingDirective
 Subclasses should override this method.	__label__MethodOverridingDirective
 Subclasses may override this method to customize the tool bar manager.	__label__MethodOverridingDirective
 This framework method must be implemented by concrete subclasses.	__label__MethodOverridingDirective
 When it is desirable to group together a number of Permission objects of the same type, the newPermissionCollection method on that particular type of Permission object should first be called. The default behavior (from the Permission class) is to simply return null. Subclasses of class Permission override the method if they need to store their permissions in a particular PermissionCollection object in order to provide the correct semantics when the PermissionCollection.implies method is called. If a non-null value is returned, that PermissionCollection must be used. If null is returned, then the caller of newPermissionCollection is free to store permissions of the given type in any PermissionCollection they choose (one that uses a Hashtable, one that uses a Vector, etc).	__label__MethodOverridingDirective
 This method should be overridden if a refresh operation is supported by the policy implementation.	__label__MethodOverridingDirective
 Knowledgeable providers should override this method.	__label__MethodOverridingDirective
 Subclasses must implement this method to define which drops make sense.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 This framework method must be implemented by concrete subclasses.	__label__MethodOverridingDirective
 Subclasses can overload this method to implement their own tool tip design.	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses typically need not override this method, but may extend it (calling super.saveDialogBounds if additional bounds information should be stored.	__label__MethodOverridingDirective
 Clients can override.	__label__MethodOverridingDirective
 Override if the root element is different from the viewer's input element.	__label__MethodOverridingDirective
 Clients can override.	__label__MethodOverridingDirective
 Subclasses may want to override this behavior to remain consistent with the {@link Comparator#equals(Object)} contract.	__label__MethodOverridingDirective
 Subclasses can override this to record the change.	__label__MethodOverridingDirective
 Subclasses can override this to return alternate bucketing	__label__MethodOverridingDirective
 Subclasses can override this to return a different storage class, or implement caching.	__label__MethodOverridingDirective
 Subclasses can override this to return iterators with different properties.	__label__MethodOverridingDirective
 Subclasses can override this to return iterators with different properties	__label__MethodOverridingDirective
 Override toList(Enumeration) for StringTokenizer as it implements Enumeration for the sake of backward compatibility.	__label__MethodOverridingDirective
 Subclasses should override this, as this is used by all other methods.	__label__MethodOverridingDirective
 Most implementations will probably choose to override this method for efficiency.	__label__MethodOverridingDirective
 Typically, additional methods will be overridden as well.	__label__MethodOverridingDirective
 Clients may call this framework method, but should not override it.	__label__MethodOverridingDirective
 This method is not intended to be overridden by subclasses.	__label__MethodOverridingDirective
 @nooverride This method is not intended to be re-implemented or extended by clients.	__label__MethodOverridingDirective
 Clients should not override it.	__label__MethodOverridingDirective
 Note: This method is not intended to be referenced or overridden by clients.	__label__MethodOverridingDirective
 Subclasses must call the super implementation.	__label__MethodExtensionDirective
 Subclasses should call super.buttonPressed if the default handling of the ok and cancel buttons is desired.	__label__MethodExtensionDirective
 Subclasses should not call the super implementation.	__label__MethodExtensionDirective
 applications that override this method should either call super.update(g) or incorporate the functionality described above into their own code	__label__MethodExtensionDirective
 To conditionally drag from certain areas subclass mousePressed and call super when you wish the dragging to begin.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkSecurityAccess at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If this method is overridden, then super.checkAccess should be called by the first statement in the overridden method, or the equivalent security check should be placed in the overridden method.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkConnect at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 Note: To properly nest multiple overridings, subclasses should generally invoke super.terminated within this method.	__label__MethodExtensionDirective
 Subclasses may override but must call super.doFillIntoGrid.	__label__MethodExtensionDirective
 A concrete subclass of this class must call this constructor when it is activated via the two parameter constructor described above	__label__CallContractSubclassingDirective
 At a minimum, the recovery operation must include closing the current connection and getting a new connection.	__label__CallContractSubclassingDirective
 The additional stipulation on constructors is, not surprisingly, that all constructors must create a set that contains no duplicate elements (as defined above).	__label__MethodImplementationDirective
 Classes that require special handling during the serialization and deserialization process must implement special methods with these exact signatures	__label__MethodImplementationDirective
 The reliability of this method is important for the ability to use it to make security decisions, so its implementation should not just test if the class in question extends Proxy.	__label__MethodImplementationDirective
 When you are searching or comparing text, you must ensure that these two sequences are treated as equivalent. In addition, you must handle characters with more than one accent.	__label__MethodImplementationDirective
 This differs from {@link List#removeAll(Collection)} in that cardinality is respected; if list1 contains two occurrences of null and list2 only contains one occurrence, then the returned list will still contain one occurrence.	__label__MethodImplementationDirective
 Unlike some of the numeric methods of class StrictMath, all implementations of the equivalent functions of class Math are not defined to return the bit-for-bit same results. This relaxation permits better-performing implementations where strict reproducibility is not required.	__label__MethodImplementationDirective
 The special value 0 instructs the packer to copy through the original JAR file directly, with no compression. The JSR 200 standard requires any unpacker to understand this special case as a pass-through of the entire archive.	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if { fromElement} cannot be compared to elements currently in the set.	__label__MethodImplementationDirective
 This method must obey the general contract of {@link Object#equals(Object)}.	__label__MethodImplementationDirective
 The size of the collection can vary, but it can never exceed a preset maximum number of elements.	__label__MethodImplementationDirective
 Remove any members of the bag that are not in the given collection, respecting cardinality. That is, if the given collection coll contains n copies of a given object and the bag has m > n copies, then delete m - n copies from the bag. In addition, if e is an object in the bag but !coll.contains(e), then remove e and any of its copies.	__label__MethodImplementationDirective
 A listener must set event.doit to false if it cannot handle the drag operation.	__label__MethodImplementationDirective
 Concrete subclasses of {@link ColumnViewer} should implement a matching concrete subclass of {@link ViewerColumn}.	__label__Non-localConsistencySubclassingDirective
 The format should be that returned by getFormat and produced by encode.	__label__Non-localConsistencySubclassingDirective
 Overriding this method is generally not required if the number of different keys is small. If a more efficient representation of a viewer's properties is required, override both getData and setData.	__label__Non-localConsistencySubclassingDirective
 Every Java(TM) SE implementation must provide some means of specifying which PreferencesFactory implementation is used to generate the root preferences nodes.	__label__Non-localConsistencySubclassingDirective
 Providers of new {@link Preferences} implementations should provide corresponding PreferencesFactory implementations so that the new Preferences implementation can be installed in place of the platform-specific default implementation.	__label__Non-localConsistencySubclassingDirective
 Note: This flag is only valid in {@link ICompletionListener#assistSessionStarted(ContentAssistEvent)}.	__label__Non-localConsistencySubclassingDirective
 However, it is crucial that the programmer writing the verifier code be aware what Signature engine is being used, as its own implementation of the verify method is invoked to verify a signature.	__label__Non-localConsistencySubclassingDirective
 Note: This content assist subject control may not support appending a verify listener, in which case false will be returned. If this content assist subject control only supports addVerifyKeyListener then this method can be used but prependVerifyKeyListener must return false.	__label__Non-localConsistencySubclassingDirective
 The returned control's layout data must be an instance of GridData.	__label__MiscellaneousSubclassingDirective
 A no-arg constructor must be accessible to the subclass that is serializable.	__label__MiscellaneousSubclassingDirective
 In this case the non-serializable class must have a no-arg constructor to allow its fields to be initialized.	__label__MiscellaneousSubclassingDirective
 An implementation of this interface should map a MIME type into an instance of ContentHandler.	__label__MiscellaneousSubclassingDirective
 All CertPathValidator implementations must include a class (the SPI class) that extends this class (CertPathValidatorSpi) and implements all of its methods.	__label__MiscellaneousSubclassingDirective
 must be called during DropTargetListener.drop method invocation.	__label__MethodCallSequenceDirective
 An updater method must be called before a getter method can be called on a column value.	__label__MethodCallSequenceDirective
 For sockets accepted from a ServerSocket, this must be done by calling {@link ServerSocket#setReceiveBufferSize(int)} before the ServerSocket is bound to a local address.	__label__MethodCallSequenceDirective
 To avoid continual thread replacement, the keep-alive time must be greater than zero when setting true.	__label__MethodCallSequenceDirective
 This method should be called after the dialog has been opened as it updates the message label immediately	__label__MethodCallSequenceDirective
 This method may only be called after initializeDialogUnits has been called.	__label__MethodCallSequenceDirective
 The context must be a security context returned by a previous call to getSecurityContext.	__label__MethodCallSequenceDirective
 It must be {@linkplain java.io.PipedWriter#connect( java.io.PipedReader) connected} to a PipedWriter before being used	__label__MethodCallSequenceDirective
 This should be invoked after defining a class.	__label__MethodCallSequenceDirective
 All OUT parameters must be registered before a stored procedure is executed.	__label__MethodCallSequenceDirective
 And as described in SQLData, calls to reader methods must be made in the order that their corresponding attributes appear in the SQL definition of the type.	__label__MethodCallSequenceDirective
 You must then use the methods getResultSet or getUpdateCount to retrieve the result, and getMoreResults to move to any subsequent result(s).	__label__MethodCallSequenceDirective
 Note: {@link ListIterator} implementations that support add() and remove() only allow set() to be called once per call to next() or previous (see the {@link ListIterator} javadoc for more details).	__label__MethodCallSequenceDirective
 Clients of a IFindReplaceTarget that also implements the IFindReplaceTargetExtension have to indicate the start of a find/replace session before using the target and to indicate the end of the session when the target is no longer used.	__label__MethodCallSequenceDirective
 This method should be called when the compressor is no longer being used, but will also be called automatically by the finalize() method.	__label__MethodCallSequenceDirective
 This method should in general be called before the pool is actively used.	__label__MethodCallSequenceDirective
 The { park} method may also return at any other time, for "no reason", so in general must be invoked within a loop that rechecks conditions upon return.	__label__MethodCallSequenceDirective
 @throws IllegalStateException if remove() has already been called since the last call to next()	__label__MethodCallSequenceDirective
 The encoding should be set before any LogRecords are written to the Handler.	__label__MethodCallSequenceDirective
 When a call to the previous method returns false, the cursor is positioned before the first row. Any invocation of a ResultSet method which requires a current row will result in a SQLException being thrown.	__label__MethodCallSequenceDirective
 Constructs a new FilterListIterator that will not function until {@link #setPredicate(Predicate) setPredicate} is invoked.	__label__MethodCallSequenceDirective
 Constructs a new TransformIterator that will not function until the {@link #setIterator(Iterator) setIterator} and {@link #setTransformer(Transformer)} methods are invoked.	__label__MethodCallSequenceDirective
 When the caller is done with an image obtained from createResource, they must call destroyResource() rather than disposing the Image directly. The result of createResource() can be safely cast to an Image.	__label__MethodCallSequenceDirective
 It is important not to use the original list after invoking this method, as it is a backdoor for adding invalid objects.	__label__MethodCallSequenceDirective
 Invoking the method before the content area has been set or after the dialog has been disposed will have no effect.	__label__MethodCallSequenceDirective
 There must be an SWT Display created in the current thread before calling this method.	__label__MethodCallSequenceDirective
 this means that the flush method is automatically invoked after a byte array is written, one of the println methods is invoked, or a newline character or byte ('\n') is written.	__label__MethodCallSequenceDirective
 If the returned node did not exist prior to this call, this node and any ancestors that were created by this call are not guaranteed to become permanent until the flush method is called on the returned node (or one of its ancestors or descendants).	__label__MethodCallSequenceDirective
 If this pathname denotes a directory, then the directory must be empty in order to be deleted.	__label__NonCall-basedStateDirective
 If the identity has a public key, the public key in the certificate must be the same, and if the identity does not have a public key, the identity's public key is set to be that specified in the certificate.	__label__NonCall-basedStateDirective
 This version of registerOutParameter should be used when the parameter is of JDBC type NUMERIC or DECIMAL.	__label__NonCall-basedStateDirective
 The index must be a value greater than or equal to { 0} and less than or equal to the current size of the vector.	__label__NonCall-basedStateDirective
 The origin component must be contained within the component hierarchy of the popup menu's parent.	__label__NonCall-basedStateDirective
 The index must be a value greater than or equal to { 0} and less than the current size of the vector.	__label__NonCall-basedStateDirective
 This target must be editable.	__label__NonCall-basedStateDirective
 @param originalDevice must be the same Device that was passed into the font's constructor when it was first created.	__label__NonCall-basedStateDirective
 ObjectOutputStream subclasses which override this method can only be constructed in security contexts possessing the "enableSubclassImplementation" SerializablePermission; any attempt to instantiate such a subclass without this permission will cause a SecurityException to be thrown.	__label__NonCall-basedStateDirective
 Thus, repeated calls are guaranteed never to reduce randomness.	__label__NonCall-basedStateDirective
 The current thread is assumed to hold the lock associated with this { Condition} when this method is called.	__label__NonCall-basedStateDirective
 Using the integer fields in this class (such as {@link #ROUND_HALF_UP}) to represent rounding mode is largely obsolete; the enumeration values of the { RoundingMode} { enum}, (such as {@link RoundingMode#HALF_UP}) should be used instead.	__label__AlternativeDirective
 It is recommended that implementations of IKeyFormatter subclass from here, rather than implementing IKeyFormatter directly.	__label__AlternativeDirective
 @deprecated since 3.1 use {@link org.eclipse.jface.text.DefaultIndentLineAutoEditStrategy} instead	__label__AlternativeDirective
 The {@linkplain java.nio.charset.CharsetDecoder} class should be used when more control over the decoding process is required.	__label__AlternativeDirective
 This constructor is protected because most users should use a CertificateFactory to create CertPaths.	__label__AlternativeDirective
 When configuring a Connection, JDBC applications should use the appropritate Connection method such as setAutoCommit or setTransactionIsolation. Applications should not invoke SQL commands directly to change the connection's configuration when there is a JDBC method available.	__label__AlternativeDirective
 Clients should subclass AbstractConcurrentModel instead.	__label__AlternativeDirective
 If a new Integer instance is not required, this method should generally be used in preference to the constructor {@link #Integer(int)}, as this method is likely to yield significantly better space and time performance by caching frequently requested values.	__label__AlternativeDirective
 The {@link java.nio.charset.CharsetEncoder} class should be used when more control over the encoding process is required.	__label__AlternativeDirective
 In order to provide backward compatibility for clients of ITextViewer, extension interfaces are used as a means of evolution. The following extension interfaces exist:      * {@link org.eclipse.jface.text.ITextViewerExtension} since version 2.0 replacing the event consumer mechanism and introducing the concept of rewrite targets and means to manage the viewer's redraw behavior     * {@link org.eclipse.jface.text.ITextViewerExtension2}since version 2.1 adding a way to invalidate a viewer's presentation and setters for hovers.     * {@link org.eclipse.jface.text.ITextViewerExtension3} since version 2.1 which itself was replaced by {@link org.eclipse.jface.text.ITextViewerExtension5} in version 3.0     * {@link org.eclipse.jface.text.ITextViewerExtension4} since version 3.0 introducing focus handling for widget token keepers and the concept of text presentation listeners.     * {@link org.eclipse.jface.text.ITextViewerExtension5} since version 3.0 extending the visible region concept with explicit handling and conversion of widget and model coordinates.     * {@link org.eclipse.jface.text.ITextViewerExtension6} since version 3.1 extending the text viewer with the ability to detect hyperlinks and access the undo manager.     * {@link org.eclipse.jface.text.ITextViewerExtension7} since version 3.3 extending the text viewer with the ability to install tabs to spaces conversion.     * {@link org.eclipse.jface.text.ITextViewerExtension8} since version 3.4 extending the text viewer with the ability to print and rich hover support.	__label__AlternativeDirective
 Completion proposals can implement {@link ICompletionProposalExtension6} to provide colored proposal labels.	__label__AlternativeDirective
 By default, clients use ContentFormatter or MultiPassContentFormatter as the standard implementers of this interface.	__label__AlternativeDirective
 Since this implementation does not support add() or remove(), set() may be called as often as desired.	__label__AlternativeDirective
 The following can be used to provide synchronized access to your BoundedFifoBuffer:     Buffer fifo = BufferUtils.synchronizedBuffer(new BoundedFifoBuffer());	__label__AlternativeDirective
 The following can be used to provide synchronized access to your CircularFifoBuffer:     Buffer fifo = BufferUtils.synchronizedBuffer(new CircularFifoBuffer());	__label__AlternativeDirective
 Use {@link org.apache.commons.collections.BufferUtils#synchronizedBuffer(Buffer)} or {@link org.apache.commons.collections.buffer.SynchronizedBuffer#decorate(Buffer)} to provide synchronized access to a PriorityBuffer:	__label__AlternativeDirective
 WARNING: This constant is binary incompatible with Commons Collections 2.1 and 2.1.1. Use EmptyListIterator.INSTANCE for compatability with Commons Collections 2.1.1.	__label__AlternativeDirective
 If you subclass AbstractLinkedMap but not LinkEntry then you will not be able to access the protected fields. The entryXxx() methods on AbstractLinkedMap exist to provide the necessary access.	__label__AlternativeDirective
 Although this can be used to reset iteration, the {@link #reset()} method is a more effective choice.	__label__AlternativeDirective
 Note: This class should only be used if you need to add bounded behaviour to another buffer. If you just want a bounded buffer then you should use {@link BoundedFifoBuffer} or {@link CircularFifoBuffer}	__label__AlternativeDirective
 The following extension interfaces exist:      {@link IRevisionRulerColumnExtension} since version 3.3 allowing to register a selection listener on revisions and a configurable rendering mode.	__label__AlternativeDirective
 Unless a new instance is required, the static factory {@link #valueOf(boolean)} is generally a better choice.	__label__AlternativeDirective
 When threads must repeatedly count down in this way, instead use a {@link CyclicBarrier}.	__label__AlternativeDirective
 The required FontMetrics parameter may be created in the following way: GC gc = new GC(control); gc.setFont(control.getFont()); fontMetrics = gc.getFontMetrics(); gc.dispose();	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of updateNCharacterStream which takes a length parameter.	__label__AlternativeDirective
 Clients are encouraged to supply their own disabled/grayed/etc. images rather than using a default image and transforming it.	__label__AlternativeDirective
 Note that there is another method for efficiently processing the simultaneous removal of multiple elements.	__label__AlternativeDirective
 May fail spuriously and does not provide ordering guarantees, so is only rarely an appropriate alternative to { compareAndSet}.	__label__AlternativeDirective
 However, this class provides alternative protected extension method decorateTask (one version each for Runnable and Callable) that can be used to customize the concrete task types used to execute commands entered via execute, submit, schedule, scheduleAtFixedRate, and scheduleWithFixedDelay.	__label__AlternativeDirective
 This interface may be implemented by clients. Alternatively, clients may use the rule-based default implementation {@link org.eclipse.jface.text.rules.DefaultDamagerRepairer}.	__label__AlternativeDirective
 Logger names can be arbitrary strings, but they should normally be based on the package name or class name of the logged component, such as java.net or javax.swing. In addition it is possible to create "anonymous" Loggers that are not stored in the Logger namespace.	__label__AlternativeDirective
 The following extension interfaces exist:      {@link org.eclipse.jface.text.ITextHoverExtension} since version 3.0 allowing a text hover to provide a creator for the hover control. This allows for sophisticated hovers in a way that information computed by the hover can be displayed in the best possible form.     {@link org.eclipse.jface.text.ITextHoverExtension2} since version 3.4 allowing a text hover to return hover-specific information objects.	__label__AlternativeDirective
 Since the order of format elements in a pattern string often changes during localization, it is generally better to use the {@link #setFormatByArgumentIndex setFormatByArgumentIndex} method, which accesses format elements based on the argument index they specify.	__label__AlternativeDirective
 If the backing store naturally flushes an entire subtree at once, the implementer is encouraged to override flush(), rather than merely overriding this method.	__label__AlternativeDirective
 Note that the preferred way of re-initializing a preference to its default value is to call setToDefault.	__label__AlternativeDirective
 May fail spuriously and does not provide ordering guarantees, so is only rarely an appropriate alternative to { compareAndSet}.	__label__AlternativeDirective
 When using a capacity-restricted queue, this method is generally preferable to method {@link BlockingQueue#add add}, which can fail to insert an element only by throwing an exception.	__label__AlternativeDirective
 When using a capacity-restricted queue, it is generally preferable to use {@link #offer(Object) offer}.	__label__AlternativeDirective
 Note that there is a significant difference between writing a String into the stream as primitive data or as an Object.	__label__AlternativeDirective
 implementations must synchronized on the hierarchy lock	__label__SynchronizationDirective
 thread must then re-acquire the lock before returning from { await}.	__label__SynchronizationDirective
 Iterators must be manually synchronized.   synchronized (coll) {    ListIterator it = coll.listIterator();    // do stuff with iterator  }    @return an iterator that must be manually synchronized on the collection	__label__SynchronizationDirective
 This implementation is not synchronized. You can use {@link java.util.Collections#synchronizedMap} to provide synchronized access to a ReferenceMap.	__label__SynchronizationDirective
 You must manually synchronize on the returned buffer's iterator to avoid non-deterministic behavior:   Collection c = CollectionUtils.synchronizedCollection(myCollection);  synchronized (c) {      Iterator i = c.iterator();      while (i.hasNext()) {          process (i.next());      }  }	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this interface are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 The static methods of this class are guaranteed to be thread-safe. Multiple threads may concurrently invoke the static methods defined in this class with no ill effects.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 An extended ListIterator that allows concurrent changes to the underlying list.	__label__SynchronizationDirective
 Note that PredicatedSortedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 Note that ListOrderedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization	__label__SynchronizationDirective
 If multiple threads access a map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally.	__label__SynchronizationDirective
 ttempting to use both objects from a single thread is not recommended as it may deadlock the thread.	__label__SynchronizationDirective
 Formats are generally not synchronized. It is recommended to create separate format instances for each thread.	__label__SynchronizationDirective
 Attempting to use both objects from a single thread is not recommended, as it may deadlock the thread.	__label__SynchronizationDirective
 Furthermore, Enumerations returned via the elements method are not fail-fast. Modifications to a collection should not be performed while enumerating over that collection.	__label__SynchronizationDirective
 The associated method must be public and its parameters return value, and exceptions must follow the rules defined in JAX-RPC 1.1, section	__label__MiscellaneousDirective
 The exact operation of the {@link Condition} instance depends on the { Lock} implementation and must be documented by that implementation.	__label__MiscellaneousDirective
 Typically, an exception will be thrown (such as {@link IllegalMonitorStateException}) and the implementation must document that fact.	__label__MiscellaneousDirective
 Clients may also call this method to persist the bounds at times other than closing the dialog.	__label__MiscellaneousDirective
 This field should be documented with a serialField tag.	__label__MiscellaneousDirective
 Each subclass should state the precise behavior of this method so that users and developers know what to expect.	__label__MiscellaneousDirective
 No check is made that the object is immutable. In general, only immutable objects should use the constant factory.	__label__MiscellaneousDirective
 The specification for the persistent collection should indicate that it is capable of throwing such exceptions.	__label__MiscellaneousDirective
 Implementers should document whether the runnable is run synchronously (blocking) or asynchronously (non-blocking), or if no assumption can be made about the blocking behaviour.	__label__MiscellaneousDirective
 This list implementation utilises a tree structure internally to ensure that all insertions and removals are O(log n). This provides much faster performance than both an ArrayList and a LinkedList where elements are inserted and removed repeatedly from anywhere in the list.	__label__MiscellaneousDirective
 Under many circumstances, linking Iterators together in this manner is more efficient (and convenient) than using nested for loops to extract a list.	__label__MiscellaneousDirective
 Callers should re-check the conditions which caused the thread to park in the first place.	__label__MiscellaneousDirective
 Valuable data should not be stored at this node as it is shared by all programs that use it.	__label__MiscellaneousDirective
 JDBC 4.0 Drivers must include the file META-INF/services/java.sql.Driver.	__label__MiscellaneousDirective
 Beware that, unlike in most collections, the size method is not a constant-time operation. Because of the asynchronous nature of these maps, determining the current number of elements requires a traversal of the element	__label__MiscellaneousDirective
 Caching the state is important to improve overall performance as calling {@link org.eclipse.jface.text.quickassist.IQuickAssistAssistant#canFix(Annotation)} can be expensive.	__label__MiscellaneousDirective
add new jbutton dispatch action	__label__nonDir
acquires lock free time invocation	__label__nonDir
engine transform sequence sixteen-bit unicode character sequence byte specific charset	__label__nonDir
org/omg/corba/wcharseqhelper.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00 class definition ha modified conform following omg specification orb core defined corba formal/99-10-07 idl/java language mapping defined ptc/00-01-08	__label__nonDir
one policyerrorcodes would filled requested policy understood valid orb currently supported	__label__nonDir
class defines service provider interface spi secretkeyfactory class	__label__nonDir
identifies devanagari range decimal base	__label__nonDir
org/omg/iop/taggedcomponenthelper.java	__label__nonDir
return type scrolling take place response event	__label__nonDir
mouse pressed event	__label__nonDir
set period year interpreted begin date user specifies	__label__nonDir
class string stringbuffer stringbuilder similarly provide commonly used operation character string	__label__nonDir
set value several attribute dynamic mbean	__label__nonDir
formatter provides support formatting logrecords	__label__nonDir
provides rmi package	__label__nonDir
one parallel group contains label text field	__label__nonDir
expose remote management interface gauge monitor mbean	__label__nonDir
acquires read lock	__label__nonDir
constant mandaic unicode character block	__label__nonDir
attribute key width font	__label__nonDir
listener receiving preference node change event	__label__nonDir
helper unknownuserexception	__label__nonDir
class enables programmer create object protect confidentiality cryptographic algorithm	__label__nonDir
property name pattern form name match property name start name continues zero additional character	__label__nonDir
generic abstract window toolkit awt container object component contain awt component	__label__nonDir
return new condition instance bound lock instance	__label__nonDir
menubar class encapsulates platform concept menu bar bound frame	__label__nonDir
blockingdeque interface extends blockingqueue support fifo lifo stack-based operation	__label__nonDir
bindingiterator interface allows client iterate binding using next_one next_n operation	__label__nonDir
get value several attribute dynamic mbean	__label__nonDir
creates toggle button ha specified text image initially unselected	__label__nonDir
set designated parameter reader object	__label__nonDir
set number column textfield invalidate layout	__label__nonDir
construct new textarea	__label__nonDir
return ascent text	__label__nonDir
description copied class jcomponent	__label__nonDir
multiplexing ui used combine paneluis	__label__nonDir
contains minor code give detailed information caused exception completion status	__label__nonDir
element appear natural order opposed zig-zag order	__label__nonDir
return string representation current value	__label__nonDir
constant identifying sign field	__label__nonDir
qname represents qualified name defined xml specification xml schema part2 datatypes specification namespaces xml namespaces xml erratum	__label__nonDir
set given value	__label__nonDir
interceptor interceptor new logginginterceptor register logging service interceptor	__label__nonDir
deprecated	__label__nonDir
exists externalize process querying permitting different approach per strategy design pattern	__label__nonDir
contains activity service related exception thrown orb machinery unmarshalling	__label__nonDir
populates webrowset object content given resultset object writes data property metadata given outputstream object xml format	__label__nonDir
ascertains whether escape processing enabled rowset object	__label__nonDir
information helper file see generated file helper file	__label__nonDir
check box graphical component either true false state	__label__nonDir
also contains three int member constant corresponding one completionstatus instance	__label__nonDir
canonical decomposition followed canonical composition	__label__nonDir
simple network logging handler	__label__nonDir
constant phags-pa unicode character block	__label__nonDir
construct shapegraphicattribute specified shape	__label__nonDir
provides class implement advanced dynamic loading	__label__nonDir
one card visible time container act stack card	__label__nonDir
may also contain string describing exception	__label__nonDir
dimension class encapsulates width height component integer precision single object	__label__nonDir
adobe type font data	__label__nonDir
member package subpackages use language modeling language processing task apis including limited annotation processing framework	__label__nonDir
return new dateformatsymbols instance specified locale	__label__nonDir
meant javax.swing.dropmode.insert javax.swing.dropmode.on_or_insert drop mode	__label__nonDir
find color system property	__label__nonDir
applet framework involves two entity applet applet context	__label__nonDir
read character portion array	__label__nonDir
example might adjuster set date avoiding weekend one set date last day month	__label__nonDir
provides api server side data source access processing javatm programming language	__label__nonDir
specifies alignment right side component	__label__nonDir
constant musical symbol unicode character block	__label__nonDir
creates new instance joinrowset	__label__nonDir
simple visitor type default behavior appropriate release_6 source version	__label__nonDir
standard override change semantics	__label__nonDir
visit type element	__label__nonDir
return menu selected background color current theme	__label__nonDir
visit short primitive type calling defaultaction	__label__nonDir
information helper file see generated file helper file	__label__nonDir
see javacompiler detail using spi	__label__nonDir
acquires exclusive mode ignoring interrupt	__label__nonDir
obtains instance duration temporal amount	__label__nonDir
os/2 window specific metric	__label__nonDir
refer swing component supporting action detail find information use action section java tutorial	__label__nonDir
return status construction screen representation specified image	__label__nonDir
focustraversalpolicy defines order component particular focus cycle root traversed	__label__nonDir
information holder file see generated file holder file	__label__nonDir
rowsetreader rowsetreader null syncprovider provider syncfactory.getinstance javax.sql.rowset.provider.rioptimisticprovider provider instanceof rioptimisticprovider rowsetreader provider.getrowsetreader	__label__nonDir
information holder file see generated file holder file	__label__nonDir
mark property refers class xmlelement jaxbelement	__label__nonDir
service provider class intended lightweight quick load	__label__nonDir
ansi-style join providing inner join two table	__label__nonDir
return color rgb value respectively	__label__nonDir
return default mapped value addition null addition supported	__label__nonDir
helper longseqhelper	__label__nonDir
immutable sequence character	__label__nonDir
return whether location represents insert row	__label__nonDir
return number multiple master design control	__label__nonDir
modifiable list containing namedvalue object	__label__nonDir
object containing modifiable list string object represent property name	__label__nonDir
see graphicsenvironment.getavailablefontfamilynames	__label__nonDir
get locale component	__label__nonDir
editing affect field list item remains intact	__label__nonDir
represents marker interface policy parameter	__label__nonDir
abstract class extended object represent metadata non-image data associated image stream	__label__nonDir
add specified mouse listener receive mouse event trayicon	__label__nonDir
creates new atomicmarkablereference given initial value	__label__nonDir
org.omg.corba.dynamicimplementation	__label__nonDir
default action visit method	__label__nonDir
creates toolkit implementation label using specified peer interface	__label__nonDir
return position strike-through line relative baseline	__label__nonDir
return float array containing color alpha component color colorspace specified cspace parameter	__label__nonDir
group class used stub skeleton generated rmic stub compiler	__label__nonDir
set syncprovider object cachedrowset object one specified	__label__nonDir
constant semicolon key	__label__nonDir
represents intersection type	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
baseline data	__label__nonDir
creates toggle button specified text image selection state	__label__nonDir
information full-screen exclusive mode api see full-screen exclusive mode api tutorial	__label__nonDir
return alpha component range	__label__nonDir
return int hash code value object	__label__nonDir
context resolved giving property name getting back value associated	__label__nonDir
paint tool bar border borderpainted property true	__label__nonDir
constant kannada unicode character block	__label__nonDir
get current value held field given object managed updater	__label__nonDir
designed allow sax parser pas certain type information application serve simple model sax2 parser extension package	__label__nonDir
process event button	__label__nonDir
request standard kerning	__label__nonDir
portable interceptor implement interceptor	__label__nonDir
set designated parameter given string object	__label__nonDir
convenience method aid implementation common-case mousewheellistener scroll scrollpane jscrollpane amount conforms platform setting	__label__nonDir
enumeration parameter mode parameter	__label__nonDir
cause combo box display popup window	__label__nonDir
type-safe enumeration possible orientation	__label__nonDir
provides rmi package	__label__nonDir
return alignment along x axis	__label__nonDir
default action visit method	__label__nonDir
return string representation collection	__label__nonDir
set rectangle representing area need repainted response event	__label__nonDir
description copied class componentui	__label__nonDir
additionally utility class computing crc-32 adler-32 checksum arbitrary input stream	__label__nonDir
package contains core jax-ws apis	__label__nonDir
multiplexing ui used combine splitpaneuis	__label__nonDir
constructor concrete subclass us argument default value	__label__nonDir
compositecontext object maintain state compositing operation	__label__nonDir
usually mean used bind operation	__label__nonDir
return array input method listener registered component	__label__nonDir
provides http spi used portable deployment jax-ws web service container e.g	__label__nonDir
org/omg/portableinterceptor/discarding.java	__label__nonDir
information helper file see generated file helper file	__label__nonDir
creates toolkit implementation panel using specified peer interface	__label__nonDir
creates new jtextpane	__label__nonDir
atomically decrement one current value	__label__nonDir
eventually set field given object managed updater given updated value	__label__nonDir
file mime.types user home directory	__label__nonDir
identifies malayalam range decimal base	__label__nonDir
package java image i/o api containing plug-in interface reader writer transcoders stream runtime registry	__label__nonDir
implement characteriterator.previous string	__label__nonDir
org.omg.corba.dynamicimplementation	__label__nonDir
enumeration parameter mode parameter	__label__nonDir
multiple master font metric	__label__nonDir
creates cachedrowset object deep copy cachedrowset object data independent	__label__nonDir
set renderer paint list item item selected list jcombobox field	__label__nonDir
mediatype instance iso/din c8 x mm	__label__nonDir
cachedrowset object syncprovider contains connection object original resultset jdbc property passed	__label__nonDir
set number column text field	__label__nonDir
finally character case ignored valid block name form	__label__nonDir
convert string integer return specified opaque color	__label__nonDir
element represents static language-level construct example runtime construct virtual machine	__label__nonDir
implementation visit uniontype calling defaultaction	__label__nonDir
constant syriac unicode character block	__label__nonDir
return transparency mode texturepaint	__label__nonDir
policy specifies whether implicit activation servant supported created poa	__label__nonDir
contains minor code give detailed information caused exception completion status	__label__nonDir
return true rh ha transform antialiasing fractional metric value	__label__nonDir
return true collection contains element specified collection	__label__nonDir
return glyphcode specified glyph	__label__nonDir
return child component window receive focus window focused	__label__nonDir
class used bean run application	__label__nonDir
iioinvalidtreeexception thrown attempt iiometadata object parse tree iiometadatanodes fails	__label__nonDir
annotation used indicate annotation type annotation processor support	__label__nonDir
provides exception invalidname thrown method orb.resolve_initial_references exception inconsistenttypecode thrown dynamic creation method orb class	__label__nonDir
creates listener update display based selection change method	__label__nonDir
associate editor text document	__label__nonDir
retrieves requested column text store buffer provided	__label__nonDir
information helper file see generated file helper file	__label__nonDir
keypairgenerator class used generate pair public private key	__label__nonDir
class implementation modelmbean	__label__nonDir
update preferredsize instance variable returned getpreferredsize	__label__nonDir
make node expanded jtree expanded layoutcache	__label__nonDir
default srgb space	__label__nonDir
please refer java deployment guide detail technique	__label__nonDir
return rectangle2d encloses bit drawn graphicattribute relative rendering position	__label__nonDir
return resultset object containing original value cachedrowset object	__label__nonDir
readwritelock interface similarly defines lock may shared among reader exclusive writer	__label__nonDir
give ui delegate opportunity define precise shape component sake mouse processing	__label__nonDir
grouplayout.sequentialgroup vgroup layout.createsequentialgroup sequential group contains two parallel group align content along baseline	__label__nonDir
moderately extended width	__label__nonDir
get background color window	__label__nonDir
class containing premain method	__label__nonDir
