 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param entry the entry to copy, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param commandManager The command manager which will provide the callback; must not be null.	__label__NotNullDirective
 @exception IllegalArgumentException if listener is null	__label__NotNullDirective
 @throws IllegalArgumentException if list or factory is null	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @param factory the factory to use, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if set is null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map is null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @param entry the entry to copy, must not be null	__label__NotNullDirective
 @throws NullPointerException if the map is null	__label__NotNullDirective
 @throws NullPointerException if either parameter is null	__label__NotNullDirective
 @throws NullPointerException if the collection is null	__label__NotNullDirective
 throws NullPointerException if either list is null	__label__NotNullDirective
 @throws IllegalArgumentException if the predicates array is null	__label__NotNullDirective
 @throws IllegalArgumentException if the List or Predicate is null	__label__NotNullDirective
 @param a the first (sub?) collection, must not be null	__label__NotNullDirective
 Attempting to add a null key or value to the map will raise a NullPointerException.	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param predicate the predicate to use for validation, must not be null	__label__NotNullDirective
 @param lock the lock to use, must not be null	__label__NotNullDirective
 @param map the map to make lazy, must not be null	__label__NotNullDirective
 @param transformerFactory the factory for creating new objects, must not be null	__label__NotNullDirective
 @param predicate the predicate for the bag, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param entry the entry to query, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param bag the bag whose unmodifiable view is to be returned, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param transformers matching array of transformers, not cloned, no nulls	__label__NotNullDirective
 @param closures the closures to chain, not copied, no nulls	__label__NotNullDirective
 Puts the key and value into the map, where the key must be a non-null MultiKey object.	__label__NotNullDirective
 @throws IllegalArgumentException if the buffer is null	__label__NotNullDirective
 @param listener The listener to be removed; must not be null.	__label__NotNullDirective
 @param platform The new platform; must not be null.	__label__NotNullDirective
 @param predicate2 the second predicate, may not be null	__label__NotNullDirective
 @param text String The label to set. This value should not be null.	__label__NotNullDirective
 @throws NullPointerException If the specified address is null.	__label__NotNullDirective
 The scanner may not be null	__label__NotNullDirective
 @throws IllegalArgumentException if the collection is null	__label__NotNullDirective
 @param message the raw message string (may be null)	__label__NullSemanticsDirective
 If this parameter is null, then only a specified keyStroke will invoke content proposal.	__label__NullSemanticsDirective
 @param store the IPreference store in which the user's preference should be persisted; null if you don't want it persisted automatically.	__label__NullSemanticsDirective
 @param transformer the transformer to use, may be null	__label__NullSemanticsDirective
 @param keyTransformer the transformer to use for key conversion, null means no transformation	__label__NullSemanticsDirective
 @param keyTransformer the transformer to use for key conversion, null means no transformation	__label__NullSemanticsDirective
 @param keyTransformer the predicate to validate the keys, null means no transformation	__label__NullSemanticsDirective
 @param comparator the comparator used to order the elements, null means use natural order	__label__NullSemanticsDirective
 @param comparator the comparator used to order the elements, null means use natural order	__label__NullSemanticsDirective
 If the input object is null, null is returned.	__label__NullSemanticsDirective
 @param extensions a list of file extension, or null to set the filter to the system's default value	__label__NullSemanticsDirective
 the actions String is currently unused and should be null	__label__NullSemanticsDirective
 If the number of formal parameters required by the underlying method is 0, the supplied args array may be of length 0 or null.	__label__NullSemanticsDirective
 @param coll the collection to check, may be null	__label__NullSemanticsDirective
 Specify null to omit the parameter.	__label__NullSemanticsDirective
 If the Guard object is null, then no restrictions will be placed on who can access the object.	__label__NullSemanticsDirective
 @param array The array to convert; may be null	__label__NullSemanticsDirective
 @param output an OutputStream, may be null	__label__NullSemanticsDirective
 The port must be non-zero.	__label__NumberRangeDirective
 so this argument must not be negative, but is otherwise ignored	__label__NumberRangeDirective
 Hours must be between 0 and 23, and Minutes must be between 00 and 59. The format is locale independent and digits must be taken from the Basic Latin block of the Unicode standard.	__label__NumberRangeDirective
 @param scale the desired number of digits to the right of the decimal point. It must be greater than or equal to zero.	__label__NumberRangeDirective
 The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case 0 is placed in all elements of the copy whose index is greater than or equal to original.length - from.	__label__NumberRangeDirective
 A valid reduction polynomial is either a trinomial (X^m + X^k + 1 with m > k >= 1) or a pentanomial (X^m + X^k3 + X^k2 + X^k1 + 1 with m > k3 > k2 > k1 >= 1), so ks should have length 1 or 3.	__label__NumberRangeDirective
 @param valueType the type of reference to use for values; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param valueType the type of reference to use for values; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param keyType the type of reference to use for keys; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 The count must be at least 1	__label__NumberRangeDirective
 @throws IllegalArgumentException { numBits} is negative.	__label__NumberRangeDirective
 @param kind the kind of dialog to open, one of {@link #ERROR}, {@link #INFORMATION}, {@link #QUESTION}, {@link #WARNING}, {@link #CONFIRM}, or {@link #QUESTION_WITH_CANCEL}.	__label__NumberRangeDirective
 Sets the cycling mode to either of CYCLING_ALWAYS, CYCLING_NEVER, or CYCLING_WHEN_NO_PARENT, which is the default.	__label__NumberRangeDirective
 A valid port value is between 0 and 65535.	__label__NumberRangeDirective
 @param month the month value between 0-11	__label__NumberRangeDirective
 The named program must be able to accept multiple -Dpropname=value options (as documented for the "java" tool)	__label__StringFormatDirective
 The characters in the string must all be decimal digits, except that the first character may be an ASCII minus sign '-' ('\u002D') to indicate a negative value	__label__StringFormatDirective
 @param name the name of this SQLPermission object, which must be setLog	__label__StringFormatDirective
 In this class octal escapes must always begin with a zero.	__label__StringFormatDirective
 This sequence of characters must represent a positive value	__label__StringFormatDirective
 If a scheme is given then the path, if also given, must either be empty or begin with a slash character ('/').	__label__StringFormatDirective
 The characters in the string must all be decimal digits, except that the first character may be an ASCII minus sign '-' ('\u002D') to indicate a negative value.	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 The specified provider must be registered in the security provider list.	__label__StringFormatDirective
 @param name A name for the logger. This should be a dot-separated name and should normally be based on the package name or class name of the subsystem, such as java.net or javax.swing.	__label__StringFormatDirective
 Note that a comment line cannot be extended in this manner; every natural line that is a comment must have its own comment indicator, as described below.	__label__StringFormatDirective
 The rest of s should constitute a FloatValue as described by the lexical syntax rules: FloatValue: Signopt NaN Signopt Infinity Signopt FloatingPointLiteral Signopt HexFloatingPointLiteral SignedInteger HexFloatingPointLiteral: HexSignificand BinaryExponent FloatTypeSuffixopt HexSignificand: HexNumeral HexNumeral . 0x HexDigitsopt . HexDigits 0X HexDigitsopt . HexDigits BinaryExponent: BinaryExponentIndicator SignedInteger BinaryExponentIndicator: p P where Sign, FloatingPointLiteral, HexNumeral, HexDigits, SignedInteger and FloatTypeSuffix are as defined in the lexical structure sections of the of the Java Language Specification.	__label__StringFormatDirective
 The behavior of aforementioned conversion process can be adjusted by various flags:      If the ALLOW_UNASSIGNED flag is used, the domain name string to be converted can contain code points that are unassigned in Unicode 3.2, which is the Unicode version on which IDN conversion is based. If the flag is not used, the presence of such unassigned code points is treated as an error.     If the USE_STD3_ASCII_RULES flag is used, ASCII strings are checked against RFC 1122 and RFC 1123. It is an error if they don't meet the requirements.	__label__StringFormatDirective
 @param encodedKey the key, which is assumed to be encoded according to the PKCS #8 standard.	__label__StringFormatDirective
 @param currencyCode the ISO 4217 currency code, which consists of three upper-case letters between 'A' (U+0041) and 'Z' (U+005A)	__label__StringFormatDirective
 @param obj the server object for which a stub is required. must either be a subclass of PortableRemoteObject	__label__MethodParameterTypeDirective
 The CertPath specified must be of a type that is supported by the validation algorithm, otherwise an InvalidAlgorithmParameterException will be thrown.	__label__MethodParameterTypeDirective
 All elements in the collection must be mutually comparable by the specified comparator (that is, comp.compare(e1, e2) must not throw a ClassCastException for any elements e1 and e2 in the collection).	__label__MethodParameterTypeDirective
 All elements in the list must be mutually comparable using the specified comparator (that is, c.compare(e1, e2) must not throw a ClassCastException for any elements e1 and e2 in the list).	__label__MethodParameterTypeDirective
 @param node the node to add, which must implement IPreferenceNode	__label__MethodParameterTypeDirective
 All of the keys in an enum map must come from a single enum type that is specified, explicitly or implicitly, when the map is created.	__label__MethodParameterTypeDirective
 The key must implement Comparable.	__label__MethodParameterTypeDirective
 @throws IllegalArgumentException if the constructor doesn't exist	__label__MethodParameterTypeDirective
 The class is loaded using the default system class loader and must define a public constructor that takes a single parameter of type ClassLoader which is used as the delegation parent.	__label__MethodParameterTypeDirective
 The second argument must be an object type; for integral values, the java.lang equivalent objects should be used	__label__MethodParameterTypeDirective
 Any attempt to insert an element of the wrong type will result in an immediate ClassCastException.	__label__MethodParameterTypeDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__MethodParameterCorrelationDirective
 @param types a list of table types, which must be from the list of table types returned from {@link #getTableTypes}	__label__MethodParameterCorrelationDirective
 The initial index of the range (from) must lie between zero and original.length, inclusive.	__label__MethodParameterCorrelationDirective
 The inputstream must contain the number of characters specified by length, otherwise a SQLException will be generated when the CallableStatement is executed.	__label__MethodParameterCorrelationDirective
 The reader must contain the number of characters specified by length otherwise a SQLException will be generated when the CallableStatement is executed.	__label__MethodParameterCorrelationDirective
 Once an AlgorithmParameters object is obtained, it must be initialized via a call to init, using an appropriate parameter specification or parameter encoding.	__label__Post-CallDirective
 The return value should always be checked to make sure that the rename operation was successful.	__label__Post-CallDirective
 If getKey() or getValue() returns null, it means the mapping is stale and should be removed.	__label__Post-CallDirective
 After the use of the context, clients are required to call its dispose method.	__label__Post-CallDirective
 @return the corresponding widget, or null if none	__label__Post-CallDirective
 The atomic classes also support method weakCompareAndSet, which has limited applicability. On some platforms, the weak version may be more efficient than compareAndSet in the normal case, but differs in that any given invocation of the weakCompareAndSet method may return false spuriously (that is, for no apparent reason). A false return means only that the operation may be retried if desired, relying on the guarantee that repeated invocation when the variable holds expectedValue and no other thread is also attempting to set the variable will eventually succeed.	__label__ReturnValueDirective
 @return a ResultSet object that contains the data produced by the given query; never null	__label__ReturnValueDirective
 @return Read-only {@link Map} of the current conflicts. If no conflicts, then return an empty map. Never null	__label__ReturnValueDirective
 @return The array of active triggers (TriggerSequence) for a particular command identifier. This value is guaranteed to never be null, but it may be empty.	__label__ReturnValueDirective
 Returns an array of all locales for which the getInstance methods of this class can return localized instances. It must contain at least a Locale instance equal to {@link java.util.Locale#US Locale.US}.	__label__ReturnValueDirective
 This value may be null if there is no extra information.	__label__ReturnValueDirective
 The computed result must be within 1 ulp of the exact result. If one parameter is held constant, the results must be semi-monotonic in the other parameter.	__label__ReturnValueDirective
 The computed result must be within 2.5 ulps of the exact result.	__label__ReturnValueDirective
 Note that there must be at least one nonzero digit in a subnormal significand.	__label__ReturnValueDirective
 The certificates supplied must be of a type supported by the CertificateFactory.	__label__ReturnValueDirective
 The driver should return "null" if it realizes it is the wrong kind of driver to connect to the given URL.	__label__ReturnValueDirective
 Subclasses that hook their own focus listener should override this method and return false.	__label__ReturnValueDirective
 The last element of the list must be a {@linkplain Locale#ROOT root locale} if it is desired to have the base bundle as the terminal of the parent chain.	__label__ReturnValueDirective
 Under these circumstances, however, all subsequent invocations of flush() and sync should return false, as returning true would imply that all previous operations had successfully been made permanent.	__label__ReturnValueDirective
 The implementer must ensure that the returned node has not been removed.	__label__ReturnValueDirective
 @return never	__label__ReturnValueDirective
 @return true if the range of characters requires bidi analysis	__label__ReturnValueDirective
 Gets the key from the entry. This method dereferences weak and soft keys and thus may return null. @return the key, which may be null if it was garbage collected	__label__ReturnValueDirective
 If the implementation distinguishes between user mode time and system mode time, the returned CPU time is the amount of time that the current thread has executed in user mode or system mode.	__label__ReturnValueDirective
 This field should not be referenced by subclasses.	__label__MethodCallVisibilityDirective
 Constructor only used in deserialization, do not use otherwise.	__label__MethodCallVisibilityDirective
 Constructor only used in deserialization,	__label__MethodCallVisibilityDirective
 Constructor only used in deserialization, do not use otherwise.	__label__MethodCallVisibilityDirective
 Application developers should only take notice of the methods defined in this MessageDigest class; all the methods in the superclass are intended for cryptographic service providers who wish to supply their own implementations of message digest algorithms	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL TIME values do not have a year component.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL TIME values do not have a date component.	__label__MethodCallVisibilityDirective
 This method is deprecated and should not be used because SQL Date values do not have a time component.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 Do neither call nor override.	__label__MethodCallVisibilityDirective
 After close has been called this Handler should no longer be used.	__label__MethodCallVisibilityDirective
 If {@link ICompletionProposalExtension5} is implemented, this method should not be called any longer.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: ConcurrentModificationException should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 This class may be instantiated;	__label__MethodCallVisibilityDirective
 @exception IOException if an I/O error occurs when binding this socket.	__label__ExceptionRaisingDirective
 @exception SQLException if a database access error occurs	__label__ExceptionRaisingDirective
 @exception SocketException if there is an error in the underlying protocol, such as an UDP error.	__label__ExceptionRaisingDirective
 @exception SecurityException If a security manager, s, is present and any of the following conditions is met:      invocation of {@link SecurityManager#checkMemberAccess s.checkMemberAccess(this, Member.PUBLIC)} denies access to the constructors within this class     the caller's class loader is not the same as or an ancestor of the class loader for the current class and invocation of {@link SecurityManager#checkPackageAccess s.checkPackageAccess()} denies access to the package of this class	__label__ExceptionRaisingDirective
 @throws IllegalArgumentException if end is before start @throws NullPointerException if array is null	__label__ExceptionRaisingDirective
 @throws SecurityException If a required system property value cannot be accessed.	__label__ExceptionRaisingDirective
 . @exception IOException if an I/O error occurs.	__label__ExceptionRaisingDirective
 @exception SQLException if the columnIndex is not valid; if a database access error occurs; the result set concurrency is CONCUR_READ_ONLY or this method is called on a closed result set @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @exception InvocationTargetException if the run method must propagate a checked exception, it should wrap it inside an InvocationTargetException; runtime exceptions and errors are automatically wrapped in an InvocationTargetException by this method @exception InterruptedException if the operation detects a request to cancel, using IProgressMonitor.isCanceled(), it should exit by throwing InterruptedException; this method propagates the exception	__label__ExceptionRaisingDirective
 @exception SQLException if a database access error occurs, this method is called on a closed Statement or the condition seconds >= 0 is not satisfied	__label__ExceptionRaisingDirective
 This exception must be thrown in a consistent fashion for synchronization to work correctly.	__label__ExceptionRaisingDirective
 @throws org.eclipse.swt.SWTException in these cases:      * {@link org.eclipse.swt.SWT#ERROR_WIDGET_DISPOSED} - if the receiver has been disposed     * {@link org.eclipse.swt.SWT#ERROR_THREAD_INVALID_ACCESS} - if not called from the thread that created the receiver	__label__ExceptionRaisingDirective
 @throws org.eclipse.swt.SWTException in these cases:      * {@link org.eclipse.swt.SWT#ERROR_WIDGET_DISPOSED} - if the receiver has been disposed     * {@link org.eclipse.swt.SWT#ERROR_THREAD_INVALID_ACCESS} - if not called from the thread that created the receiver	__label__ExceptionRaisingDirective
 @exception IOException if there is an I/O or format problem with the keystore data, if a password is required but not given, or if the given password was incorrect. If the error is due to a wrong password, the {@link Throwable#getCause cause} of the IOException should be an UnrecoverableKeyException	__label__ExceptionRaisingDirective
 @throws FunctorException always	__label__ExceptionRaisingDirective
 @throws IllegalStateException implementations may, but are not required to, throw this exception if the entry has been removed from the backing map.	__label__ExceptionRaisingDirective
 @throws IllegalStateException if not all the elements can be added at this time due to insertion restrictions	__label__ExceptionRaisingDirective
 @exception SQLException if the columnIndex is not valid; if a database access error occurs; the result set concurrency is CONCUR_READ_ONLY or this method is called on a closed result set @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @throws NullPointerException if toKey is null and this map does not permit null keys @throws IllegalArgumentException if this map itself has a restricted range, and toKey lies outside the bounds of the range	__label__ExceptionRaisingDirective
 A client must use the VMID the garbage collector uses in order to make corresponding clean calls when the client drops remote object references	__label__MiscellaneousMethodCallDirective
 If subjectDN is not null, it should contain a single DER encoded distinguished name, as defined in X.501.	__label__MiscellaneousMethodCallDirective
 The range must be sorted into ascending order according to the {@linkplain Comparable natural ordering} of its elements (as by the {@link #sort(Object[], int, int)} method) prior to making this call	__label__MiscellaneousMethodCallDirective
 @param schemaPattern a schema name pattern; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param collectionFactory the collection factory which must return a Collection instance	__label__MiscellaneousMethodCallDirective
 @throws IllegalArgumentException if sub-array or entry matching used and an entry is invalid	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param schema a schema name; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param columnNamePattern a column name pattern; must match the column name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param chain an array of Certificates representing the certificate chain. The chain must be ordered and contain a Certificate at index 0 corresponding to the private key.	__label__MiscellaneousMethodCallDirective
 @param typeNamePattern a type name pattern; must match the type name as it is stored in the database; may be a fully qualified name	__label__MiscellaneousMethodCallDirective
 @param limits contains the top value that you want parsed with that format,and should be in ascending sorted order.	__label__MiscellaneousMethodCallDirective
 If the token's data is not null and a string it is assumed that it is the encoded content type.	__label__MiscellaneousMethodCallDirective
 Otherwise, if any of the following is true, an ArrayStoreException is thrown and the destination is not modified:      The src argument refers to an object that is not an array.     The dest argument refers to an object that is not an array.     The src argument and dest argument refer to arrays whose component types are different primitive types.     The src argument refers to an array with a primitive component type and the dest argument refers to an array with a reference component type.     The src argument refers to an array with a reference component type and the dest argument refers to an array with a primitive component type.   Otherwise, if any of the following is true, an IndexOutOfBoundsException is thrown and the destination is not modified:      The srcPos argument is negative.     The destPos argument is negative.     The length argument is negative.     srcPos+length is greater than src.length, the length of the source array.     destPos+length is greater than dest.length, the length of the destination array.   Because of the restrictions already itemized, this paragraph effectively applies only to the situation where both arrays have component types that are reference types.	__label__MiscellaneousMethodCallDirective
 The parent composite is assumed to use GridLayout as its layout manager, since the parent is typically the composite created in {@link Dialog#createDialogArea}.	__label__MiscellaneousMethodCallDirective
 If the token's data is not null and a text attribute it is assumed that it is the encoded text attribute.	__label__MiscellaneousMethodCallDirective
 Clients are not permitted to extend this class.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface, but must not extend.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be called or extended by any external clients.	__label__ExtensibleClassIdentificationDirective
 it is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 This class is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 @noextend This interface is not intended to be extended by clients.	__label__ExtensibleClassIdentificationDirective
 Implementors can extend	__label__ExtensibleClassIdentificationDirective
 Clients can subclass to provide additional proposals in case they are supported by their own find/replace mechanism.	__label__ExtensibleClassIdentificationDirective
 Clients should subclass	__label__ExtensibleClassIdentificationDirective
 Clients are encouraged to subclass {@link AbstractInformationControl}, which does this for free.	__label__ExtensibleClassIdentificationDirective
 This interface may be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 Clients are expected to implement this interface in order to create a particular kind of control for decoration.	__label__ExtensibleClassIdentificationDirective
 The other way to create a thread is to declare a class that implements the Runnable interface. That class then implements the run method. An instance of the class can then be allocated, passed as an argument when creating Thread, and started.	__label__ExtensibleClassIdentificationDirective
 The interface can be implemented by clients.	__label__ExtensibleClassIdentificationDirective
 Implement this method to draw a graphical representation of this annotation within the given bounds.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 Content providers for table tree viewers must implement the ITreeContentProvider interface.	__label__ExtensibleClassIdentificationDirective
 Subclasses may implement actions on top of BasicPermission, if desired.	__label__ExtensibleClassIdentificationDirective
 Subclasses may extend or override.	__label__MethodOverridingDirective
 Subclasses may extend or reimplement.	__label__MethodOverridingDirective
 Subclasses may override to handle other buttons	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 handleFontChange- reimplement to respond to font changes	__label__MethodOverridingDirective
 handleShellCloseEvent- extend or reimplement to handle shell closings	__label__MethodOverridingDirective
 Subclasses may replace or extend.	__label__MethodOverridingDirective
 Subclasses may reimplement or extend.	__label__MethodOverridingDirective
 Clients may reimplement this method.	__label__MethodOverridingDirective
 Subclasses may reimplement.	__label__MethodOverridingDirective
 An applet should override this method to return an array of Strings describing these parameters.	__label__MethodOverridingDirective
 if the programmer desires thread-local variables to have an initial value other than null, ThreadLocal must be subclassed, and this method overridden.	__label__MethodOverridingDirective
 Subclasses may override if required.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses should override.	__label__MethodOverridingDirective
 Subclasses may override this method.	__label__MethodOverridingDirective
 Subclasses should override this method when an alternate default location is desired, rather than overriding {@link #getInitialLocation(Point)}	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses should override to take some action in response to a help request.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses must implement this method.	__label__MethodOverridingDirective
 Subclasses should override this method if they want to change the font of the SWT control to a value different than the standard dialog font.	__label__MethodOverridingDirective
 Subclasses wishing to perform validation should override both this method and isValid.	__label__MethodOverridingDirective
 May be overridden by subclasses.	__label__MethodOverridingDirective
 Subclasses that intend to support efficient single-character output should override this method.	__label__MethodOverridingDirective
 Subclasses may override this method to customize the tool bar manager.	__label__MethodOverridingDirective
 Subclasses may override this method to customize the cool bar manager.	__label__MethodOverridingDirective
 Subclasses may override this method to customize the menu manager.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 For providing the label's styles, create a subclass and overwrite {@link StyledCellLabelProvider#update(ViewerCell)} to return set all information needed to render a element.	__label__MethodOverridingDirective
 Subclasses that support fields should override this and create an AttributedCharacterIterator with meaningful attributes.	__label__MethodOverridingDirective
 Knowledgeable providers should override this method.	__label__MethodOverridingDirective
 Subclasses should override this method with a correct implementation.	__label__MethodOverridingDirective
 Subclasses must implement the select method and may implement the isFilterProperty method.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses that hook their own focus listener should override this method and return false.	__label__MethodOverridingDirective
 Sublcasses may override.	__label__MethodOverridingDirective
 If the list is variable-size the programmer must additionally override the {@link #add(int, Object) add(int, E)} and {@link #remove(int)} methods.	__label__MethodOverridingDirective
 Subclasses may want to override this behavior to remain consistent with the {@link Comparator#equals(Object) equals} contract.	__label__MethodOverridingDirective
 Subclasses can override this to create a different class.	__label__MethodOverridingDirective
 Override to validate an object set into the map via setValue.	__label__MethodOverridingDirective
 Subclasses can override this to return iterators with different properties.	__label__MethodOverridingDirective
 Classes for that connection type can override this method and short-circuit the parsing.	__label__MethodOverridingDirective
 Applications can override this method in subclasses of ThreadGroup to provide alternative handling of uncaught exceptions.	__label__MethodOverridingDirective
 This method may be overridden, though it typically isn't necessary or desirable.	__label__MethodOverridingDirective
 This method is not intended to be overridden by subclasses.	__label__MethodOverridingDirective
 This method is internal to the framework; it should not be implemented outside the framework.	__label__MethodOverridingDirective
 Subclasses should call the super implementation (which at this time is empty but may be changed in the future)	__label__MethodExtensionDirective
 Code overriding this method should call super.removeNotify as the first line of the overriding method.	__label__MethodExtensionDirective
 Subclasses of Component that override this method should either call super.update(g), or call paint(g) directly from their update method.	__label__MethodExtensionDirective
 They should also extend {@link #computeTrim()} if they create a content area with additional trim (e.g. scrollbars)	__label__MethodExtensionDirective
 overriding methods must invoke super.handleDispose	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkAwtEventQueueAccess at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkRead at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkWrite at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 Subclasses typically need not override this method, but may extend it (calling super.saveDialogBounds if additional bounds information should be stored.	__label__MethodExtensionDirective
 To preserve functionality, any further overrides of these methods in subclasses must invoke superclass versions, which effectively disables additional task customization.	__label__MethodExtensionDirective
 The field is initialized to false, but may be set to true by a subclass constructor (and should not be modified thereafter)	__label__CallContractSubclassingDirective
 The message, image and title should be updated by the subclass, if desired	__label__CallContractSubclassingDirective
 Subclasses are required to call {@link #create()} at the end of their constructor.	__label__CallContractSubclassingDirective
 Subclasses are required to call {@link #create()} at the end of their constructor.	__label__CallContractSubclassingDirective
 If you override this method, then you should make a call to super.checkRead at the point the overridden method would normally throw an exception.	__label__CallContractSubclassingDirective
 Likewise, {@link IInformationControl#addFocusListener(org.eclipse.swt.events.FocusListener)} should install listeners for {@link SWT#Activate} and {@link SWT#Deactivate} on the shell and forward events to the focus listeners.	__label__CallContractSubclassingDirective
 Note that it is the responsibility of the implementor to dispose of SWT menus it creates.	__label__CallContractSubclassingDirective
 This method must not modify the parent's layout.	__label__MethodImplementationDirective
 In other words, this method must allocate a new array	__label__MethodImplementationDirective
 Finally, the implementor must ensure that compare(x, y)==0 implies that sgn(compare(x, z))==sgn(compare(y, z)) for all z.	__label__MethodImplementationDirective
 Implementations are encouraged to make regular use of Assert.isNotNull to ensure that null parameters are detected as early as possible.	__label__MethodImplementationDirective
 A certificate/CRL-using system (an application validating a certificate/CRL) must reject the certificate/CRL if it encounters a critical extension it does not recognize. A non-critical extension may be ignored if it is not recognized.	__label__MethodImplementationDirective
 The agent should take care to ensure that the JAR does not contain any classes or resources other than those to be defined by the system class loader for the purpose of instrumentation. Failure to observe this warning could result in unexpected behaviour that is difficult to diagnose (see {@link #appendToBootstrapClassLoaderSearch appendToBootstrapClassLoaderSearch}.	__label__MethodImplementationDirective
 Implementations may, but are not required to, throw this exception if fromElement cannot be compared to elements currently in the set. @throws NullPointerException if fromElement is null and this set does not permit null elements	__label__MethodImplementationDirective
 All general-purpose sorted set implementation classes should provide four "standard" constructors:	__label__MethodImplementationDirective
 The only requirement enforced by this facility is that provider classes must have a zero-argument constructor so that they can be instantiated during loading.	__label__MethodImplementationDirective
 Further, those subclasses that might likely have a cause associated with them should have two more constructors, one that takes a Throwable (the cause), and one that takes a String (the detail message) and a Throwable (the cause).	__label__MethodImplementationDirective
 If no such object exists, the map should be "wrapped" using the {@link Collections#synchronizedMap Collections.synchronizedMap} method.	__label__MethodImplementationDirective
 This method should query if the state of the object permits it to be acquired in the shared mode, and if so to acquire it.	__label__MethodImplementationDirective
 Subclasses that change the layout type by overriding this method should also override createContents.	__label__Non-localConsistencySubclassingDirective
 By convention, classes that implement this interface should override Object.clone (which is protected) with a public method.	__label__Non-localConsistencySubclassingDirective
 As of 3.4, you should only call this method if you want to override the {@link JFacePreferences#CONTENT_ASSIST_BACKGROUND_COLOR}.	__label__Non-localConsistencySubclassingDirective
 As specified in {@link Object#equals(Object)} clients will most likely also have to implement {@link Object#hashCode()}.	__label__Non-localConsistencySubclassingDirective
 Enriching this information control only works properly if {@link IInformationControl#isFocusControl()} is implemented like this (fShell is the control's shell): return fShell.getDisplay().getActiveShell() == fShell	__label__Non-localConsistencySubclassingDirective
 All ReadWriteLock implementations must guarantee that the memory synchronization effects of writeLock operations (as specified in the {@link Lock} interface) also hold with respect to the associated readLock.	__label__Non-localConsistencySubclassingDirective
 Note that the ordering maintained by a set (whether or not an explicit comparator is provided) must be consistent with equals if it is to correctly implement the { Set} interface.	__label__Non-localConsistencySubclassingDirective
 @exception SQLException if the columnLabel is not valid; if a database access error occurs or this method is called on a closed result set @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__Non-localConsistencySubclassingDirective
 Subclasses should initialize this to a calendar appropriate for the locale associated with this DateFormat.	__label__MiscellaneousSubclassingDirective
 Subclasses should initialize this to a number format appropriate for the locale associated with this DateFormat.	__label__MiscellaneousSubclassingDirective
 Subclasses should not provide methods that can change the state of a permission once it has been created.	__label__MiscellaneousSubclassingDirective
 IPv4 address byte array must be 4 bytes long and IPv6 byte array must be 16 bytes long	__label__MiscellaneousSubclassingDirective
 After removing the object from the RMI runtime, the group must inform its ActivationMonitor (via the monitor's inactiveObject method) that the remote object is not currently active so that the remote object will be re-activated by the activator upon a subsequent activation request.	__label__MethodCallSequenceDirective
 This method must be called to release any resources associated with the stream.	__label__MethodCallSequenceDirective
 This method may only be called after initializeDialogUnits has been called.	__label__MethodCallSequenceDirective
 This method must be called before the thread is started.	__label__MethodCallSequenceDirective
 The execute method executes an SQL statement and indicates the form of the first result. You must then use the methods getResultSet or getUpdateCount to retrieve the result, and getMoreResults to move to any subsequent result(s).	__label__MethodCallSequenceDirective
 Before a keystore can be accessed, it must be {@link #load(java.io.InputStream, char[]) loaded}.	__label__MethodCallSequenceDirective
 This method can only be called after at least one {@link #next} method call.	__label__MethodCallSequenceDirective
 This is the ResourceBundle that should be used to localize the message string before formatting it.	__label__MethodCallSequenceDirective
 @throws IllegalStateException if next() has not yet been called	__label__MethodCallSequenceDirective
 However, you can't call this method on the same iterator more than once without calling next() or previous().	__label__MethodCallSequenceDirective
 @throws IllegalStateException if the next method has not yet been called, or the remove method has already been called after the last call to the next method.	__label__MethodCallSequenceDirective
 The context must be a security context returned by a previous call to getSecurityContext and the access control decision is based upon the configured security policy for that security context.	__label__MethodCallSequenceDirective
 If the matcher is to be used in further matching operations then it should first be reset.	__label__MethodCallSequenceDirective
 The recommended usage is to use {@link java.net.URI} to identify resources, then convert it into a {@link java.net.URL} when it is time to access the resource. From that URL, you can either get the {@link java.net.URLConnection} for fine control, or get directly the InputStream.  Here is an example:  URI uri = new URI("http://java.sun.com/"); URL url = uri.toURL(); InputStream in = url.openStream();	__label__MethodCallSequenceDirective
 It is strongly recommended that an application explicitly commits or rolls back an active transaction prior to calling the close method.	__label__MethodCallSequenceDirective
 Note: the node is not visually expanded! You may have to call parent.setExpanded(true).	__label__MethodCallSequenceDirective
 This signature object is reset to its initial state (the state it was in after a call to one of the initSign methods) and can be reused to generate further signatures with the same private key.	__label__MethodCallSequenceDirective
 This method should only be called from the UI thread. If you are not on the UI thread then wrap the call with a PlatformUI.getWorkbench().getDisplay().synchExec() in order to guarantee the correct result.	__label__MethodCallSequenceDirective
 Adjust the bounds of the popup as necessary prior to opening the dialog.	__label__MethodCallSequenceDirective
 If this rules relies on a text pattern comprising a opening and a closing character sequence this method can also be called when the scanner is positioned already between the opening and the closing sequence. In this case, resume must be set to true.	__label__MethodCallSequenceDirective
 Once a socket has been closed, it is not available for further networking use (i.e. can't be reconnected or rebound). A new socket needs to be created.	__label__MethodCallSequenceDirective
 It is important not to use the original set after invoking this method, as it is a backdoor for adding untransformed objects.	__label__MethodCallSequenceDirective
 Usually, clients instantiate this class and configure it before using it.	__label__MethodCallSequenceDirective
 After free has been called, any attempt to invoke a method other than free will result in a SQLException being thrown.	__label__MethodCallSequenceDirective
 The first class defined in a package determines the exact set of certificates that all subsequent classes defined in that package must contain. The set of certificates for a class is obtained from the {@link java.security.CodeSource CodeSource} within the ProtectionDomain of the class. Any classes added to that package must contain the same set of certificates or a SecurityException will be thrown.	__label__NonCall-basedStateDirective
 For each certificate cert in a certification path certPath, cert.getType().equals(certPath.getType()) must be true.	__label__NonCall-basedStateDirective
 The keys should be immutable If they are not then they must not be changed after adding to the MultiKey. @	__label__NonCall-basedStateDirective
 This method should be used only when auto-commit mode has been disabled.	__label__NonCall-basedStateDirective
 This method should be used only when auto-commit has been disabled.	__label__NonCall-basedStateDirective
 This method should only be called by a thread that is the owner of this object's monitor.	__label__NonCall-basedStateDirective
 @return the dialog, after being closed by the user, which the client can only call getReturnCode() or getToggleState()	__label__NonCall-basedStateDirective
 If there is a security manager, then the calling context must have permission to connect to all of the URLs in the codebase URL path; otherwise, the current thread's context class loader will be used instead of the codebase loader.	__label__NonCall-basedStateDirective
 @param object the object to evaluate, should not be changed	__label__NonCall-basedStateDirective
 With strict parsing, inputs must match this object's format.	__label__NonCall-basedStateDirective
 @param key the key to set, must be the key of the map	__label__NonCall-basedStateDirective
 This requires LoggingPermission("control").	__label__NonCall-basedStateDirective
 The provider must be accessible from the same class loader that was initially queried to locate the configuration file; note that this is not necessarily the class loader from which the file was actually loaded.	__label__NonCall-basedStateDirective
 @exception SecurityException if a security manager exists and if the caller does not have LoggingPermission("control").	__label__NonCall-basedStateDirective
 The map will be empty after this call returns.	__label__NonCall-basedStateDirective
 Subclasses should override this method when an alternate default size is desired, rather than overriding {@link #getInitialSize()}.	__label__AlternativeDirective
 Because SO_RCVBUF is a hint, applications that want to verify what size the buffers were set to should call {@link #getReceiveBufferSize()}.	__label__AlternativeDirective
 Because SO_RCVBUF is a hint, applications that want to verify what size the buffers were set to should call {@link #getReceiveBufferSize()}.	__label__AlternativeDirective
 The {@link java.nio.charset.CharsetDecoder} class should be used when more control over the decoding process is required.	__label__AlternativeDirective
 Security note: If an application needs to read a password or other secure data, it should use {@link #readPassword()} or {@link #readPassword(String, Object...)} and manually zero the returned character array after processing to minimize the lifetime of sensitive data in memory.	__label__AlternativeDirective
 Subclassers should call setShellStyle to change this value, rather than overriding this method.	__label__AlternativeDirective
 Standard customers should not overwrite this method but {@link #getValue(Object)}	__label__AlternativeDirective
 Denigrated, use {@linkplain #setSubject(X500Principal)} or {@linkplain #setSubject(byte[])} instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.	__label__AlternativeDirective
 Denigrated, use {@linkplain #getSubject()} or {@linkplain #getSubjectAsBytes()} instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.	__label__AlternativeDirective
 If a new Character instance is not required, this method should generally be used in preference to the constructor {@link #Character(char)}, as this method is likely to yield significantly better space and time performance by caching frequently requested values.	__label__AlternativeDirective
 An application might use the activeCount method to get an estimate of how big the array should be,	__label__AlternativeDirective
 An application might use the activeCount method to get an estimate of how big the array should be	__label__AlternativeDirective
 The {@link java.nio.charset.CharsetDecoder} class should be used when more control over the decoding process is required.	__label__AlternativeDirective
 The {@link org.apache.commons.collections.set.ListOrderedSet ListOrderedSet} class provides an alternative approach, by wrapping an existing Set and retaining insertion order in the iterator.	__label__AlternativeDirective
 Note that CaseInsensitiveMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap(Map)}.	__label__AlternativeDirective
 Under many circumstances, linking Iterators together in this manner is more efficient (and convenient) than using nested for loops to extract a list.	__label__AlternativeDirective
 A map iterator is an efficient way of iterating over maps. There is no need to access the entry set or use Map Entry objects.	__label__AlternativeDirective
 In previous versions of this class, it was mandatory to close all cursor objects to avoid memory leaks. It is no longer necessary to call this close method; an instance of this class can now be treated exactly like a normal iterator.	__label__AlternativeDirective
 The following extension interfaces exist:      {@link org.eclipse.jface.text.IWidgetTokenOwnerExtension} since version 3.0 introducing priorities when requesting a widget token and thus replacing the non-prioritized scheme.	__label__AlternativeDirective
 Should be accessed through {@link #getLastNodeReturned()} to enforce this behaviour.	__label__AlternativeDirective
 If the object is of a class implementing the interface SQLData, the JDBC driver should call the method SQLData.writeSQL to write it to the SQL data stream. If, on the other hand, the object is of a class implementing Ref, Blob, Clob, NClob, Struct, java.net.URL, or Array, the driver should pass it to the database as a value of the corresponding SQL type.	__label__AlternativeDirective
 Standard implementations of common predicates are provided by {@link PredicateUtils}. These include true, false, instanceof, equals, and, or, not, method invokation and null testing.	__label__AlternativeDirective
 If no such object exists, the list should be "wrapped" using the {@link Collections#synchronizedList Collections.synchronizedList} method.	__label__AlternativeDirective
 Events are not generated when indirect descendants of this node are added or removed; a caller desiring such events must register with each descendant.	__label__AlternativeDirective
 Any color allocated in this manner must be disposed by calling {@link #destroyColor(RGB)}, or by an eventual call to {@link #dispose()}. {@link Color#dispose()} must never been called directly on the returned color.	__label__AlternativeDirective
 Clients should handle labelProviderChangedEvents for the given element to get the complete decoration.	__label__AlternativeDirective
 It is recommended that clients do not implement this interface but instead use the standard implementation of this interface, {@link TreeSelection}.	__label__AlternativeDirective
 This method is provided for backwards compatibility. It is recommended that getDefaultFontDataArray is used instead.	__label__AlternativeDirective
 The hash code of an array member-value is computed by calling the appropriate overloading of {@link java.util.Arrays#hashCode(long[]) Arrays.hashCode} on the value. (There is one overloading for each primitive type, and one for object reference types.)	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of setCharacterStream which takes a length parameter.	__label__AlternativeDirective
 Note that there is another method for efficiently processing the simultaneous addition of multiple elements.	__label__AlternativeDirective
 Note that the preferred way of re-initializing a preference to its default value is to call setToDefault.	__label__AlternativeDirective
 Typically you shouldn't use DateFormatSymbols directly. Rather, you are encouraged to create a date-time formatter with the DateFormat class's factory methods: getTimeInstance, getDateInstance, or getDateTimeInstance.	__label__AlternativeDirective
 If multiple threads access a map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally. (A structural modification is any operation that adds or deletes one or more mappings; merely changing the value associated with an existing key is not a structural modification.) This is typically accomplished by synchronizing on some object that naturally encapsulates the map. If no such object exists, the map should be "wrapped" using the {@link Collections#synchronizedSortedMap Collections.synchronizedSortedMap} method. This is best done at creation time, to prevent accidental unsynchronized access to the map:     SortedMap m = Collections.synchronizedSortedMap(new TreeMap(...));	__label__AlternativeDirective
 Note that there is another method for efficiently processing the simultaneous addition of multiple elements.	__label__AlternativeDirective
 If the old behavior is desired by subclasses, get the returned composite's layout data and set grabExcessVerticalSpace to true.	__label__AlternativeDirective
 The default CertPathBuilder type can be changed by setting the value of the "certpathbuilder.type" security property (in the Java security properties file) to the desired type.	__label__AlternativeDirective
 By default it looks in sun.net.www.content, but users can define a vertical-bar delimited set of class prefixes to search through in addition by defining the java.content.handler.pkgs property.	__label__AlternativeDirective
 When using a capacity-restricted queue, this method is generally preferable to {@link #add}, which can fail to insert an element only by throwing an exception.	__label__AlternativeDirective
 Note that this method is not synchronized!	__label__SynchronizationDirective
 This implementation is not synchronized. You can use {@link java.util.Collections#synchronizedMap} to provide synchronized access to a ReferenceMap. Remember that synchronization will not stop the garbage collecter removing entries.	__label__SynchronizationDirective
 @return a negative value on failure; zero if acquisition in shared mode succeeded but no subsequent shared-mode acquire can succeed; and a positive value if acquisition in shared mode succeeded and subsequent shared-mode acquires might also succeed, in which case a subsequent waiting thread must check availability.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking.	__label__SynchronizationDirective
 Subclass implementations of PermissionCollection should assume that they may be called simultaneously from multiple threads, and therefore should be synchronized properly.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize	__label__SynchronizationDirective
 Unless otherwise documented by a specific provider, threads that need to access a single CertPathValidator instance concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating a different CertPathValidator instance need not synchronize.	__label__SynchronizationDirective
 The iterators returned by the collection views of this class are not fail-fast. They will never raise a {@link java.util.ConcurrentModificationException}.	__label__SynchronizationDirective
 Note that CaseInsensitiveMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 Note that LinkedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 Note that LRUMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 Note that TransformedMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 If multiple threads access a linked list concurrently, and at least one of the threads modifies the list structurally, it must be synchronized externally.	__label__SynchronizationDirective
 Shutdown hooks run at a delicate time in the life cycle of a virtual machine and should therefore be coded defensively. They should, in particular, be written to be thread-safe and to avoid deadlocks insofar as possible. They should also not rely blindly upon services that may have registered their own shutdown hooks and therefore may themselves in the process of shutting down. Attempts to use other thread-based services such as the AWT event-dispatch thread, for example, may lead to deadlocks.	__label__SynchronizationDirective
 This method should only be called from the UI thread. If you are not on the UI thread then wrap the call with a PlatformUI.getWorkbench().getDisplay().synchExec() in order to guarantee the correct result.	__label__SynchronizationDirective
 Note that if your application creates its own custom activation group, a security manager must be set for that group	__label__MiscellaneousDirective
 Mailcap files must conform to the mailcap file specification	__label__MiscellaneousDirective
 The circumstances and the exception type must be documented by that { Lock} implementation.	__label__MiscellaneousDirective
 Typically, an exception will be thrown (such as {@link IllegalMonitorStateException}) and the implementation must document that fact.	__label__MiscellaneousDirective
 Users should cast the generic URLConnection to a JarURLConnection when they know that the URL they created is a JAR URL, and they need JAR-specific functionality. For example:   URL url = new URL("jar:file:/home/duke/duke.jar!/");  JarURLConnection jarConnection = (JarURLConnection)url.openConnection();  Manifest manifest = jarConnection.getManifest();	__label__MiscellaneousDirective
 @return the object fetched. The instanceof operator should be used to determine the specific kind of object returned.	__label__MiscellaneousDirective
 @serialData Overriding methods should use this tag to describe the data layout of this Externalizable object.	__label__MiscellaneousDirective
 A provider should document all the key specifications supported by its key factory	__label__MiscellaneousDirective
 Note that the default implementation is not very efficient and should be overridden if this class is implemented.	__label__MiscellaneousDirective
 Individual set implementations should clearly document any restrictions on the elements that they may contain.	__label__MiscellaneousDirective
 he number of buckets is inversely proportional to the chances for thread contention. The fewer buckets, the more chances for thread contention. The more buckets the fewer chances for thread contention.	__label__MiscellaneousDirective
 Valuable data should not be stored at this node as it is shared by all programs that use it.	__label__MiscellaneousDirective
 The add methods are affected by this class. Thus objects must be removed or searched for using their transformed form. For example, if the transformation converts Strings to Integers, you must use the Integer form to remove objects.	__label__MiscellaneousDirective
 To be portable, however, applications should always provide these values for user-defined and REF parameters.	__label__MiscellaneousDirective
 IDialogConstants is the interface for common dialog strings and ids used throughout JFace. It is recommended that you use these labels and ids whereever for consistency with the JFace dialogs.	__label__MiscellaneousDirective
 Due to the inherently imprecise nature of the result, it is recommended that this method only be used for informational purposes.	__label__MiscellaneousDirective
accessibleobject class base class field method constructor object	__label__nonDir
set password used create database connection rowset object given string object	__label__nonDir
return set field element	__label__nonDir
package implemented mime-based package processor enables interpretation creation optimized binary data within mime-based package format	__label__nonDir
parameter c collection collection checked containment collection return boolean true collection contains element specified collection	__label__nonDir
org/omg/corba/currentholder.java generated idl-to-java compiler portable version src/share/classes/org/omg/portableserver/corba.idl saturday july pdt	__label__nonDir
proc	__label__nonDir
return boolean true queue contains element	__label__nonDir
left-to-right run direction	__label__nonDir
return effectively unlimited stream pseudorandom long value	__label__nonDir
get singleton instance system clipboard interface clipboard facility provided native platform	__label__nonDir
information helper file see generated file helper file	__label__nonDir
creates image specified image producer	__label__nonDir
visit intersectiontype element calling visitunknown	__label__nonDir
activate object id	__label__nonDir
holder float	__label__nonDir
given fully qualified name class interface format returned getname method attempt locate load link class interface	__label__nonDir
example xml schema definition x schema x complextype name pea x choice maxoccurs unbounded x element name foo type x string x element name bar type x string x choice x complextype x element name foo type x int x schema	__label__nonDir
allpermission permission implies permission	__label__nonDir
class used explicitly specify value encoding input p oaep padding	__label__nonDir
condition interface describes condition variable may associated lock	__label__nonDir
related documentation overview tutorial example guide tool documentation please see writing event listener section java tutorial	__label__nonDir
information helper file see generated file helper file	__label__nonDir
method apply local object throw org.omg.corba.no_implement exception message locally contrained object	__label__nonDir
gridbaglayoutinfo utility class gridbaglayout layout manager	__label__nonDir
member interface reflects identifying information single member field method constructor	__label__nonDir
rmi remote method invocation	__label__nonDir
horizontal metric	__label__nonDir
provides interface diffie-hellman key defined rsa laboratory pkcs	__label__nonDir
set value designated parameter given object	__label__nonDir
signal error sort ha occurred reading writing jar file	__label__nonDir
return integer type affine transform fontrendercontext specified affinetransform.gettype	__label__nonDir
description copied class abstractborder	__label__nonDir
paintcontext maintains state particular paint operation	__label__nonDir
short ip address subnet mask broadcast address address ipv4 one	__label__nonDir
multiplexing ui used combine tableheaderuis	__label__nonDir
visit instance_init executable element calling defaultaction	__label__nonDir
check cast valid throw classcastexception	__label__nonDir
org/omg/corba/policylistholder.java generated idl-to-java compiler portable version src/share/classes/org/omg/portableserver/corba.idl saturday july pdt	__label__nonDir
return tool bar current ui	__label__nonDir
may also contain string describing exception	__label__nonDir
indicates whether object equal one	__label__nonDir
creates initially unselected toggle button specified image text	__label__nonDir
remove specified window state listener longer receives window event window	__label__nonDir
passed orbinitializer allowing register interceptor perform duty orb initializing	__label__nonDir
may also contain string describing exception	__label__nonDir
creates toolkit implementation menubar using specified peer interface	__label__nonDir
org/omg/corba/unknownuserexceptionholder.java generated idl-to-java compiler portable version corba.idl thursday august pm pdt	__label__nonDir
compatibility decomposition	__label__nonDir
defines api obtain dom document instance xml document	__label__nonDir
return raw glyph type code	__label__nonDir
visit float primitive type calling defaultaction	__label__nonDir
creates new instance multiple master font based detailed metric information	__label__nonDir
acquires exclusive mode aborting interrupted	__label__nonDir
return thickness strike-through line	__label__nonDir
management interface buffer pool example pool direct mapped buffer	__label__nonDir
notifies listener registered rowset object entire content changed	__label__nonDir
focus traversal done response component focus traversal key using container focustraversalpolicy	__label__nonDir
much depth offset properly calculate x location	__label__nonDir
atomically increment one current value field given object managed updater	__label__nonDir
thrown indicate http request need retried retried automatically due streaming mode enabled	__label__nonDir
description copied class component	__label__nonDir
link setlistener listener link getlistener	__label__nonDir
configuration data specifies keystores keystore domain	__label__nonDir
indicates whether designated column current row cachedrowset object ha updated	__label__nonDir
creates trayicon specified image	__label__nonDir
bound property name toggleclickcount	__label__nonDir
set current font	__label__nonDir
return array window state listener registered window	__label__nonDir
interface corresponds applet environment document containing applet applet document	__label__nonDir
class specifies set parameter used generating diffie-hellman system parameter use diffie-hellman key agreement	__label__nonDir
return column index dropped item placed table	__label__nonDir
interface supplied orb servant invocation time allows servant later retrieve outputstream returning invocation result	__label__nonDir
creates new instance jdbcrowset	__label__nonDir
parameter class xml digital signature	__label__nonDir
return editor used paint edit selected item jcombobox field	__label__nonDir
package generated iop codec idl interface definition	__label__nonDir
return window background color current theme	__label__nonDir
return renderer used display selected item jcombobox field	__label__nonDir
path searched bootstrap class loader platform specific mechanism locating class failed	__label__nonDir
alias iso_c2	__label__nonDir
return extended key code event	__label__nonDir
visit type element dispatching visit method specific kind type annotation_type class enum interface	__label__nonDir
return index specified component	__label__nonDir
default srgb space	__label__nonDir
return boolean whether text fractional metric mode used fontrendercontext	__label__nonDir
return menu foreground color current theme	__label__nonDir
name action send notification content field accepted	__label__nonDir
type common superinterface type java programming language	__label__nonDir
abstract class implementing imageinputstream interface	__label__nonDir
return shape whose interior corresponds visual representation glyphvector	__label__nonDir
implement characteriterator.first string	__label__nonDir
generated annotation used mark source code ha generated	__label__nonDir
alias iso_c5	__label__nonDir
exception indicates persistent storage failure example failure establish database connection corruption database	__label__nonDir
construct mousewheelevent object specified source component type modifier coordinate scroll type scroll amount wheel rotation	__label__nonDir
protected field implementation specific	__label__nonDir
encapsulates reason policy may invalid	__label__nonDir
mutablecallsite callsite whose target variable behaves like ordinary field	__label__nonDir
provides api server side data source access processing javatm programming language	__label__nonDir
insert specified element end deque	__label__nonDir
org/omg/corba/longseqhelper.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00 class definition ha modified conform following omg specification orb core defined corba formal/99-10-07 idl/java language mapping defined ptc/00-01-08	__label__nonDir
query specified temporal object	__label__nonDir
set designated parameter given short java programming language	__label__nonDir
provides user-defined exception badkind bound thrown method class typecode	__label__nonDir
description copied interface annotatedelement	__label__nonDir
table abbreviated stream often specified first writing abbreviated stream containing table application table fixed ahead time	__label__nonDir
information holder file see generated file holder file	__label__nonDir
return estimate number byte read skipped current underlying input stream without blocking next invocation method current underlying input stream	__label__nonDir
construct group descriptor us system default group implementation code location	__label__nonDir
constructor concrete subclass call us argument default value	__label__nonDir
first number range id used window event	__label__nonDir
description copied class abstractborder	__label__nonDir
helper wrongtransaction	__label__nonDir
grouplayout.sequentialgroup hgroup layout.createsequentialgroup sequential group turn contains two parallel group	__label__nonDir
org/omg/portableinterceptor/unknown.java	__label__nonDir
indicates filer detected attempt open file would violate guarantee provided filer	__label__nonDir
helper identifier	__label__nonDir
info.add_client_request_interceptor interceptor void post_init orbinitinfo info service doe need two init point	__label__nonDir
class also provide number method converting among primitive value well supporting standard method equal hashcode	__label__nonDir
set maximum number row jcombobox display	__label__nonDir
set designated parameter reader object	__label__nonDir
see typeelement distinction	__label__nonDir
visit constructor executable element calling defaultaction	__label__nonDir
multiplexing ui used combine colorchooseruis	__label__nonDir
creates new atomicreferencearray length element copied given array	__label__nonDir
return maximum number color toolkit support custom cursor palette	__label__nonDir
org/omg/iop/codecfactorypackage/unknownencoding.java	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
provides class interface general printing api	__label__nonDir
multiplexing ui used combine labeluis	__label__nonDir
org/omg/cosnaming/namingcontextpackage/notemptyhelper.java	__label__nonDir
cancel deletion current row notifies listener row ha changed	__label__nonDir
however indefinite amount time may elapse time-out detected thread actually executing time-out	__label__nonDir
multi-buffering useful rendering performance	__label__nonDir
constant sundanese unicode character block	__label__nonDir
class defines service provider interface spi messagedigest class provides functionality message digest algorithm md5 sha	__label__nonDir
optional interface may provided service provider object registered serviceregistry	__label__nonDir
jdk version replaced font method getlinemetrics	__label__nonDir
constant phonetic extension supplement unicode character block	__label__nonDir
mapping corba enum tagging set_override add_override indicate whether policy replace existing policy object added	__label__nonDir
class add ability set jpeg quantization huffman table using built-in jpeg reader plug-in	__label__nonDir
constant lepcha unicode character block	__label__nonDir
implementation visit intersectiontype calling defaultaction	__label__nonDir
eventually set given value	__label__nonDir
handler buffer request circular buffer memory	__label__nonDir
override parent method nothing	__label__nonDir
argument memory-management hint orb doe imply actual length list	__label__nonDir
description copied class basicradiobuttonui	__label__nonDir
mouse dragged event	__label__nonDir
implementation	__label__nonDir
update linebreakmeasurer single character inserted text set current position beginning paragraph	__label__nonDir
retrieves syncprovider implementation cachedrowset object	__label__nonDir
constant latin-1 supplement unicode character block	__label__nonDir
class implement menu dynamically popped specified position within component	__label__nonDir
password-based implementation protectionparameter	__label__nonDir
creates new togglebutton model	__label__nonDir
weight glyph	__label__nonDir
set pressed state toggle button	__label__nonDir
scanning visitor program element default behavior appropriate release_7 source version	__label__nonDir
store x origin component return value rv return rv	__label__nonDir
cancel current editing session	__label__nonDir
creates opaque srgb color specified red green blue value range	__label__nonDir
aligns origin graphic hanging baseline line	__label__nonDir
request information accessible client-side request interceptor	__label__nonDir
multiplexing ui used combine scrollbaruis	__label__nonDir
return shape represents region graphicattribute render	__label__nonDir
retrieves remove head queue represented deque word first element deque	__label__nonDir
support reporting bound property change integer property	__label__nonDir
offsettime store time offset utc without date	__label__nonDir
set designated parameter given java float value	__label__nonDir
constant identifying exponent symbol field	__label__nonDir
modifiable list containing namedvalue object	__label__nonDir
creates new map mapping given map	__label__nonDir
last number range id used window event	__label__nonDir
class provides functionality key agreement key exchange protocol	__label__nonDir
helper definitionkind	__label__nonDir
constructor concrete subclass call	__label__nonDir
creates return updater object given field	__label__nonDir
set given number maximum number second driver wait query execute	__label__nonDir
class defines service provider interface spi keygenerator class	__label__nonDir
creates return paintcontext used generate tiled image pattern	__label__nonDir
support encryption includes symmetric asymmetric block stream cipher	__label__nonDir
cell used draw node	__label__nonDir
package specification agent deployed jar file	__label__nonDir
add specified popup menu component	__label__nonDir
desktop class allows java application launch associated application registered native desktop handle uri file	__label__nonDir
remove last occurrence specified element deque	__label__nonDir
helper idltype	__label__nonDir
property remember whether directory currently selected ui	__label__nonDir
url xml schema definition file defines xml tag valid value webrowset implementation	__label__nonDir
control whether field javabean property serialized default	__label__nonDir
return contextual shaper provided unicode range	__label__nonDir
helper repositoryid	__label__nonDir
see component detailed description property awt component share	__label__nonDir
creates new card layout gap size zero	__label__nonDir
contains rmi-iiop stub remote type occur java.rmi package	__label__nonDir
description copied class abstractborder	__label__nonDir
constant f2 function key	__label__nonDir
constant lycian unicode character block	__label__nonDir
