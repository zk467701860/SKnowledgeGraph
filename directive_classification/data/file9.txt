 @param pair the pair to copy, must not be null	__label__NotNullDirective
 May not be null	__label__NotNullDirective
 Note: You must specify the parameter's SQL type.	__label__NotNullDirective
 @param bindingManager The binding manager which will provide the callback; must not be null.	__label__NotNullDirective
 @param commandManager The command manager which will provide the callback; must not be null.	__label__NotNullDirective
 @param activeChecker The callback mechanism for checking whether a command is active; must not be null	__label__NotNullDirective
 @param lock the lock to use, must not be null	__label__NotNullDirective
 @param collection the collection to decorate, must not be null	__label__NotNullDirective
 @param lock the lock to use, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map or factory is null	__label__NotNullDirective
 @throws IllegalArgumentException if bag is null	__label__NotNullDirective
 @param bag the bag to decorate, must not be null	__label__NotNullDirective
 @param coll the collection to decorate, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if list is null	__label__NotNullDirective
 @param list the list to decorate, must not be null	__label__NotNullDirective
 @throws IllegalArgumentException if map is null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param pair the pair to copy, must not be null	__label__NotNullDirective
 @throws NullPointerException if the entry is null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @throws NullPointerException if name is null.	__label__NotNullDirective
 @throws NullPointerException if either parameter is null	__label__NotNullDirective
 @param coll the collection to decorate, must not be null	__label__NotNullDirective
 @param buffer the buffer to decorate, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param transformer the transformer to use for conversion, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param set the set to decorate, must not be null	__label__NotNullDirective
 @param a the first (sub?) collection, must not be null	__label__NotNullDirective
 @param bag the bag to predicate, must not be null	__label__NotNullDirective
 @throws FunctorException if input is null	__label__NotNullDirective
 @param predicate the predicate used to evaluate when the loop terminates, not null	__label__NotNullDirective
 @param predicate the predicate to use as an end of loop test, not null	__label__NotNullDirective
 @throws NullPointerException if the key is null and the composited map does not not permit null keys (optional).	__label__NotNullDirective
 @throws IllegalArgumentException if bag is null	__label__NotNullDirective
 @throws NullPointerException if the key or value is null and null is invalid	__label__NotNullDirective
 @param map the map to populate, must not be null	__label__NotNullDirective
 This implementation uses the equals method and assumes neither key is null.	__label__NotNullDirective
 @param enumeration the enumeration to traverse, which should not be null.	__label__NotNullDirective
 . @param buffer the buffer to synchronize, must not be null	__label__NotNullDirective
 @param transformer the transformer for the bag, must not be null	__label__NotNullDirective
 @param get to wrap, must not be null	__label__NotNullDirective
 @param factory the factory for creating new objects, must not be null	__label__NotNullDirective
 @param map the map to decorate, must not be null	__label__NotNullDirective
 @param map the map whose size to fix, must not be null	__label__NotNullDirective
 @param buffer the buffer to make bounded, must not be null	__label__NotNullDirective
 @param set the set to order, must not be null	__label__NotNullDirective
 @param closures matching array of closures, cloned, no nulls	__label__NotNullDirective
 @param transformers the transformers to chain, copied, no nulls	__label__NotNullDirective
 @param closure the closure to run each time in the transformer, not null	__label__NotNullDirective
 The map must not be null and should be empty or only contain valid keys.	__label__NotNullDirective
 @param parent The composite in which the toggle button should be placed; must not be null.	__label__NotNullDirective
 @param predicate1 the first predicate, may not be null	__label__NotNullDirective
 null means that the schema name should not be used to narrow the search	__label__NullSemanticsDirective
 If null, the current time is used.	__label__NullSemanticsDirective
 If subjectDN is not null, it should contain a single DER encoded distinguished name, as defined in X.501.	__label__NullSemanticsDirective
 If issuerDN is not null, it should contain a single DER encoded distinguished name, as defined in X.501.	__label__NullSemanticsDirective
 @param transformer the transformer to use, null will use a no effect transformer	__label__NullSemanticsDirective
 @param keyPredicate the predicate to validate the keys, null means no check	__label__NullSemanticsDirective
 @param keyPredicate the predicate to validate the keys, null means no check	__label__NullSemanticsDirective
 @param valuePredicate the predicate to validate to values, null means no check	__label__NullSemanticsDirective
 @param comparator the comparator used to order the elements, null means use natural order	__label__NullSemanticsDirective
 @param transformer the transformer to run each time in the closure, null means nop	__label__NullSemanticsDirective
 @param defaultTransformer the default to call if no predicate matches, null means return null	__label__NullSemanticsDirective
 @param list1 the first list, may be null	__label__NullSemanticsDirective
 Specifying a handler of null indicates that the URL should use a default stream handler for the protocol, as outlined for: java.net.URL#URL(java.lang.String, java.lang.String, int, java.lang.String)	__label__NullSemanticsDirective
 @param actions should be null.	__label__NullSemanticsDirective
 @param collection the collection to get the input from, may be null @param predicate the predicate to use as a filter, may be null	__label__NullSemanticsDirective
 @param predicate the predicate to use, may be null	__label__NullSemanticsDirective
 If the number of copies to remove is greater than the actual number of copies in the Bag, no error is thrown.	__label__NumberRangeDirective
 @param size the number of log records to buffer (must be greater than zero)	__label__NumberRangeDirective
 @param maximumSize the maximum size, must be size one or greater	__label__NumberRangeDirective
 @param valueType the type of reference to use for values; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param keyType the type of reference to use for keys; must be {@link #HARD}, {@link #SOFT}, {@link #WEAK}	__label__NumberRangeDirective
 @param nLines the number of lines to be reverted, must be > 0.	__label__NumberRangeDirective
 tive - Parameter: too vague): @param actions Must be either null or the empty string	__label__StringFormatDirective
 An IPv6 address must be enclosed in square brackets ('[' and ']') as specified by RFC 2732. The IPv6 address itself must parse according to RFC 2373.	__label__StringFormatDirective
 This sequence of characters must represent a positive value	__label__StringFormatDirective
 This sequence of characters must represent a positive value	__label__StringFormatDirective
 @param name the name of this SQLPermission object, which must be setLog	__label__StringFormatDirective
 The formats must be equal to one of {@link Control#FORMAT_PROPERTIES}, {@link Control#FORMAT_CLASS} or {@link Control#FORMAT_DEFAULT}.	__label__StringFormatDirective
 The class name must be of the form: {package-prefix}.{major}.{minor} e.g. YoyoDyne.experimental.text.plain	__label__StringFormatDirective
 The algorithm name should be a standard name. See Appendix A in the Java Cryptography Architecture API Specification & Reference for information about standard algorithm names.	__label__StringFormatDirective
 Note that there must be at least one nonzero digit in a subnormal significand.	__label__StringFormatDirective
 To be portable, however, applications should always provide these values for user-defined and REF parameters.	__label__StringFormatDirective
 @param name A name for the logger. This should be a dot-separated name and should normally be based on the package name or class name of the subsystem, such as java.net or javax.swing	__label__StringFormatDirective
 hed string formats for those types (subject to the restrictions included in RFC 2459). IPv4 address names are supplied using dotted quad notation. OID address names are represented as a series of nonnegative integers separated by periods. And directory names (distinguished names) are supplied in RFC 2253 format. No standard string format is defined for otherNames, X.400 names, EDI party names, IPv6 address names, or any other type of names. They should be specified using the {@link #addSubjectAlternativeName(int type, byte [] name) addSubjectAlternativeName(int type, byte [] name)} method.	__label__StringFormatDirective
 Other strings starting with "java." are reserved for future extensions and must not be used for application-defined formats.	__label__StringFormatDirective
 Any URL that ends with a '/' is assumed to refer to a directory. Otherwise, the URL is assumed to refer to a JAR file which will be opened as needed.	__label__StringFormatDirective
 This method can handle both label and entire domain name, by assuming that labels in a domain name are always separated by dots.	__label__StringFormatDirective
 Compares this URI to another object, which must be a URI.	__label__MethodParameterTypeDirective
 The CertPath specified must be of a type that is supported by the validation algorithm, otherwise an InvalidAlgorithmParameterException will be thrown.	__label__MethodParameterTypeDirective
 Furthermore, all elements in the collection must be mutually comparable (that is, e1.compareTo(e2) must not throw a ClassCastException for any elements e1 and e2 in the collection).	__label__MethodParameterTypeDirective
 The first element of each pair is the key, which must be a String, and the second element is the value associated with that key.	__label__MethodParameterTypeDirective
 @param obj the object to be serialized (must be serializable)	__label__MethodParameterTypeDirective
 Exceptions are thrown for problems with the OutputStream and for classes that should not be serialized. All exceptions are fatal to the OutputStream, which is left in an indeterminate state, and it is up to the caller to ignore or recover the stream state. @throws InvalidClassException Something is wrong with a class used by serialization. @throws NotSerializableException Some object to be serialized does not implement the java.io.Serializable interface.	__label__MethodParameterTypeDirective
 All keys inserted into a sorted map must implement the Comparable interface (or be accepted by the specified comparator).	__label__MethodParameterTypeDirective
 The destination list must be at least as long as the source list.	__label__MethodParameterCorrelationDirective
 @throws IllegalArgumentException if end is before start	__label__MethodParameterCorrelationDirective
 The reader must contain the number of characters specified by length otherwise a SQLException will be generated when the PreparedStatement is executed.	__label__MethodParameterCorrelationDirective
 If the given key is of type java.security.PrivateKey, it must be accompanied by a certificate chain certifying the corresponding public key.	__label__MethodParameterCorrelationDirective
 If the protected key is of type java.security.PrivateKey, it must be accompanied by a certificate chain certifying the corresponding public key.	__label__MethodParameterCorrelationDirective
 When using the 'nowrap' option it is also necessary to provide an extra "dummy" byte as input. This is required by the ZLIB native library in order to support certain optimizations.	__label__MethodParameterCorrelationDirective
 In a simple case, a partition token scanner must always start at a partition boundary.	__label__MethodParameterCorrelationDirective
 The keys should be immutable If they are not then they must not be changed after adding to the MultiKey.	__label__Post-CallDirective
 The returned image must be explicitly disposed using the image's dispose call.	__label__Post-CallDirective
 The image is owned by the label provider and must not be disposed directly.	__label__Post-CallDirective
 Creates an image, given an image descriptor. Images allocated in this manner must be disposed by {@link #destroyImage(ImageDescriptor)}, and never by calling {@link Image#dispose()}.	__label__Post-CallDirective
 Note: Even if returnMissingImageOnError is true, it is still possible for this method to return null in extreme cases, for example if SWT runs out of image handles.	__label__Post-CallDirective
 These Map.Entry objects are valid only for the duration of the iteration; more formally, the behavior of a map entry is undefined if the backing map has been modified after the entry was returned by the iterator, except through the setValue operation on the map entry.	__label__Post-CallDirective
 @return The Xemacs formatter; never null.	__label__ReturnValueDirective
 @return a newly allocated Font (never null)	__label__ReturnValueDirective
 @return the button for the ID or null	__label__ReturnValueDirective
 @return the public key of the subject (never null)	__label__ReturnValueDirective
 @return The default formatter; never null.	__label__ReturnValueDirective
 @return The child nodes; may be null, but never empty.	__label__ReturnValueDirective
 @return the font descriptor (never null)	__label__ReturnValueDirective
 @param iface A Class defining an interface that the result must implement	__label__ReturnValueDirective
 @param printerResolution an integer array of 3 elements. The first element must be greater than 0. The second element must be must be greater than 0. The third element must be either 3 or 4.	__label__ReturnValueDirective
 The returned set will contain the endpoints themselves, which may be identical but must not be out of order.	__label__ReturnValueDirective
 If a like-named child of this node was previously removed, the implementer must return a newly constructed AbstractPreferences node; once removed, an AbstractPreferences node cannot be "resuscitated."	__label__ReturnValueDirective
 The resulting proxy class must not exceed any limits imposed on classes by the virtual machine. For example, the VM may limit the number of interfaces that a class may implement to 65535; in that case, the size of the interfaces array must not exceed 65535.	__label__ReturnValueDirective
 If the declared return type of the interface method is a primitive type, then the value returned by this method must be an instance of the corresponding primitive wrapper class; otherwise, it must be a type assignable to the declared return type.	__label__ReturnValueDirective
 @return a new cursor iterator	__label__ReturnValueDirective
 If an exception type is a parameterized type, the Type object returned for it must accurately reflect the actual type parameters used in the source code.	__label__ReturnValueDirective
 Override to only return true when there is a value transformer.	__label__ReturnValueDirective
 The resulting file names must match exactly as strings with their occurrences in the JAR file.	__label__ReturnValueDirective
 However, the returned List must not be mutated after it has been returned by getFormats.	__label__ReturnValueDirective
 It is permitted for this method to modify the map directly, but if it does so, it must return false (indicating that the map should not attempt any further modification).	__label__ReturnValueDirective
 However, the returned List must not be mutated after it has been returned by getCandidateLocales.	__label__ReturnValueDirective
 Checks whether the map is currently empty, which it never is.	__label__ReturnValueDirective
 @return a suitable iterator, never null	__label__ReturnValueDirective
 To be equal, the other object must be a MultiKey with the same number of keys which are also equal.	__label__ReturnValueDirective
 The computed result must be within 2 ulps of the exact result. Results must be semi-monotonic.	__label__ReturnValueDirective
 By convention, the object returned by this method should be independent of this object (which is being cloned). To achieve this independence, it may be necessary to modify one or more fields of the object returned by super.clone before returning it.	__label__ReturnValueDirective
 @return the image to be shown or null if no image is desired	__label__ReturnValueDirective
 Returns the least key strictly greater than the given key, or { null} if there is no such key.	__label__ReturnValueDirective
 Constructor only used in deserialization, do not use otherwise.	__label__MethodCallVisibilityDirective
 This field should not be referenced by subclasses.	__label__MethodCallVisibilityDirective
 Constructor only used in deserialization, do not use otherwise.	__label__MethodCallVisibilityDirective
 Note that this class is abstract and extends from KeyPairGeneratorSpi for historical reasons. Application developers should only take notice of the methods defined in this KeyPairGenerator class; all the methods in the superclass are intended for cryptographic service providers who wish to supply their own implementations of key pair generators.	__label__MethodCallVisibilityDirective
 This method is public for performance reasons only, to avoid a clone.	__label__MethodCallVisibilityDirective
 This method is internal to the framework; subclassers should not call this method.	__label__MethodCallVisibilityDirective
 This support will likely be removed in Eclipse 3.3 in favor of proper support for multiple equal elements (which was implemented for AbtractTreeViewer in 3.2).	__label__MethodCallVisibilityDirective
 Note: In general, clients should use Calendar.get(ZONE_OFFSET) + Calendar.get(DST_OFFSET) instead of calling this method.	__label__MethodCallVisibilityDirective
 BufferUtils should not normally be instantiated.	__label__MethodCallVisibilityDirective
 CollectionUtils should not normally be instantiated.	__label__MethodCallVisibilityDirective
 Note, that although NodeChangeEvent inherits Serializable interface from java.util.EventObject, it is not intended to be Serializable.	__label__MethodCallVisibilityDirective
 Returns a printable representation of this wizard page suitable only for debug purposes.	__label__MethodCallVisibilityDirective
 @exception java.lang.IllegalArgumentException if this method is invoked	__label__MethodCallVisibilityDirective
 @noinstantiate This class is not intended to be instantiated by clients.	__label__MethodCallVisibilityDirective
 Application code should never directly reference this class	__label__MethodCallVisibilityDirective
 When a LogRecord is passed into the logging framework it logically belongs to the framework and should no longer be used or updated by the client application.	__label__MethodCallVisibilityDirective
 This class is for Preferences implementers only. Normal users of the Preferences facility should have no need to consult this documentation.	__label__MethodCallVisibilityDirective
 Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.	__label__MethodCallVisibilityDirective
 This concrete dialog class can be instantiated as is	__label__MethodCallVisibilityDirective
 The setFeedbackEnabled method can be called to turn on and off visual insertion feedback (on by default).	__label__MethodCallVisibilityDirective
 @exception java.io.IOException if an I/O error occurs. @exception java.io.StreamCorruptedException If already been called.	__label__ExceptionRaisingDirective
 @throws IOException if an I/O error occurs.	__label__ExceptionRaisingDirective
 @exception SocketException if there is an error in the underlying protocol, such as a TCP error.	__label__ExceptionRaisingDirective
 @exception IOException if an I/O error occurs.	__label__ExceptionRaisingDirective
 This method never throws an EOFException.	__label__ExceptionRaisingDirective
 @throws IOException if an IO error occurs	__label__ExceptionRaisingDirective
 @throws IOException if a file error occurs	__label__ExceptionRaisingDirective
 @exception IOException if an I/O error occurs.	__label__ExceptionRaisingDirective
 @exception EOFException if this input stream reaches the end before reading all the bytes. @exception IOException the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs. @exception UTFDataFormatException if the bytes do not represent a valid modified UTF-8 encoding of a string.	__label__ExceptionRaisingDirective
 # {@link org.eclipse.swt.SWT#ERROR_WIDGET_DISPOSED} - if the receiver has been disposed # {@link org.eclipse.swt.SWT#ERROR_THREAD_INVALID_ACCESS} - if not called from the thread that created the receiver	__label__ExceptionRaisingDirective
 @exception IllegalArgumentException if the given LoadStoreParameter input is not recognized @exception IOException if there is an I/O or format problem with the keystore data. If the error is due to an incorrect ProtectionParameter (e.g. wrong password) the {@link Throwable#getCause cause} of the IOException should be an UnrecoverableKeyException	__label__ExceptionRaisingDirective
 @throws IllegalMonitorStateException if releasing would place this synchronizer in an illegal state. This exception must be thrown in a consistent fashion for synchronization to work correctly.	__label__ExceptionRaisingDirective
 This exception must be thrown in a consistent fashion for synchronization to work correctly.	__label__ExceptionRaisingDirective
 Only explicit subtypes of this exception which correspond to specific errors should be instantiated.	__label__ExceptionRaisingDirective
 The predicate itself should not throw an exception, but return false to indicate that the object cannot be added.	__label__ExceptionRaisingDirective
 @throws IllegalArgumentException if endpoint is null or is a SocketAddress subclass not supported by this socket	__label__ExceptionRaisingDirective
 @throws IllegalArgumentException if this set itself has a restricted range, and toElement lies outside the bounds of the range	__label__ExceptionRaisingDirective
 @param x the new column value @exception SQLException if the columnLabel is not valid; if a database access error occurs; the result set concurrency is CONCUR_READ_ONLY or this method is called on a closed result set @exception SQLFeatureNotSupportedException if the JDBC driver does not support this method	__label__ExceptionRaisingDirective
 @param obj Must have been previously the target of a call to {@link #exportObject}.	__label__MiscellaneousMethodCallDirective
 The number of dimensions of the new array must not exceed the number of array dimensions supported by the implementation (typically 255).	__label__MiscellaneousMethodCallDirective
 All elements in the collection must implement the Comparable interface.	__label__MiscellaneousMethodCallDirective
 @param proxy the Proxy through which this connection will be made. If direct connection is desired, Proxy.NO_PROXY should be specified.	__label__MiscellaneousMethodCallDirective
 The address 224.0.0.0 is reserved and should not be used.	__label__MiscellaneousMethodCallDirective
 The range must be sorted (as by the {@link #sort(int[], int, int)} method) prior to making this call	__label__MiscellaneousMethodCallDirective
 The array must be sorted (as by the {@link #sort(double[])} method) prior to making this call.	__label__MiscellaneousMethodCallDirective
 The array must be sorted (as by the {@link #sort(float[])} method) prior to making this call	__label__MiscellaneousMethodCallDirective
 @param parentTable the name of the table that exports the key; must match the table name as it is stored in the database	__label__MiscellaneousMethodCallDirective
 @param foreignCatalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog;	__label__MiscellaneousMethodCallDirective
 @param collectionFactory the collection factory (must return a Collection object).	__label__MiscellaneousMethodCallDirective
 @param catalog a catalog name; must match the catalog name as it is stored in the database; "" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 @param schema a schema name; must match the schema name as it is stored in the database; "" retrieves those without a schema; null means that the schema name should not be used to narrow the search	__label__MiscellaneousMethodCallDirective
 Clients should normally use the predefined Level constants such as Level.SEVERE.	__label__MiscellaneousMethodCallDirective
 The array must be sorted (as by the {@link #sort(char[])} method) prior to making this call	__label__MiscellaneousMethodCallDirective
 Content provider that performs sorting and filtering in a background thread. Requires a TableViewer created with the SWT.VIRTUAL flag and an IConcurrentModel as input.	__label__MiscellaneousMethodCallDirective
 The input array is assumed to be in big-endian byte-order: the most significant byte is in the zeroth element.	__label__MiscellaneousMethodCallDirective
 Note that the parent's layout is assumed to be a GridLayout and the number of columns in this layout is incremented.	__label__MiscellaneousMethodCallDirective
 @param principal the principal, assumed to be a valid authenticated Principal.	__label__MiscellaneousMethodCallDirective
 Clients may neither instantiate this class nor extend.	__label__ExtensibleClassIdentificationDirective
 Clients may instantiate this class, but must not extend.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 It is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 it is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 @noextend This class is not intended to be subclassed by clients.	__label__ExtensibleClassIdentificationDirective
 it is not intended to be subclassed.	__label__ExtensibleClassIdentificationDirective
 Clients can also extend it in their own subclass.	__label__ExtensibleClassIdentificationDirective
 For example, dialogs which are very short, simple, and quick to dismiss (e.g. a message dialog with an OK button) should subclass Dialog.	__label__ExtensibleClassIdentificationDirective
 it may also be subclassed	__label__ExtensibleClassIdentificationDirective
 This concrete class was designed to be instantiated, but may also be subclassed if required.	__label__ExtensibleClassIdentificationDirective
 This class may be used as is, or subclassed to provide richer labels.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 Clients may implement this interface.	__label__ExtensibleClassIdentificationDirective
 New DateFormatSymbols subclasses may be added to support SimpleDateFormat for date-time formatting for additional locales.	__label__ExtensibleClassIdentificationDirective
 Subclasses may reimplement.	__label__MethodOverridingDirective
 Clients may extend this method.	__label__MethodOverridingDirective
 Subclasses may extend	__label__MethodOverridingDirective
 Subclasses may extend.	__label__MethodOverridingDirective
 Subclasses can override or extend.	__label__MethodOverridingDirective
 Subclasses may replace or extend.	__label__MethodOverridingDirective
 getInitialSize- reimplement to give the initial size for the shell	__label__MethodOverridingDirective
 getInitialLocation- reimplement to give the initial location for the shell	__label__MethodOverridingDirective
 Subclasses may replace or extend.	__label__MethodOverridingDirective
 Subclasses may override (extend or reimplement)	__label__MethodOverridingDirective
 Subclasses may implement the isSorterProperty method; they may reimplement the category method to provide categorization; and they may override the compare methods to provide a totally different way of sorting elements.	__label__MethodOverridingDirective
 Subclasses may reimplement this method to provide a more optimized implementation.	__label__MethodOverridingDirective
 Subclasses must implement createControl rather than overriding this method.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override this method.	__label__MethodOverridingDirective
 Subclasses should override this method when there are bounds computations that must be checked each time the dialog is opened.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override the performOk, performApply, performDefaults, performCancel, and performHelp framework methods to react to the standard button events.	__label__MethodOverridingDirective
 Subclasses must implement this method to properly initialize the field editor.	__label__MethodOverridingDirective
 May be extended by subclasses.	__label__MethodOverridingDirective
 May be extended by subclasses.	__label__MethodOverridingDirective
 Subclasses need to provide implementations for {@link #getTemplates(String)}, {@link #getContextType(ITextViewer, IRegion)} and {@link #getImage(Template)}.	__label__MethodOverridingDirective
 Subclasses may override.	__label__MethodOverridingDirective
 This interface is implemented by: SocketImpl and DatagramSocketImpl. Subclasses of these should override the methods of this interface in order to support their own options.	__label__MethodOverridingDirective
 Subclasses may override to use a different registry, etc.	__label__MethodOverridingDirective
 All subclasses which maintain state must support and override this method, if necessary.	__label__MethodOverridingDirective
 The management of a signer's private keys is an important and sensitive issue that should be handled by subclasses as appropriate to their intended use.	__label__MethodOverridingDirective
 . Subclasses may override.	__label__MethodOverridingDirective
 Subclasses may override	__label__MethodOverridingDirective
 Subclasses that hook their own focus listener should override this method and return false.	__label__MethodOverridingDirective
 Subclassers may override this method to do something when a viewer's input is set.	__label__MethodOverridingDirective
 If you override this method, then you should make a call to super.checkSecurityAccess at the point the overridden method would normally throw an exception.	__label__MethodOverridingDirective
 clients should overwrite {@link #apply(ITextViewer, char, int, int)}	__label__MethodOverridingDirective
 Clients may override, in particular, clients can return 0 to denote that two subsequent mouse clicks in a cell should not be interpreted as a double click.	__label__MethodOverridingDirective
 There are two ways to create a new thread of execution. One is to declare a class to be a subclass of Thread. This subclass should override the run method of class Thread.	__label__MethodOverridingDirective
 Override to validate the object being added to ensure it matches the predicate.	__label__MethodOverridingDirective
 Subclasses can override this, for example to use the identityHashCode.	__label__MethodOverridingDirective
 Subclasses can override this to return iterators with different properties.	__label__MethodOverridingDirective
 Subclasses should, if possible, override this with a more efficient implementation.	__label__MethodOverridingDirective
 Subclasses are encouraged to override this method and provide a more efficient implementation.	__label__MethodOverridingDirective
 The implementor may, at his discretion, override one or more of the concrete methods if the default implementation is unsatisfactory for any reason, such as performance.	__label__MethodOverridingDirective
 Clients may call this framework method, but should not override it.	__label__MethodOverridingDirective
 This method may only be called after initializeDialogUnits has been called.	__label__MethodOverridingDirective
 Clients may call this framework method, but should not override it.	__label__MethodOverridingDirective
 Clients may call this framework method, but should not override it.	__label__MethodOverridingDirective
 This method is internal to the framework; it should not be implemented outside the framework.	__label__MethodOverridingDirective
 Subclasses may extend this IContributionManager method, but must call super.update	__label__MethodExtensionDirective
 Subclasses should call super.performDefaults.	__label__MethodExtensionDirective
 Subclasses may wish to conditionally call super with a different location	__label__MethodExtensionDirective
 Subclasses can override or extend.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkSystemClipboardAccess at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkRead at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkWrite at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkMulticast at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkMulticast at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If you override this method, then you should make a call to super.checkPropertyAccess at the point the overridden method would normally throw an exception.	__label__MethodExtensionDirective
 If this method is overridden, then super.checkPackageAccess should be called as the first line in the overridden method. @param pkg the package name.	__label__MethodExtensionDirective
 Subclasses of Component that override this method should either call super.update(g), or call paint(g) directly from their update method.	__label__CallContractSubclassingDirective
 Thus this method is really only useful for subclasses to call in their constructor. However, it has public visibility for backward compatibility.	__label__CallContractSubclassingDirective
 When a proxy selector is registered, for instance, a subclass of URLConnection class should call the {@link #select select} method for each URL request so that the proxy selector can decide if a direct, or proxied connection should be used.	__label__CallContractSubclassingDirective
 Implementors should use the main font of the information control to do the characters-to-pixels conversion. This is typically the {@link JFaceResources#getDialogFont() dialog font}.	__label__CallContractSubclassingDirective
 Note that implementers need to ensure that getViewer().update(element, null) or similar methods are called, either directly or through some kind of listener mechanism on the implementer's model, to cause the new value to appear in the viewer.	__label__CallContractSubclassingDirective
 The first serializable subclass must call this method from readObject.	__label__CallContractSubclassingDirective
 If this constructor is used by a serializable subclass then the init() method must be called.	__label__CallContractSubclassingDirective
 In this case it is the responsibility of the subclass to save and restore the state of the non-serializable class.	__label__CallContractSubclassingDirective
 In other words, this method must allocate a new array	__label__MethodImplementationDirective
 If the scale is reduced by the operation, the unscaled value must be divided (rather than multiplied), and the value may be changed	__label__MethodImplementationDirective
 Instances of classes that implement this interface must implement an equals() method that equates any two instances that share the same generic type declaration and have equal type parameters.	__label__MethodImplementationDirective
 Note: By definition, the execution of positioned updates and deletes must be done by a different Statement object than the one that generated the ResultSet object being used for positioning.	__label__MethodImplementationDirective
 When a subclass is replacing objects it must insure that the substituted object is compatible with every field where the reference will be stored.	__label__MethodImplementationDirective
 For two URIs to be considered equal requires that either both are opaque or both are hierarchical. Their schemes must either both be undefined or else be equal without regard to case. Their fragments must either both be undefined or else be equal. For two opaque URIs to be considered equal, their scheme-specific parts must be equal. For two hierarchical URIs to be considered equal, their paths must be equal and their queries must either both be undefined or else be equal. Their authorities must either both be undefined, or both be registry-based, or both be server-based. If their authorities are defined and are registry-based, then they must be equal. If their authorities are defined and are server-based, then their hosts must be equal without regard to case, their port numbers must be equal, and their user-information components must be equal.	__label__MethodImplementationDirective
 Format subclasses that are aware of Field should give precedence to attribute and ignore fieldID if attribute is not null.	__label__MethodImplementationDirective
 The driver stores the value specified in a suitable location in the database. For example in a special register, session parameter, or system table column. For efficiency the driver may defer setting the value in the database until the next time a statement is executed or prepared. Other than storing the client information in the appropriate place in the database, these methods shall not alter the behavior of the connection in anyway. The values supplied to these methods are used for accounting, diagnostics and debugging purposes only.  The driver shall generate a warning if the client info name specified is not recognized by the driver.	__label__MethodImplementationDirective
 The initial owner Principal should be specified as an argument to the constructor of the class implementing this interface.	__label__MethodImplementationDirective
 Implementations should seek to avoid creating a new object every time this method is called. See AbstractMap.values() etc. Calling this method on the inverse map should return the original.	__label__MethodImplementationDirective
 If no such object exists, the map should be "wrapped" using the {@link Collections#synchronizedMap} method.	__label__MethodImplementationDirective
 This method should query if the state of the object permits it to be acquired in the shared mode, and if so to acquire it.	__label__MethodImplementationDirective
 This test must be fast and optimistic i.e. it is OK to return true even though there might be no quick fix.	__label__MethodImplementationDirective
 Every character inside the specified region is supposed to be visible in the viewer's widget after that call.	__label__MethodImplementationDirective
 Generally, a format's parseObject method must be able to parse any string formatted by its format method.	__label__Non-localConsistencySubclassingDirective
 However, the driver's behavior must be consistent with a particular DBMS, either always continuing to process commands or never continuing to process commands.	__label__Non-localConsistencySubclassingDirective
 Applications that override the clone method can also throw this exception to indicate that an object could not or should not be cloned.	__label__Non-localConsistencySubclassingDirective
 This strategy is ignored if the implementer does not also specify the dialog settings for storing the bounds in Dialog.getDialogBoundsSettings().	__label__Non-localConsistencySubclassingDirective
 The string must be in the same format as that produced by the {@link #toString} method.	__label__Non-localConsistencySubclassingDirective
 Subclasses may modify the parent's layout if they overload getLayout() to return null.	__label__Non-localConsistencySubclassingDirective
 Clients may implement this interface and override TextViewer.createDocumentAdapter if they want to intercept the communication between the viewer's text widget and the viewer's document.	__label__Non-localConsistencySubclassingDirective
 Overriding this method is generally not required if the number of different keys is small. If a more efficient representation of a viewer's properties is required, override both getData and setData.	__label__Non-localConsistencySubclassingDirective
 For a variable-size list the programmer should additionally implement the list iterator's remove and add methods.	__label__Non-localConsistencySubclassingDirective
 Returns the column properties of this viewer. The properties must correspond with the columns of the table control.	__label__Non-localConsistencySubclassingDirective
 After a call to this method, the method getWarnings returns null until a new warning is reported for this Connection object.	__label__Non-localConsistencySubclassingDirective
 Equivalent to insertBefore(id,new ActionContributionItem(action)).	__label__Non-localConsistencySubclassingDirective
 Subclasses of Number must provide methods to convert the represented numeric value to byte, double, float, int, long, and short.	__label__MiscellaneousSubclassingDirective
 Subclasses may set a different layout.	__label__MiscellaneousSubclassingDirective
 All CertPathBuilder implementations must include a class (the SPI class) that extends this class (CertPathBuilderSpi) and implements all of its methods.	__label__MiscellaneousSubclassingDirective
 Subclasses do not typically override this method, but implement getSelectionFromWidget(List) instead.	__label__MiscellaneousSubclassingDirective
 all of the methods and constructors in subclasses of this class must obey the additional constraints imposed by the Set interface	__label__MiscellaneousSubclassingDirective
 Any implementer of this interface must be capable of operating in a non-UI thread.	__label__MiscellaneousSubclassingDirective
 A return value of 0 indicates that needsInput() or needsDictionary() should be called	__label__MethodCallSequenceDirective
 Should be called when inflate() returns 0 and needsDictionary() returns true indicating that a preset dictionary is required.	__label__MethodCallSequenceDirective
 must be called during DropTargetListener.drop method invocation.	__label__MethodCallSequenceDirective
 Only listeners registered at the time this method is called are notified.	__label__MethodCallSequenceDirective
 The method initializeDialogUnits must be called once before calling this method for the first time.	__label__MethodCallSequenceDirective
 This method may only be called after initializeDialogUnits has been called.	__label__MethodCallSequenceDirective
 In the first case, the permission should be obtained after the object has been obtained.	__label__MethodCallSequenceDirective
 All OUT parameters must be registered before a stored procedure is executed.	__label__MethodCallSequenceDirective
 This method can only be called after at least one {@link #next} or {@link #previous} method call.	__label__MethodCallSequenceDirective
 This method should be called only once per result.	__label__MethodCallSequenceDirective
 For maximum portability, a call's ResultSet objects and update counts should be processed prior to getting the values of output parameters.	__label__MethodCallSequenceDirective
 Thus level settings for child nodes in the tree should come after settings for their parents.	__label__MethodCallSequenceDirective
 You will normally use {@link #addIterator(Iterator)} to add some iterators after using this constructor.	__label__MethodCallSequenceDirective
 The encoding should be set before any LogRecords are written to the Handler.	__label__MethodCallSequenceDirective
 This is set to -1 if neither method has yet been invoked.	__label__MethodCallSequenceDirective
 Constructs a new FilterIterator that will not function until {@link #setPredicate(Predicate) setPredicate} is invoked.	__label__MethodCallSequenceDirective
 Constructs a new FilterIterator that will not function until {@link #setIterator(Iterator) setIterator} is invoked.	__label__MethodCallSequenceDirective
 This must be called AFTER all of the child controls have been created and their layouts attached. This method will attach a layout to the given composite. If any new children are created after calling this method, their GridData must be created manually. The algorithm does not recurse into child composites. To generate all the layouts in a widget hierarchy, the method must be called bottom-up for each Composite.	__label__MethodCallSequenceDirective
 This method may be called repeatedly to iterate through the list backwards, or intermixed with calls to next to go back and forth. (Note that alternating calls to next and previous will return the same element repeatedly.)	__label__MethodCallSequenceDirective
 Note that the window will have no visual representation (no widgets) until it is told to open.	__label__MethodCallSequenceDirective
 Returns an SWT menu created as a drop down menu parented by the given menu. In most cases, this menu can be created once, cached and reused when the pop-up/drop-down action occurs.	__label__MethodCallSequenceDirective
 There are two cases to be aware of:      For sockets accepted from a ServerSocket, this must be done by calling {@link ServerSocket#setReceiveBufferSize(int)} before the ServerSocket is bound to a local address.      For client sockets, setReceiveBufferSize() must be called before connecting the socket to its remote peer.	__label__MethodCallSequenceDirective
 @throws IllegalStateException if this method is called more than once	__label__MethodCallSequenceDirective
 It is important not to use the original set after invoking this method, as it is a backdoor for adding invalid objects	__label__MethodCallSequenceDirective
 It is important not to use the original list after invoking this method, as it is a backdoor for adding untransformed objects.	__label__MethodCallSequenceDirective
 . After free has been called, any attempt to invoke a method other than free will result in a SQLException being thrown.	__label__MethodCallSequenceDirective
 This method should only be called by a thread that is the owner of this object's monitor.	__label__NonCall-basedStateDirective
 Note that a DefaultKeyValue instance may not contain itself as a key or value.	__label__NonCall-basedStateDirective
 FixedOrderComparators cannot be modified once they have performed a comparison.	__label__NonCall-basedStateDirective
 @throws IllegalStateException if remove() has already been called since the last call to next()	__label__NonCall-basedStateDirective
 This operation assumes that the inverse mapping is well defined.	__label__NonCall-basedStateDirective
 @throws UnsupportedOperationException if a comparison has already been made	__label__NonCall-basedStateDirective
 maximumFractionDigits must be >= minimumFractionDigits.	__label__NonCall-basedStateDirective
 @throws IllegalStateException if the array was set in the constructor	__label__NonCall-basedStateDirective
 The certificate representing the {@link TrustAnchor TrustAnchor} should not be included in the certification path.	__label__NonCall-basedStateDirective
 You must use a different iterator for each unit boundary analysis you wish to perform.	__label__NonCall-basedStateDirective
 Note that an image registry owns all of the image objects registered with it, and automatically disposes of them when the SWT Display is disposed. Because of this, clients must not register an image object that is managed by another object.	__label__NonCall-basedStateDirective
 Merges the given range into this presentation. The range must be a subrange of the presentation's default range.	__label__NonCall-basedStateDirective
 Replaces the given range in this presentation. The range must be a subrange of the presentation's default range.	__label__NonCall-basedStateDirective
 The new {@link #divide(BigDecimal, RoundingMode)} method should be used in preference to this legacy method.	__label__AlternativeDirective
 If a new Long instance is not required, this method should generally be used in preference to the constructor {@link #Long(long)}, as this method is likely to yield significantly better space and time performance by caching frequently requested values.	__label__AlternativeDirective
 An application might use the activeGroupCount method to get an estimate of how big the array should be, however if the array is too short to hold all the thread groups, the extra thread groups are silently ignored.	__label__AlternativeDirective
 To find deadlocks involving both object monitors and ownable synchronizers, the {@link #findDeadlockedThreads findDeadlockedThreads} method should be used.	__label__AlternativeDirective
 Note that ReferenceIdentityMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using {@link java.util.Collections#synchronizedMap}.	__label__AlternativeDirective
 This list implementation utilises a tree structure internally to ensure that all insertions and removals are O(log n). This provides much faster performance than both an ArrayList and a LinkedList where elements are inserted and removed repeatedly from anywhere in the list.	__label__AlternativeDirective
 Note that this method can be used to circumvent the map's value type at runtime.	__label__AlternativeDirective
 WARNING: This method is binary incompatible with Commons Collections 2.1 and 2.1.1. Use EmptyListIterator.INSTANCE for compatability with Commons Collections 2.1.1.	__label__AlternativeDirective
 @return the Collection of values removed, implementations should return null for no mapping found, but may return an empty collection	__label__AlternativeDirective
 Like most collection implementations, EnumSet is not synchronized. If multiple threads access an enum set concurrently, and at least one of the threads modifies the set, it should be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the enum set. If no such object exists, the set should be "wrapped" using the {@link Collections#synchronizedSet} method.	__label__AlternativeDirective
 This method has been replaced by {@link ITextViewerExtension2#prependAutoEditStrategy(IAutoEditStrategy, String)} and {@link ITextViewerExtension2#removeAutoEditStrategy(IAutoEditStrategy, String)}.	__label__AlternativeDirective
 . New users of this class should use isEmpty instead.	__label__AlternativeDirective
 Use {@link #allPredicateinstead	__label__AlternativeDirective
 If the object has a custom mapping (is of a class implementing the interface SQLData), the JDBC driver should call the method SQLData.writeSQL to write it to the SQL data stream. If, on the other hand, the object is of a class implementing Ref, Blob, Clob, NClob, Struct, java.net.URL, or Array, the driver should pass it to the database as a value of the corresponding SQL type.	__label__AlternativeDirective
 If a lookup of the name service is required, call {@link #getCanonicalHostName() getCanonicalHostName}.	__label__AlternativeDirective
 In case the client does not explicitly initialize the KeyPairGenerator (via a call to an initialize method), each provider must supply (and document) a default initialization.	__label__AlternativeDirective
 Add operations require the use of a pluggable strategy. If no strategy is provided then add is unsupported.	__label__AlternativeDirective
 If the caller adds its own columns, uses Table.setHeadersVisible(true), or needs to handle dynamic resizing of the table, it is recommended to create the Table itself, specifying the SWT.CHECK style bit (along with any other style bits needed), and use new CheckboxTableViewer(Table) rather than this constructor.	__label__AlternativeDirective
 This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.	__label__AlternativeDirective
 @deprecated This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.	__label__AlternativeDirective
 @deprecated This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.	__label__AlternativeDirective
 @deprecated This method does not automatically escape characters that are illegal in URLs. It is recommended that new code convert an abstract pathname into a URL by first converting it into a URI, via the {@link #toURI() toURI} method, and then converting the URI into a URL via the {@link java.net.URI#toURL() URI.toURL} method.	__label__AlternativeDirective
 Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.	__label__AlternativeDirective
 It may be more efficient to read the Pack200 archive to a file and pass the File object, using the alternate method described below.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of setAsciiStream which takes a length parameter.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of updateBlob which takes a length parameter.	__label__AlternativeDirective
 This method is only included for backwards compatibility. The caller is encouraged to use one of the alternative getInstance methods to obtain a SecureRandom object, and then call the generateSeed method to obtain seed bytes from that object.	__label__AlternativeDirective
 Clients are encouraged to use create/destroyResource and downcast the result to Image rather than using createImage.	__label__AlternativeDirective
 Clients are encouraged to use the value returned from this method instead of constructing a new instance to reduce allocation and garbage collection overhead when multiple BooleanComparators may be used in the same virtual machine.	__label__AlternativeDirective
 NOTE #updateElement(int index) can be used to determine selection values.	__label__AlternativeDirective
 SimpleDateFormat allows you to start by choosing any user-defined patterns for date-time formatting. However, you are encouraged to create a date-time formatter with either getTimeInstance, getDateInstance, or getDateTimeInstance in DateFormat.	__label__AlternativeDirective
 If only the given element needs updating, it is more efficient to use the update methods.	__label__AlternativeDirective
 Consult your JDBC driver documentation to determine if it might be more efficient to use a version of setNCharacterStream which takes a length parameter.	__label__AlternativeDirective
 Note that the static convenience method getImage is also provided on this class.	__label__AlternativeDirective
 This class is intended as an alternative to the JFace ListViewer, which displays its content in a combo box rather than a list.	__label__AlternativeDirective
 May fail spuriously and does not provide ordering guarantees, so is only rarely an appropriate alternative to { compareAndSet}.	__label__AlternativeDirective
 May fail spuriously and does not provide ordering guarantees, so is only rarely an appropriate alternative to { compareAndSet}.	__label__AlternativeDirective
 If the default behavior is not desired, then a Java security property can be set to a different Time-to-live (TTL) value for positive caching.	__label__AlternativeDirective
 This is best done at creation time, to prevent accidental unsynchronized access:   Set<MyEnum> s = Collections.synchronizedSet(EnumSet.noneOf(MyEnum.class));	__label__AlternativeDirective
 In all cases, before this method can return the current thread must re-acquire the lock associated with this condition.	__label__SynchronizationDirective
 If multiple threads access a format concurrently, it must be synchronized externally.	__label__SynchronizationDirective
 This method is NOT thread-safe in any special way. You must manually synchronize on either this class or the stream as required.	__label__SynchronizationDirective
 Each bucket in the hash table has its own monitor, so two threads can safely operate on the map at the same time, often without incurring any monitor contention.	__label__SynchronizationDirective
 Iterators must be manually synchronized:   synchronized (coll) {    Iterator it = coll.iterator();    // do stuff with iterator  }	__label__SynchronizationDirective
 It is imperative that the user manually synchronize on the returned bag when iterating over it:   Bag bag = BagUtils.synchronizedBag(new HashBag());  ...  synchronized(bag) {      Iterator i = bag.iterator(); // Must be in synchronized block      while (i.hasNext())          foo(i.next());      }  }	__label__SynchronizationDirective
 Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.	__label__SynchronizationDirective
 Concurrent modifications are not directly supported, and for most collection implementations will throw a ConcurrentModificationException.	__label__SynchronizationDirective
 Note that ReferenceIdentityMap is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 Note that Flat3Map is not synchronized and is not thread-safe. If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization.	__label__SynchronizationDirective
 If multiple threads access a linked hash map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally.	__label__SynchronizationDirective
 A multi-threaded application should either allocate multiple packer engines, or else serialize use of one engine with a lock.	__label__SynchronizationDirective
 You must manually synchronize on the returned buffer's iterator to avoid non-deterministic behavior:	__label__SynchronizationDirective
 An implementation is required to clearly document the semantics and guarantees provided by each of the waiting methods, and when an implementation does support interruption of thread suspension then it must obey the interruption semantics as defined in this interface.	__label__SynchronizationDirective
 @param sortOrder new sort order. The comparator must be able to support being used in a background thread.	__label__SynchronizationDirective
 This method may be called on a non-UI thread.	__label__SynchronizationDirective
 Memory consistency effects: As with other concurrent collections, actions in a thread prior to placing an object into a { ConcurrentMap} as a key or value happen-before actions subsequent to the access or removal of that object from the { ConcurrentMap} in another thread.	__label__SynchronizationDirective
 If an implementation provides such specialized semantics then the implementation must document those semantics.	__label__MiscellaneousDirective
 Serializable classes that need to designate an alternative object to be used when writing an object to the stream should implement this special method with the exact signature:   ANY-ACCESS-MODIFIER Object writeReplace() throws ObjectStreamException;	__label__MiscellaneousDirective
 First, if the strings to be collated contain combining sequences that may not be in canonical order, you should set the collator to CANONICAL_DECOMPOSITION or FULL_DECOMPOSITION to enable sorting of combining sequences.	__label__MiscellaneousDirective
 Enumerations returned via the elements method are not fail-fast. Modifications to a collection should not be performed while enumerating over that collection.	__label__MiscellaneousDirective
 If it is critical to obtain every active thread in this thread group, the caller should verify that the returned int value is strictly less than the length of list.	__label__MiscellaneousDirective
 If it is critical to obtain every active subgroup in this thread group, the caller should verify that the returned int value is strictly less than the length of list.	__label__MiscellaneousDirective
 The circumstances and the exception type must be documented by that { Lock} implementation.	__label__MiscellaneousDirective
 Implementers should ignore the text returned by {@link IInformationProvider#getInformation(ITextViewer, IRegion)}.	__label__MiscellaneousDirective
 In order both to sign and to pack a JAR, you must first pack and unpack the JAR to "normalize" it, then compute signatures on the unpacked JAR elements, and finally repack the signed JAR.	__label__MiscellaneousDirective
 If they are not then they must not be changed after adding to the MultiKey.	__label__MiscellaneousDirective
 Callers should re-check the conditions which caused the thread to park in the first place.	__label__MiscellaneousDirective
 Callers should re-check the conditions which caused the thread to park in the first place.	__label__MiscellaneousDirective
 Implementations should allow a value to be looked up from a key and a key to be looked up from a value with equal performance.	__label__MiscellaneousDirective
 Finally, unlike {@link java.util.HashMap}-style implementations, this class never rehashes the map. The number of buckets is fixed at construction time and never altered. Performance may degrade if you do not allocate enough buckets upfront.	__label__MiscellaneousDirective
 In general WARNING messages should describe events that will be of interest to end users or system managers, or which indicate potential problems.	__label__MiscellaneousDirective
 Note that this implementation requires linear time in the size of the map;	__label__MiscellaneousDirective
invoked mouse button ha pressed component	__label__nonDir
color gray	__label__nonDir
creates toolkit implementation scrollpane using specified peer interface	__label__nonDir
creates new atomiclong initial value	__label__nonDir
constant old turkic unicode character block	__label__nonDir
return array mouse listener registered trayicon	__label__nonDir
scheduledexecutorservice subinterface associated interface add support delayed periodic task execution	__label__nonDir
description copied class componentui	__label__nonDir
update linebreakmeasurer single character deleted text set current position beginning paragraph	__label__nonDir
represents method constructor initializer static instance class interface including annotation type element	__label__nonDir
platform managed object jmx mxbean monitoring managing component java platform	__label__nonDir
superclass class describing stream decoded encoded	__label__nonDir
merely serf group provide type safety private key interface	__label__nonDir
return parameter string identifying event	__label__nonDir
package implement dom-specific transformation apis	__label__nonDir
instantiates register mbean mbean server	__label__nonDir
may also contain string describing exception	__label__nonDir
creates toolkit implementation checkboxmenuitem using specified peer interface	__label__nonDir
package specification javatm cryptography architecture jca reference guide pkcs private-key information syntax standard version november javatm cryptography architecture standard algorithm name documentation related documentation documentation please see javatm se platform security architecture implement provider javatm cryptography architecture default policy implementation policy file syntax permission javatm se development kit jdk summary tool javatm platform security keytool solaris/linux window jarsigner solaris/linux window	__label__nonDir
return extended modifier mask event	__label__nonDir
consistent equal defined comparable	__label__nonDir
initializes editor specified item	__label__nonDir
information helper file see generated file helper file	__label__nonDir
org/omg/corba/doubleseqhelper.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00 class definition ha modified conform following omg specification orb core defined corba formal/99-10-07 idl/java language mapping defined ptc/00-01-08	__label__nonDir
obtains clock return current instant ticking whole second using best available system clock	__label__nonDir
org/omg/corba/longlongseqholder.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00	__label__nonDir
return whether dynamic layout container resize currently active set program isdynamiclayoutset supported underlying operating system and/or window manager	__label__nonDir
check whether component contains specified point point x coordinate defined relative coordinate system component	__label__nonDir
org/omg/corba/longseqholder.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00	__label__nonDir
attribute key input method highlight style	__label__nonDir
interceptor intended mean orb service gain access orb processing effectively becoming part orb	__label__nonDir
return stream producing given streamsize number pseudorandom long conforming given origin inclusive bound exclusive	__label__nonDir
file resource named meta-inf/mime.types	__label__nonDir
class provides functionality cryptographic cipher encryption decryption	__label__nonDir
deprecated	__label__nonDir
get value requested unit	__label__nonDir
exchanger allows two thread exchange object rendezvous point useful several pipeline design	__label__nonDir
policy object responsible determining whether code executing java runtime environment ha permission perform security-sensitive operation	__label__nonDir
object used request operation specify context object context string must resolved sent along request invocation	__label__nonDir
return array component listener registered component	__label__nonDir
rowsetreader.readdata rowsetinternal	__label__nonDir
thereafter used within context method dispatched poa obtain poa objectid identify object operation wa invoked	__label__nonDir
request information accessible client-side request interceptor	__label__nonDir
description copied class componentui	__label__nonDir
creates default cell editor	__label__nonDir
method called filteredrowset object check whether value lie filtering criterion set using setfilter method	__label__nonDir
creates new empty map default initial table size	__label__nonDir
constant f1 function key	__label__nonDir
creates new atomicintegerarray given length element initially zero	__label__nonDir
set visibility popup	__label__nonDir
provides class interface input method framework	__label__nonDir
creates new tool bar orientation default horizontal	__label__nonDir
compare two activation id content equality	__label__nonDir
package contains class exception dynany interface dynamicany module specified omg common object request broker architecture specification http cgi.omg.org/cgi-bin/doc formal/99-10-07 section	__label__nonDir
description copied class basicarrowbutton	__label__nonDir
height use display row	__label__nonDir
parameter observer contentobserver object get notified content backing cursor change	__label__nonDir
information threading issue event dispatch machinery see awt threading issue	__label__nonDir
visit type element	__label__nonDir
management interface logging facility	__label__nonDir
allows programmer construct object implementation portable different orb product	__label__nonDir
color green	__label__nonDir
visit executable element dispatching visit method specific kind executable constructor instance_init method static_init	__label__nonDir
management interface logging facility	__label__nonDir
attribute key superscripting subscripting	__label__nonDir
helper idltype	__label__nonDir
used paint treecellrenderer	__label__nonDir
class used represent jar file entry	__label__nonDir
horizontal horizontal line drawn dividing child root node	__label__nonDir
index term view	__label__nonDir
construct mousewheelevent object specified source component type modifier coordinate absolute coordinate scroll type scroll amount wheel rotation	__label__nonDir
mbean whose management interface determined reflection java interface emits notification	__label__nonDir
array provides static method dynamically create access array	__label__nonDir
constant mathematical operator unicode character block	__label__nonDir
set designated parameter inputstream object	__label__nonDir
constant define private member valuemember class	__label__nonDir
creates new event passed selectionlisteners	__label__nonDir
sequence number used detect late clean call	__label__nonDir
return copy duration specified duration standard hour day subtracted	__label__nonDir
map javabean property xml element derived property name	__label__nonDir
xml namespace processing	__label__nonDir
namedvalue object also used context object routine pas list property name value	__label__nonDir
synchronizes toolkit graphic state	__label__nonDir
constant tagalog unicode character block	__label__nonDir
set designated parameter reader object	__label__nonDir
package javax.print.attribute.standard contains class specific printing attribute	__label__nonDir
get current value position	__label__nonDir
modelmbeanoperationinfo object describes management operation modelmbean	__label__nonDir
class provides constant used identify type interface repository object	__label__nonDir
refer awt threading issue detail awt threading model	__label__nonDir
service provider class class java.util package	__label__nonDir
contains class interface used jfilechooser component	__label__nonDir
return array constructor object reflecting constructor declared class represented class object	__label__nonDir
please see xmlencoder	__label__nonDir
addcomponent tf1 addcomponent tf2 layout.sethorizontalgroup hgroup create sequential group vertical axis	__label__nonDir
provides class print parse date time	__label__nonDir
return rollover state	__label__nonDir
description copied class componentevent	__label__nonDir
provides method input output value type contains update org/omg/corba/portable package	__label__nonDir
normal border original border wa installed child component wa added toolbar	__label__nonDir
common query implementation method reference localdate zoneid	__label__nonDir
may also contain string describing exception	__label__nonDir
visit int value annotation	__label__nonDir
return whether location represents insert column	__label__nonDir
constant tibetan unicode character block	__label__nonDir
embedded bitmap location	__label__nonDir
aligns top graphic top line	__label__nonDir
contains minor code give detailed information caused exception completion status	__label__nonDir
return jtree specified treenode root display root node decides whether node leaf node specified manner	__label__nonDir
saturday july pdt	__label__nonDir
provides class interface supporting server side rmi	__label__nonDir
protected field implementation specific	__label__nonDir
return method object reflects specified declared method class interface represented class object	__label__nonDir
justify line full requested width	__label__nonDir
helper namevaluepair	__label__nonDir
possible vaues param_in represents parameter	__label__nonDir
allows dynamic handling object invocation	__label__nonDir
provides interface class capture processing playback sampled audio data	__label__nonDir
see unmarshal event callback overview	__label__nonDir
configures specified component appropriate metal look feel	__label__nonDir
exception class used signaling run-time failure reading writing operation	__label__nonDir
computes hashcode iterator	__label__nonDir
information object monitor lock	__label__nonDir
information helper file see generated file helper file	__label__nonDir
return position mouse pointer component coordinate space component directly mouse pointer otherwise return null	__label__nonDir
multiple master supplementary data	__label__nonDir
concurrenthashmap concurrent	__label__nonDir
org/omg/cosnaming/namingcontextpackage/notfoundhelper.java	__label__nonDir
ansi-style join providing left outer join two table	__label__nonDir
provides class interface rmi distributed garbage-collection dgc	__label__nonDir
componentorientation class encapsulates language-sensitive orientation used order element component text	__label__nonDir
detail see thread swing section java tutorial	__label__nonDir
class hierarchy package used model java programming language	__label__nonDir
return position end next layout	__label__nonDir
provides class allowing processing xml document	__label__nonDir
encapsulates processing state poa associated	__label__nonDir
logmanager object manages hierarchical namespace logger object	__label__nonDir
method check whether length le zero	__label__nonDir
get inset screen	__label__nonDir
gridbagconstraints class specifies constraint component laid using gridbaglayout class	__label__nonDir
heaviest predefined weight	__label__nonDir
similar range however method refines result using temporal	__label__nonDir
package provides number image producer consumer filter configure image processing need	__label__nonDir
implementation call defaultaction	__label__nonDir
represents runtime exception thrown mbean method agent	__label__nonDir
set current parse position	__label__nonDir
replaces currently selected content new content represented given string	__label__nonDir
weak reference object prevent referent made finalizable finalized reclaimed	__label__nonDir
check unit represents component time	__label__nonDir
package contains class used store x500 principal x500 private credential subject	__label__nonDir
return int together value range shaped	__label__nonDir
return subset table array byte specified tag	__label__nonDir
holder typecode	__label__nonDir
line_axis component laid way word laid line based container componentorientation property	__label__nonDir
array string	__label__nonDir
simple visitor program element default behavior appropriate release_8 source version	__label__nonDir
programmer need method provided benefit jre	__label__nonDir
type object adapter state	__label__nonDir
method handle string format used represent octal hexadecimal number	__label__nonDir
color red	__label__nonDir
remove designated object rowset object list listener	__label__nonDir
notification emitted mbean forwarded listener	__label__nonDir
org/omg/iop/ior.java	__label__nonDir
provides stax-specific transformation apis	__label__nonDir
map enum type enum xml representation	__label__nonDir
poa required preserve policy registered orbinitinfo manner	__label__nonDir
identifies latin-1 european extended range latin-1 european decimal base	__label__nonDir
org/omg/corba/idltypehelper.java generated idl-to-java compiler portable version ir.idl june o'clock gmt+00:00	__label__nonDir
return current value reference mark	__label__nonDir
holder ulongseq	__label__nonDir
wake one waiting thread	__label__nonDir
helper policy	__label__nonDir
visit long value annotation	__label__nonDir
may also contain string describing exception	__label__nonDir
specified default value	__label__nonDir
constant mathematical alphanumeric symbol unicode character block	__label__nonDir
filter used provide fine grain control logged beyond control provided log level	__label__nonDir
creates toggle button specified text selection state	__label__nonDir
visit package element	__label__nonDir
return highlighted text color current theme	__label__nonDir
indicates reason able resolve	__label__nonDir
constructor concrete subclass call	__label__nonDir
package specification precise list supported section official specification java tm platform standard edition orb complies see official specification corba support java tm se	__label__nonDir
org/omg/cosnaming/namingcontextpackage/alreadyboundhelper.java	__label__nonDir
intalls subcomponents tree renderer pane	__label__nonDir
return screen resolution dots-per-inch	__label__nonDir
return constructor object reflects specified constructor class interface represented class object	__label__nonDir
duration represents directed distance two point time-line	__label__nonDir
get number character used expand tab	__label__nonDir
please see xmlencoder	__label__nonDir
adapter manager identifier	__label__nonDir
xmlaccessortype xmlaccesstype.public_member	__label__nonDir
describes mbean attribute exposed management	__label__nonDir
org/omg/corba/doubleseqholder.java generated idl-to-java compiler portable version streams.idl may o'clock gmt+00:00	__label__nonDir
interface used model java programming language type	__label__nonDir
allow line justified	__label__nonDir
apis provided use rmi-iiop application provide equivalent semantics running either iiop jrmp	__label__nonDir
portable orb service implementation register instance policyfactory interface orb initialization order enable policy type constructed using corba.orb.create_policy	__label__nonDir
creates return object responsible updating treestate node expanded state change	__label__nonDir
see specification method paint interface information null parameter handling	__label__nonDir
